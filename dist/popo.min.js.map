{"version":3,"file":"popo.min.js","sources":["../src/utils/util.js","../src/dom/dom.js","../src/dom/dom_event.js","../src/popo/core/layout.js","../src/popo/core/panel.js","../src/popo/core/dev.js","../src/popo/core/popo.js","../src/constant/constant.js","../src/utils/browser.js","../src/constant/error.js","../src/dom/vdom/vnode.js","../src/popo/options/popo.js","../src/popo/options/style.js","../src/dom/vdom/vsvg_base.js","../src/dom/vdom/vsvg.js","../src/popo/options/panel.js","../src/popo/handle/drag.js","../src/popo/handle/resize.js","../src/popo/handle/wheelzoom.js","../src/popo/index.js","../src/index.js"],"sourcesContent":["let lastId = 0;\r\n\r\nexport function stamp(obj) {\r\n    /*eslint-disable */\r\n    obj._popo_id = obj._popo_id || ++lastId;\r\n\r\n    return obj._popo_id;\r\n    /*eslint-enable */\r\n}\r\n\r\nexport function bind(fn, obj) {\r\n    if (!obj) return fn;\r\n    const slice = Array.prototype.slice,\r\n        args = slice.call(arguments, 2);\r\n\r\n    if (fn.bind) {\r\n        return fn.bind.apply(fn, slice.call(arguments, 1));\r\n    }\r\n\r\n    return function _fn() {\r\n        return fn.apply(obj, args.length ? args.concat(slice.call(arguments)) : arguments);\r\n    };\r\n}\r\n\r\nexport function extend(dest) {\r\n    for (let j = 1, len = arguments.length; j < len; j++) {\r\n        const src = arguments[j];\r\n\r\n        for (const i in src) {\r\n            dest[i] = src[i];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nexport function legalNumber(v, min, max) {\r\n    if (!isNumber(v)) {\r\n        return v;\r\n    }\r\n    if (isNumber(min)) {\r\n        if (v < min) return min;\r\n    }\r\n    if (isNumber(max)) {\r\n        if (v > max) return max;\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nexport function trim(str) {\r\n\r\n    if (!isString(str)) { return str; }\r\n\r\n    return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\nexport function splitWords(str) {\r\n    return trim(str).split(/\\s+/);\r\n}\r\n\r\nfunction type(o, t) {\r\n    return (Object.prototype.toString.call(o) === `[object ${t}]`);\r\n}\r\n\r\nexport function isArray(obj) { return type(obj, 'Array'); }\r\n\r\nexport function isString(obj) { return type(obj, 'String'); }\r\n\r\nexport function isNumber(obj) { return type(obj, 'Number'); }\r\n\r\nexport function isFunction(obj) { return type(obj, 'Function'); }\r\n\r\nexport function isObject(obj) { return type(obj, 'Object'); }\r\n\r\nexport function isEmptyObject(e) {\r\n    if (!isObject(e)) return false;\r\n\r\n    for (const t in e) {\r\n        return !1;\r\n    }\r\n\r\n    return !0;\r\n}\r\n\r\nexport function validateNumber(num) {\r\n    return !isNaN(Number(num));\r\n}\r\n\r\nexport function mixin(obj, sources) {\r\n    if (isObject(sources)) {\r\n        for (const key in sources) {\r\n            if (isObject(sources[key])) {\r\n                if (!isObject(obj[key])) {\r\n                    obj[key] = {};\r\n                }\r\n                mixin(obj[key], sources[key]);\r\n            } else {\r\n                obj[key] = sources[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport function mixins(obj, sourcesArr) {\r\n    if (isArray(sourcesArr)) {\r\n        sourcesArr.forEach((source) => { mixin(obj, source); });\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport function getObjectFromArray(arr, key, value) {\r\n    return arr.filter((i) => i[key] === value)[0];\r\n}\r\n\r\nexport function removeObjectFromArray(arr, key, value) {\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        if (arr[i][key] === value) {\r\n            return arr.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nexport function get(dom) {\r\n    return dom && typeof dom === 'string' ? document.getElementById(dom) : dom;\r\n}\r\n\r\nfunction _isDOM1(obj) {\r\n    return obj instanceof HTMLElement;\r\n}\r\n\r\nfunction _isDOM2(obj) {\r\n    return !!obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';\r\n}\r\n\r\nexport const isDOM = (typeof HTMLElement === 'object') ? _isDOM1 : _isDOM2;\r\n\r\nexport function cloneJsonObject(obj) {\r\n    return isObject(obj) ? JSON.parse(JSON.stringify(obj)) : obj;\r\n}\r\n\r\nexport function merge(target, source) {\r\n    const copyObj = {},\r\n        copyFuns = {};\r\n\r\n    for (const key in target) {\r\n        if (!isFunction(target[key])) {\r\n            copyObj[key] = target[key];\r\n        } else {\r\n            copyFuns[key] = target[key];\r\n        }\r\n    }\r\n    /*eslint-disable */\r\n    const newObj = mixin(JSON.parse(JSON.stringify(copyObj)), source);\r\n    /*eslint-enable */\r\n    for (const key in copyFuns) {\r\n        newObj[key] = copyFuns[key];\r\n    }\r\n\r\n    return newObj;\r\n}\r\n\r\nexport function getPercentage(number, init) {\r\n    return legalNumber(number || init || 0, 0, 1) * 100;\r\n}\r\n\r\nexport function capitalize(str) {\r\n    return isString(str) ? (str.charAt(0).toUpperCase() + str.slice(1)) : str;\r\n};\r\n\r\nexport function reverseCamelcase(n) {\r\n    return n.replace(/[A-Z]/g, (l) => `-${l.toLowerCase()}`);\r\n}\r\n\r\nexport function camelize(target) {\r\n    if (!target || (target.indexOf('-') < 0 && target.indexOf('_') < 0)) {\r\n        return target;\r\n    }\r\n\r\n    return target.replace(/[-_][^-_]/g, (match) => match.charAt(1).toUpperCase());\r\n}\r\n\r\nexport function unique(array) {\r\n    const r = [];\r\n\r\n    for (let i = 0, l = array.length; i < l; i++) {\r\n        for (let j = i + 1; j < l; j++) {\r\n            if (array[i] === array[j]) j = ++i;\r\n        }\r\n        r.push(array[i]);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport function firstUpperCase(str) {\r\n    return str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\r\n}\r\n\r\nexport function isPercentage(num) {\r\n    return (isString(num) && num.indexOf('%') > 0) || (num >= -1 && num <= 1);\r\n}\r\n\r\nexport function translatePercentage(num) {\r\n\r\n    if (isString(num)) {\r\n        const index = num.indexOf('%');\r\n\r\n        if (index > 0) {\r\n            return Number(num.substring(0, index)) / 100;\r\n        }\r\n\r\n        if (validateNumber(num)) {\r\n            return Number(num);\r\n        }\r\n\r\n    }\r\n\r\n    return num;\r\n}\r\n\r\nexport function translateNumberToPercentage(num) {\r\n    return `${num * 100}%`;\r\n}\r\n\r\nexport function contain(arr, item) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] === item) { return i; }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\nexport function throttle(fn, time, context) {\r\n    let lock = null,\r\n        args = null;\r\n\r\n    function later() {\r\n        lock = false;\r\n        if (args) {\r\n            wrapperFn.apply(context, args);\r\n            args = false;\r\n        }\r\n    }\r\n\r\n    function wrapperFn() {\r\n        if (lock) {\r\n            args = arguments;\r\n        } else {\r\n            fn.apply(context, arguments);\r\n            setTimeout(later, time);\r\n            lock = true;\r\n        }\r\n    }\r\n\r\n    return wrapperFn;\r\n}\r\n\r\nexport function formatNum(num, digits) {\r\n    const pow = Math.pow(10, digits || 5);\r\n\r\n    return Math.round(num * pow) / pow;\r\n}\r\n\r\n// 56, 56%, 0, 1, 0.5\r\nexport function formatNumber(n) {\r\n    if (isNumber(n) && !isNaN(n)) {\r\n        return n;\r\n    }\r\n    if (isString(n)) {\r\n        if (validateNumber(n)) return Number(n);\r\n\r\n        return translatePercentage(n);\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nexport function getCssSize(size, scale) {\r\n    scale = scale || 1;\r\n    if (isString(size)) {\r\n        if (size.indexOf('%') > 0) {\r\n            return size;\r\n        }\r\n        if (size.indexOf('px') > 0) {\r\n            return `${getPureValue(size) * scale}px`;\r\n        }\r\n        if (validateNumber(size)) {\r\n            return `${Number(size) * scale}px`;\r\n        }\r\n    }\r\n    if (validateNumber(size)) {\r\n        return `${size * scale}px`;\r\n    }\r\n\r\n    return '0px';\r\n}\r\n\r\nexport function multiplyBy(n, m) {\r\n    n = formatNumber(n);\r\n    m = m || 1;\r\n    if (n === 0) return n;\r\n    if (n <= 1) {\r\n        return m * n;\r\n    }\r\n    if (n > 1) {\r\n        return n;\r\n    }\r\n\r\n    return n;\r\n}\r\n\r\nexport function getPureValue(val) {\r\n    if (isString(val) && val.indexOf('px') > 0) {\r\n        val = trim(val);\r\n\r\n        return Number(val.substring(0, val.indexOf('px')));\r\n    }\r\n\r\n    return val;\r\n}\r\n\r\nexport function formatMargin(margin, scale) {\r\n    scale = scale || 1;\r\n    if (!margin) {\r\n        margin = '0 0';\r\n    }\r\n    if (isString(margin)) {\r\n        const p = splitWords(margin).map((m) => getPureValue(m));\r\n\r\n        if (isArray(p)) {\r\n            if (p.length === 4) {\r\n                return {\r\n                    top: Number(p[0]) * scale,\r\n                    right: Number(p[1]) * scale,\r\n                    bottom: Number(p[2]) * scale,\r\n                    left: Number(p[3]) * scale,\r\n                };\r\n            }\r\n            if (p.length === 2) {\r\n                return {\r\n                    top: Number(p[0]) * scale,\r\n                    right: Number(p[1]) * scale,\r\n                    bottom: Number(p[0]) * scale,\r\n                    left: Number(p[1]) * scale,\r\n                };\r\n            }\r\n            if (p.length === 1) {\r\n                margin = Number(margin);\r\n            }\r\n        }\r\n    }\r\n    if (isNumber(margin) && margin >= 0) {\r\n        return {\r\n            top: margin * scale,\r\n            right: margin * scale,\r\n            bottom: margin * scale,\r\n            left: margin * scale,\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction _getScaleMargin(margin, scale) {\r\n    scale = scale || 1;\r\n    if (margin && isString(margin)) {\r\n        if (margin.indexOf('%') > 0) {\r\n            return `${translatePercentage(margin) * 100}%`;\r\n        }\r\n        if (margin.indexOf('px') > 0) {\r\n            return `${Number(getPureValue(margin)) * scale}px`;\r\n        }\r\n    }\r\n    if (validateNumber(margin)) {\r\n        return `${Number(margin) * scale}px`;\r\n    }\r\n\r\n    return '0px';\r\n}\r\n\r\nexport function formatMargin2(margin, scale) {\r\n    if (!margin) {\r\n        margin = '0 0';\r\n    }\r\n    scale = scale || 1;\r\n    if (validateNumber(margin)) {\r\n        margin = String(margin);\r\n    }\r\n    let p = [];\r\n\r\n    if (isString(margin)) {\r\n        p = splitWords(margin);\r\n\r\n        if (p.length === 2) {\r\n            p = p.concat([p[0], p[1]]);\r\n        }\r\n        if (p.length === 3) {\r\n            p.push(p[2]);\r\n        }\r\n        if (p.length === 1) {\r\n            p = p.concat([p[0], p[0], p[0]]);\r\n        }\r\n    }\r\n\r\n    return p.length === 4 ? {\r\n        top: _getScaleMargin(p[0], scale),\r\n        right: _getScaleMargin(p[1], scale),\r\n        bottom: _getScaleMargin(p[2], scale),\r\n        left: _getScaleMargin(p[3], scale),\r\n    } : null;\r\n}\r\n","import {\r\n    isString, isDOM, isObject, splitWords, bind, trim, isFunction,\r\n    validateNumber, isEmptyObject, camelize, reverseCamelcase,\r\n} from '../utils/util';\r\nimport CT from '../constant/constant';\r\n\r\nexport function testProp(props) {\r\n    const style = document.documentElement.style;\r\n\r\n    for (let i = 0; i < props.length; i++) {\r\n        if (props[i] in style) {\r\n            return props[i];\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/*eslint-disable */\r\nexport const TRANSFORM = testProp(['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform']);\r\n\r\nexport const TRANSITION = testProp(['webkitTransition', 'transition', 'OTransition', 'MozTransition', 'msTransition']);\r\n\r\nexport const TRANSITION_END = (TRANSITION === 'webkitTransition') || (TRANSITION === 'OTransition')\r\n    ? TRANSITION + 'End' : 'transitionend';\r\n\r\n/*eslint-enable */\r\n\r\nexport function getClass(el) {\r\n    if (!isDOM(el)) return null;\r\n\r\n    return el.className.baseVal === undefined ? el.className : el.className.baseVal;\r\n}\r\n\r\nexport function hasClass(el, name) {\r\n    if (!isDOM(el) && !name) return false;\r\n    if (el.classList !== undefined) {\r\n        return el.classList.contains(name);\r\n    }\r\n    const className = getClass(el);\r\n\r\n    /*eslint-disable */\r\n    return className.length > 0 && new RegExp('(^|\\\\s)' + name + '(\\\\s|$)').test(className);\r\n    /*eslint-enable */\r\n}\r\n\r\nexport function setClass(el, name) {\r\n    if (el.className.baseVal === undefined) {\r\n        el.className = name;\r\n    } else {\r\n        el.className.baseVal = name;\r\n    }\r\n}\r\n\r\nexport function addClass(el, name) {\r\n    if (!isDOM(el) || !name) return;\r\n    if (el.classList !== undefined) {\r\n        const classes = splitWords(name);\r\n\r\n        for (let i = 0, len = classes.length; i < len; i++) {\r\n            el.classList.add(classes[i]);\r\n        }\r\n    } else if (!hasClass(el, name)) {\r\n        const className = getClass(el);\r\n\r\n        setClass(el, (className ? `${className} ` : '') + name);\r\n    }\r\n}\r\n\r\nexport function removeClass(el, names) {\r\n    if (!isDOM(el) || !names) return;\r\n    names = splitWords(names);\r\n    names.forEach((name) => {\r\n        if (el.classList !== undefined) {\r\n            el.classList.remove(name);\r\n        } else {\r\n            const cls = getClass(el);\r\n\r\n            setClass(el, trim((` ${cls} `).replace(` ${name} `, ' ')));\r\n        }\r\n    });\r\n}\r\n\r\nexport function setStyle(dom, styles, addOn) {\r\n    if (!isDOM(dom) || isEmptyObject(styles)) return;\r\n    for (const key in styles) {\r\n        let _key = key;\r\n\r\n        if (addOn && _key) {\r\n            _key = camelize(_key);\r\n            _key = testProp([_key, `webkit${_key}`, `moz${_key}`, `ms${_key}`, `o${_key}`]);\r\n        }\r\n        if (_key && styles[_key] !== null && styles[_key] !== undefined) {\r\n            dom.style[_key] = styles[_key];\r\n        }\r\n    }\r\n}\r\n\r\nexport function css(el, styles) {\r\n\r\n    if (isDOM(el) && styles) {\r\n        if (isString(styles)) {\r\n            return getStyle(el, reverseCamelcase(styles));\r\n        }\r\n        if (!isEmptyObject(styles)) {\r\n            setStyle(el, styles, true);\r\n\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function create(tag, classnames, styles, container) {\r\n    const el = document.createElement(tag || 'div');\r\n\r\n    if (classnames) {\r\n        addClass(el, classnames);\r\n    }\r\n    if (isObject(styles)) {\r\n        css(el, styles);\r\n    }\r\n    if (isDOM(container)) {\r\n        container.appendChild(el);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\nexport function html(el, html) {\r\n    if (isDOM(el)) {\r\n        if (isString(html)) {\r\n            el.innerHTML = html;\r\n        }\r\n        if (html && isDOM(html)) {\r\n            el.appendChild(html);\r\n        }\r\n        if (html === undefined) {\r\n            return el.innerHTML;\r\n        }\r\n    }\r\n}\r\n\r\nexport function isHidden(el) {\r\n    return isDOM(el) && getStyle(el, 'display') === 'none';\r\n}\r\n\r\nfunction addHStyle(css) {\r\n    if (!isString(css)) return;\r\n    const head = document.querySelector('head');\r\n\r\n    if (head) {\r\n        const oldStyle = head.querySelector('style');\r\n\r\n        if (oldStyle) {\r\n            oldStyle.innerHTML += css;\r\n        } else {\r\n            const style = document.createElement('style'),\r\n                node = document.querySelector('link');\r\n\r\n            style.type = 'text/css';\r\n            style.innerHTML = css;\r\n\r\n            if (node) {\r\n                head.insertBefore(style, node);\r\n            } else {\r\n                head.appendChild(style);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeByClass(classname, container) {\r\n    Array.prototype.forEach.call((container || document).querySelectorAll(`.${classname}`), (el) => {\r\n        if (isDOM(el)) el.parentNode.removeChild(el);\r\n    });\r\n}\r\n\r\nexport function removeByRole(attr, container) {\r\n    Array.prototype.forEach.call((container || document).querySelectorAll(`[${CT.ROLE}=\"${attr}\"]`), (el) => {\r\n        if (isDOM(el)) el.parentNode.removeChild(el);\r\n    });\r\n}\r\n\r\nexport function query(el, filter) {\r\n    return isDOM(el) && filter && el.querySelector(filter);\r\n}\r\n\r\nexport function eachChild(parent, fn, context) {\r\n    if (isDOM(parent)) {\r\n        fn = bind(fn, context);\r\n        Array.prototype.forEach.call(parent.childNodes, (node) => {\r\n            if (isFunction(fn) && fn(node) === false) {\r\n                return;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function attr(el, name, value) {\r\n    if (isDOM(el)) {\r\n        if (name !== undefined) {\r\n            if (value !== undefined) {\r\n                el.setAttribute(name, value);\r\n            } else {\r\n                return el.getAttribute(name);\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function getStyle(dom, key) {\r\n    if (dom && isDOM(dom)) {\r\n        if (dom.currentStyle) {\r\n            return dom.currentStyle[key];\r\n        } else if (window.getComputedStyle) {\r\n            return window.getComputedStyle(dom, null)[key];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getPureStyle(dom, key) {\r\n    if (dom) {\r\n        const style = getStyle(dom, key);\r\n\r\n        if (isString(style)) {\r\n            if (style.indexOf('px') > 0) {\r\n                return Number(style.substring(0, style.length - 2));\r\n            }\r\n            if (validateNumber(style)) {\r\n                return Number(style);\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nexport function getRect(el) {\r\n    return isDOM(el) ? el.getBoundingClientRect() : null;\r\n}\r\n\r\nexport function getTargetDataId(el) {\r\n    if (isDOM(el)) {\r\n        const id = el.getAttribute(CT.COMPONENT_ID_KEY);\r\n\r\n        if (Number(id) > 0) {\r\n            return id;\r\n        }\r\n    }\r\n    if (isObject(el)) {\r\n        if (el.getId) {\r\n            return el.getId();\r\n        }\r\n        if (el.id) {\r\n            return el.id;\r\n        }\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/*eslint-disable */\r\nexport function createPublicStyle() {\r\n    const css\r\n        = `\\/* PoPo Public Style *\\/\r\n    div[${CT.POPO}] {display:none}\r\n    div[${CT.ROLE}], div[${CT.ROLE}]:after,div[${CT.ROLE}]:before{box-sizing: border-box;}\r\n    div[data-popo-role=${CT.PANE}]{transform-origin: 0 0;-ms-transform-origin: 0 0;-webkit-transform-origin: 0 0;}\r\n    div[data-popo-role=${CT.GRID_L_C_R}]{zoom:1;position:relative;}\r\n    div[data-popo-role=${CT.GRID_L_C_R}]:after{content:'';display:block;clear:both;height:0;}\r\n    div[data-popo-role=${CT.GRID_LEFT}],div[data-popo-role=${CT.GRID_CENTER}],div[data-popo-role=${CT.GRID_RIGHT}]{float:left;position:relative;}\r\n    div[data-popo-role=${CT.GRID_FOOT}],div[data-popo-role=${CT.GRID_HEAD}] {position:relative;}\r\n    .${CT.INFO}, .${CT.EXT_PANE}{position:absolute;z-index:100;box-sizing:border-box;}\r\n    .${CT.EXT_PANE} *{box-sizing:border-box;}\r\n    .${CT.EXT_PANE}{border:2px solid rgba(0,0,0,0.2);border-radius: 2px;overflow:hidden;}\r\n    .${CT.EXT_PANE} a, .${CT.EXT_PANE} span{font: bold 18px 'Lucida Console', Monaco, monospace;width:30px;height:30px;text-align:center;display:block;border-bottom:1px solid #bbb;line-height:30px;color:#333;background-color:#ffffff;text-decoration:none;outline:none;}\r\n    .${CT.EXT_PANE} a:hover{background-color:#f2f2f2;}\r\n    .${CT.EXT_PANE} span{font-size:11px;}\r\n    `;\r\n\r\n    addHStyle(css);\r\n}\r\n/*eslint-enable */\r\n\r\ncreatePublicStyle();\r\n","import { stamp, splitWords } from '../utils/util';\r\nimport CT from '../constant/constant';\r\nimport Browser from '../utils/browser';\r\n\r\n/*eslint-disable*/\r\nconst eventsKey = CT.EVENT,\r\n    wheelPxFactor = (Browser.win && Browser.chrome) ? (2 * window.devicePixelRatio)\r\n        : (Browser.gecko ? window.devicePixelRatio : 1);\r\n/*eslint-enable*/\r\n\r\nfunction addOne(obj, type, fn, context) {\r\n    if (!obj) return null;\r\n    function handler(e) {\r\n        return fn.call(context || obj, e || window.event);\r\n    }\r\n\r\n    const id = type + stamp(fn) + (context ? `{_${stamp(context)}}` : '');\r\n\r\n    if (obj[eventsKey] && obj[eventsKey][id]) {\r\n        return this;\r\n    }\r\n\r\n    if ('addEventListener' in obj) {\r\n        obj.addEventListener(type, handler, false);\r\n    } else if ('attachEvent' in obj) {\r\n        obj.attachEvent(`on{$type}`, handler);\r\n    }\r\n\r\n    obj[eventsKey] = obj[eventsKey] || {};\r\n    obj[eventsKey][id] = handler;\r\n\r\n    return null;\r\n}\r\n\r\nfunction removeOne(obj, type, fn, context) {\r\n    if (!obj) return null;\r\n    const id = type + stamp(fn) + (context ? `{_${stamp(context)}}` : ''),\r\n        handler = obj[eventsKey] && obj[eventsKey][id];\r\n\r\n    if (!handler) {\r\n        return this;\r\n    }\r\n\r\n    if ('removeEventListener' in obj) {\r\n        obj.removeEventListener(type, handler, false);\r\n    } else if ('detachEvent' in obj) {\r\n        obj.detachEvent(`on${type}`, handler);\r\n    }\r\n    obj[eventsKey][id] = null;\r\n\r\n    return null;\r\n}\r\n\r\nexport function stopPropagation(e) {\r\n    if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n    } else if (e.originalEvent) {\r\n        e.originalEvent._stopped = true;\r\n    } else {\r\n        e.cancelBubble = true;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nexport function preventDefault(e) {\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n    } else {\r\n        e.returnValue = false;\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nexport function stop(e) {\r\n    preventDefault(e);\r\n    stopPropagation(e);\r\n\r\n    return this;\r\n}\r\n\r\nexport function on(obj, types, fn, context) {\r\n    if (obj && types) {\r\n        types = splitWords(types);\r\n        for (let i = 0, len = types.length; i < len; i++) {\r\n            addOne(obj, types[i], fn, context);\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nexport function off(obj, types, fn, context) {\r\n    if (obj) {\r\n        if (types) {\r\n            types = splitWords(types);\r\n            for (let i = 0, len = types.length; i < len; i++) {\r\n                removeOne(obj, types[i], fn, context);\r\n            }\r\n        } else {\r\n            for (const j in obj[eventsKey]) {\r\n                removeOne(obj, j, obj[eventsKey][j]);\r\n            }\r\n            delete obj[eventsKey];\r\n        }\r\n    }\r\n}\r\n\r\n/*eslint-disable */\r\nexport function getWheelDelta(e) {\r\n    return (Browser.edge) ? e.wheelDeltaY / 2 // Don't trust window-geometry-based delta\r\n        : (e.deltaY && e.deltaMode === 0) ? -e.deltaY / wheelPxFactor // Pixels\r\n            : (e.deltaY && e.deltaMode === 1) ? -e.deltaY * 20 // Lines\r\n                : (e.deltaY && e.deltaMode === 2) ? -e.deltaY * 60 // Pages\r\n                    : (e.deltaX || e.deltaZ) ? 0\r\n                        : e.wheelDelta ? (e.wheelDeltaY || e.wheelDelta) / 2 // Legacy IE pixels\r\n                            : (e.detail && Math.abs(e.detail) < 32765) ? -e.detail * 20 // Legacy Moz lines\r\n                                : e.detail ? e.detail / -32765 * 60 // Legacy Moz pages\r\n                                    : 0;\r\n}\r\n/*eslint-enable */\r\n","import {\r\n    isNumber, isArray, legalNumber, trim, isObject, isString, formatNum,\r\n} from '../../utils/util';\r\nimport { getRect } from '../../dom/dom';\r\nimport CT from '../../constant/constant';\r\nimport ERROR_MSG from '../../constant/error';\r\nimport Vnode from '../../dom/vdom/vnode';\r\n\r\nfunction sumArrFirst(arr) {\r\n    let sum = 0;\r\n\r\n    if (isArray(arr)) {\r\n        arr.forEach((a) => {\r\n            if (isNumber(a)) {\r\n                sum += a;\r\n            }\r\n            if (isArray(a) && isNumber(a[0])) {\r\n                sum += a[0];\r\n            }\r\n        });\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nfunction sumItem(o) {\r\n    const sum = sumArr(o);\r\n\r\n    return sum <= 0 ? sumArrFirst(o) : sum;\r\n}\r\n\r\nfunction sumArr(arr) {\r\n    let sum = 0;\r\n\r\n    if (isArray(arr)) {\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            if (isNumber(arr[i])) {\r\n                sum += arr[i];\r\n            } else {\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nexport function validateAllLy(ly, rows, cols, startType) {\r\n    let great = true;\r\n    const firstCount = startType === 'row' ? rows : cols;\r\n\r\n    function validateCore(arr, type) {\r\n        // const count = type == 'row' ? (startType === 'row' ? cols : rows) : (startType === 'row' ? rows : cols);\r\n        const count = type === 'row' ? cols : rows;\r\n\r\n        if (!isArray(arr) && !isArray(arr[1])) return;\r\n        if (sumItem(arr[1]) > count) {\r\n            great = false;\r\n        }\r\n        if (isArray(arr[1])) {\r\n            arr[1].forEach((a) => {\r\n                if (isArray(a)) {\r\n                    validateCore(a, type === 'row' ? 'col' : 'row');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    if (sumArrFirst(ly) > firstCount) {\r\n        great = false;\r\n    } else {\r\n        for (let i = 0, len = ly.length; i < len; i++) {\r\n            validateCore(ly[i], startType);\r\n        }\r\n    }\r\n\r\n    return great;\r\n}\r\n\r\nexport function initSize(rows, cols) {\r\n    if (!rows || !cols) return null;\r\n    const unitRow = (100 / rows),\r\n        unitCol = 100 / cols,\r\n        sizes = {};\r\n\r\n    for (let i = 1; i <= rows; i++) {\r\n        sizes[`${CT.SINGLE_ROW}-${i}`] = (unitRow * i).toFixed(5);\r\n    }\r\n    for (let i = 1; i <= cols; i++) {\r\n        sizes[`${CT.COL}-${i}`] = (unitCol * i).toFixed(5);\r\n    }\r\n\r\n    return sizes;\r\n}\r\n\r\n/**\r\n * Validate layout number\r\n * @param {Number} num number\r\n * @param {Number} end end\r\n * @param {Number} cols cols\r\n * @param {Number} rows rows\r\n * @return {Boolean} validate result\r\n */\r\nfunction validateLayoutNumber(num, end, cols, rows) {\r\n    return isNumber(num) && num >= 1 && num <= (end || Math.max(cols, rows));\r\n}\r\n\r\n/**\r\n * Get layout wrap count\r\n * @param {Array} layouts layout\r\n * @param {Number} cols cols\r\n * @param {Number} rows rows\r\n * @return {Number} layout wrap count\r\n */\r\nexport function getLayoutWrapCount(layouts, cols, rows) {\r\n    let count = 0;\r\n\r\n    for (let i = 0, len = layouts.length; i < len; i++) {\r\n        const start = layouts[i][0];\r\n\r\n        if (!validateLayoutNumber(start, null, cols, rows)) {\r\n            return 0;\r\n        }\r\n        count += start;\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\n/**\r\n * Validate layout.\r\n * @param {Array} layouts layout array\r\n * @param {Number} cols column count\r\n * @param {Number} rows row count\r\n * @return {Boolean} valite layout result\r\n */\r\nexport function validateLayout(layouts, cols, rows) {\r\n    if (!layouts || !layouts.length) return false;\r\n    const count = getLayoutWrapCount(layouts, cols, rows);\r\n\r\n    if (!count) {\r\n        throw new Error(ERROR_MSG.LY_INVALID);\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function getRowClassName(row, rows) {\r\n    return row < 0 ? `${CT.SINGLE_ROW}-${rows}` : `${CT.SINGLE_ROW}-${row}`;\r\n}\r\n\r\n/*eslint-disable */\r\nexport function getColClassName(col, hasRow) {\r\n    return col < 0 ? (hasRow ? ` ${CT.ROW}` : '') : (`${CT.COL}-${col}${(hasRow ? ` ${CT.ROW}` : '')}`);\r\n}\r\n/*eslint-enable*/\r\n\r\nexport function generateEvLy(rows, cols, rowNumber, colNumber) {\r\n    rowNumber = Math.floor(rows / legalNumber(rowNumber, 1, rows)) || 1;\r\n    colNumber = Math.floor(cols / legalNumber(colNumber, 1, cols)) || 1;\r\n\r\n    const result = new Array(Math.floor(rows / rowNumber)),\r\n        colsLength = Math.floor(cols / colNumber);\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n        result[i] = [rowNumber, []];\r\n        for (let j = 0; j < colsLength; j++) {\r\n            result[i][1].push(colNumber);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function newVNode(parent, classNames, setId, type) {\r\n    const node = new Vnode().addClassName(classNames).insertTo(parent);\r\n\r\n    node.type = type;\r\n\r\n    if (setId) {\r\n        node.setRole(CT.PANEL);\r\n        // .addClassName(CT.PANEL);\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nexport function removeUnused(vc, panels) {\r\n    function selectPanel(vnode) {\r\n        const nodes = vnode.children;\r\n\r\n        nodes.forEach((node) => {\r\n            if (node.role === CT.PANEL) {\r\n                panels.push(node);\r\n                node.setId(panels.length);\r\n            }\r\n            if (node.children.length > 0) {\r\n                selectPanel(node);\r\n            }\r\n        });\r\n    }\r\n\r\n    selectPanel(vc);\r\n}\r\n\r\nexport function newLy(layout, type, vc, rows, cols) {\r\n    type = type || 'row';\r\n    const parent = layout[0],\r\n        childrens = layout[1];\r\n\r\n    let vparentNode = null,\r\n        classname = '';\r\n\r\n    if (validateLayoutNumber(parent, null, cols, rows)) {\r\n        classname = type === 'col' ? getColClassName(parent, true) : getRowClassName(parent, rows);\r\n        vparentNode = newVNode(vc, classname, false, type === 'col' ? 'col' : 'row', parent);\r\n    }\r\n    if (!vparentNode) return;\r\n\r\n    if (validateLayoutNumber(childrens, null, cols, rows)) {\r\n        newVNode(vparentNode, classname, true, type);\r\n    } else if (isArray(childrens)) {\r\n        childrens.forEach((c) => {\r\n            if (validateLayoutNumber(c, null, cols, rows)) {\r\n                classname = type === 'col' ? getRowClassName(c, rows) : getColClassName(c, true);\r\n                newVNode(vparentNode, classname, true, type === 'col' ? 'row' : 'col', c);\r\n            } else if (isArray(c)) {\r\n                newLy(c, type === 'col' ? 'row' : 'col', vparentNode, rows, cols);\r\n            }\r\n        });\r\n    } else if (!childrens) {\r\n        classname = type === 'col' ? getColClassName(-1, true) : getRowClassName(-1, rows);\r\n        newVNode(vparentNode, classname, true, type === 'col' ? 'row' : 'col', -1);\r\n    }\r\n}\r\n\r\nexport function updateVnodeSize(vc, sizes, options, container) {\r\n    if (!vc || !sizes || !options) return;\r\n\r\n    const keys = Object.keys(sizes).join(','),\r\n        gutter = options.gutter,\r\n        freeLy = options.freeLy;\r\n\r\n    let fixedHeight = options.fixedHeight || 0,\r\n        fixedWidth = options.fixedWidth || 0;\r\n\r\n    if (fixedHeight > 0) {\r\n        fixedHeight = legalNumber(fixedHeight, 0.01);\r\n    }\r\n    if (fixedWidth > 0) {\r\n        fixedWidth = legalNumber(fixedWidth, 0.01);\r\n    }\r\n\r\n    function setSize(vnode) {\r\n        const nodes = vnode.children;\r\n\r\n        nodes.forEach((node) => {\r\n            node.classNames.split(' ').forEach((cls) => {\r\n                cls = trim(cls);\r\n                if (keys.indexOf(cls) >= 0) {\r\n                    if (cls.indexOf('-col-') >= 0) {\r\n                        node.setWidth(sizes[cls]);\r\n\r\n                        return;\r\n                    }\r\n                    if (cls.indexOf('-row-') >= 0) {\r\n                        node.setHeight(sizes[cls]);\r\n\r\n                        return;\r\n                    }\r\n                }\r\n            });\r\n            if (node.children.length > 0) {\r\n                setSize(node);\r\n            }\r\n        });\r\n    }\r\n    setSize(vc);\r\n\r\n    function updateFixedSize(node) {\r\n        if (fixedHeight > 0 && !fixedWidth) {\r\n            node.height = fixedHeight > 1 ? fixedHeight : ((node.width * fixedHeight) + (gutter * (1 - fixedHeight)));\r\n        }\r\n        if (fixedWidth > 0 && !fixedHeight) {\r\n            node.width = fixedWidth > 1 ? fixedWidth : ((node.height * fixedWidth) + (gutter * (1 - fixedWidth)));\r\n        }\r\n        if (fixedHeight > 1 && fixedWidth > 1) {\r\n            node.height = fixedHeight;\r\n            node.width = fixedWidth;\r\n        }\r\n    }\r\n\r\n    function updateRealsize(vnode) {\r\n        const nodes = vnode.children;\r\n\r\n        nodes.forEach((node) => {\r\n            if (node.width !== 0) {\r\n                node.width = Number((vnode.width * node.width / 100));\r\n            }\r\n            if (node.height !== 0) {\r\n                node.height = (freeLy && freeLy.col === 1) ? vnode.height : Number((vnode.height * node.height / 100));\r\n            }\r\n            if (node.width === 0 && vnode.width !== 0) {\r\n                node.width = Number(vnode.width);\r\n            }\r\n            if (node.height === 0 && vnode.height !== 0) {\r\n                node.height = Number(vnode.height);\r\n            }\r\n            updateFixedSize(node);\r\n            if (node.children.length > 0) {\r\n                updateRealsize(node);\r\n            }\r\n        });\r\n    }\r\n    /*eslint-disable */\r\n    const padding = options.padding,\r\n        paddingLeft = padding.left + padding.right,\r\n        paddingTop = padding.top + padding.bottom;\r\n\r\n    let width = options.width,\r\n        height = options.height;\r\n    /*eslint-enable */\r\n\r\n    if ((!width || !height) && container) {\r\n        const target = container.parentNode || container,\r\n            rect = getRect(target);\r\n\r\n        if (width === 0) {\r\n            container._origionWidth = width = rect.width;\r\n        }\r\n        if (height === 0) {\r\n            container._origionHeight = height = rect.height;\r\n        }\r\n    }\r\n\r\n    width -= paddingLeft;\r\n    height -= paddingTop;\r\n\r\n    vc.children.forEach((node) => {\r\n        if (node.width !== 0) {\r\n            node.width = width * Number(node.width) / 100;\r\n        }\r\n        if (node.height !== 0) {\r\n            node.height = height * Number(node.height) / 100;\r\n        }\r\n        if (node.width === 0) {\r\n            node.width = width;\r\n        }\r\n        if (node.height === 0) {\r\n            node.height = height;\r\n        }\r\n\r\n        updateRealsize(node);\r\n        const child = node.children[0];\r\n\r\n        if (child) {\r\n            if (fixedHeight > 0) {\r\n                node.height = child.height;\r\n            }\r\n            if (fixedWidth > 0) {\r\n                node.width = child.width;\r\n            }\r\n        }\r\n    });\r\n\r\n    vc.setWidth(width).setHeight(height);\r\n    if (fixedHeight > 0) {\r\n        if (fixedHeight <= 1) {\r\n            fixedHeight = vc.children[0].height;\r\n        }\r\n        const fixedTotalHeight = fixedHeight * options.layout.length;\r\n\r\n        vc.setHeight(fixedTotalHeight);\r\n        container._origionHeight = fixedTotalHeight;\r\n    }\r\n\r\n    if (fixedWidth > 0) {\r\n        if (fixedWidth <= 1) {\r\n            fixedWidth = vc.children[0].width;\r\n        }\r\n        let length = 0;\r\n\r\n        if (options.layoutStartType === 'row') {\r\n            length = options.layout[0][1].length;\r\n        } else {\r\n            length = options.layout.length;\r\n        }\r\n\r\n        const fixedTotalWidth = fixedWidth * length;\r\n\r\n        vc.setWidth(fixedTotalWidth);\r\n        container._origionWidth = fixedTotalWidth;\r\n    }\r\n}\r\n\r\nfunction updateAbs(vc, o, panels) {\r\n    if (!vc || !o || !panels) return;\r\n    let _step = 0;\r\n\r\n    vc.children.forEach((node) => {\r\n        if (node.type === 'row') {\r\n            node.left = 0;\r\n            node.top = _step;\r\n            _step += node.height;\r\n        }\r\n        if (node.type === 'col') {\r\n            node.top = 0;\r\n            node.left = _step;\r\n            _step += node.width;\r\n        }\r\n    });\r\n\r\n    _step = 0;\r\n    panels.forEach((node) => {\r\n        if (node.type === 'row') {\r\n            node.left = 0;\r\n            node.top = _step;\r\n            _step += node.height;\r\n        }\r\n        if (node.type === 'col') {\r\n            node.top = 0;\r\n            node.left = _step;\r\n            _step += node.width;\r\n        }\r\n    });\r\n\r\n    function setAbs(vnode) {\r\n        const nodes = vnode.children;\r\n        let step = vnode.type === 'row' ? vnode.left : vnode.top;\r\n\r\n        nodes.forEach((node) => {\r\n            if (node.type === 'row' && vnode.type === 'col') {\r\n                node.left = vnode.left;\r\n                node.top = step;\r\n                step += node.height;\r\n            }\r\n            if (node.type === 'col' && vnode.type === 'row') {\r\n                node.top = vnode.top;\r\n                node.left = step;\r\n                step += node.width;\r\n            }\r\n            if (node.children.length > 0) {\r\n                setAbs(node);\r\n            }\r\n        });\r\n    }\r\n\r\n    vc.children.forEach((node) => {\r\n        setAbs(node);\r\n    });\r\n\r\n    const gutter = o.gutter;\r\n\r\n    panels.forEach((panel) => {\r\n        panel.setWidth(panel.width - gutter)\r\n            .setHeight(panel.height - gutter)\r\n            .setTop(formatNum((panel.top + (gutter * 0.5)), 5))\r\n            .setLeft(formatNum((panel.left + (gutter * 0.5)), 5))\r\n            .clearClassName()\r\n            .setRole(CT.PANEL)\r\n            .setStyle({\r\n                position: 'absolute',\r\n                zIndex: CT.PANEL_DEFAULT_ZINDEX,\r\n            });\r\n        panel.parentNode = null;\r\n    });\r\n\r\n    vc.children = panels;\r\n    vc.children.forEach((node) => {\r\n        node.parentNode = vc;\r\n    });\r\n    panels = null;\r\n}\r\n\r\nexport function initLayoutSet(o) {\r\n    const ly = o.layout,\r\n        gutter = o.gutter,\r\n        rows = legalNumber(o.rows, CT.MIN_LY_COUNT),\r\n        cols = legalNumber(o.cols, CT.MIN_LY_COUNT);\r\n    let startType = o.layoutStartType,\r\n        _ly = ly;\r\n\r\n    if (isString(ly) && ly.toLocaleLowerCase() === 'whole') {\r\n        _ly = [[rows]];\r\n    }\r\n\r\n    if (isArray(ly)) {\r\n        if (ly.length === 0) {\r\n            _ly = [[rows]];\r\n        }\r\n        _ly = ly.map((n) => {\r\n            if (isNumber(n)) { n = [n]; }\r\n\r\n            return n;\r\n        });\r\n    }\r\n\r\n    if (isObject(ly)) {\r\n        let fh = legalNumber(ly.height, 0),\r\n            fw = legalNumber(ly.width, 0);\r\n\r\n        _ly = generateEvLy(rows, cols, ly.rows, ly.cols);\r\n\r\n        if (fh || fw) {\r\n            if (fh > 1 && fw > 0 && fw <= 1) {\r\n                fw = fh * fw;\r\n            }\r\n            if (fh > 0 && fh <= 1 && fw > 1) {\r\n                fh = fw * fh;\r\n            }\r\n            if (fw > 1) {\r\n                fw += gutter;\r\n            }\r\n            if (fh > 1) {\r\n                fh += gutter;\r\n            }\r\n            if (fh > 0 && fh <= 1 && fw > 0 && fw <= 1) {\r\n                throw new Error(ERROR_MSG.LY_FIXED_LESS);\r\n            }\r\n        }\r\n\r\n        o.fixedHeight = fh;\r\n        o.fixedWidth = fw;\r\n        o.freeLy = {\r\n            col: ly.cols || o.cols,\r\n            row: ly.rows || o.rows,\r\n            fh,\r\n            fw,\r\n        };\r\n        o.layoutStartType = startType = 'row';\r\n    }\r\n\r\n    if (_ly && !validateAllLy(_ly, rows, cols, startType)) {\r\n        throw new Error(ERROR_MSG.LY_INVALID);\r\n    }\r\n\r\n    o.layout = _ly;\r\n\r\n    return true;\r\n}\r\n\r\nexport function initLayout(o, vc) {\r\n    if (!o || !vc || !o.layout) return false;\r\n    const lys = o.layout,\r\n        cols = o.cols,\r\n        rows = o.rows,\r\n        type = o.layoutStartType;\r\n\r\n    if (!validateLayout(lys, cols, rows)) return false;\r\n\r\n    lys.forEach((ly) => { newLy(ly, type, vc, rows, cols); });\r\n\r\n    return true;\r\n}\r\n\r\nexport function updateLayout(vc, c, sizes, options, panels) {\r\n    updateVnodeSize(vc, sizes, options, c);\r\n    removeUnused(vc, panels);\r\n    updateAbs(vc, options, panels);\r\n}\r\n","import {\r\n    isNumber, isArray, contain, unique, getCssSize, formatMargin2, isPercentage, translatePercentage,\r\n} from '../../utils/util';\r\nimport { getTargetDataId, } from '../../dom/dom';\r\nimport CT from '../../constant/constant';\r\nimport Vnode from '../../dom/vdom/vnode';\r\n\r\n/**\r\n * Generate Panel layout\r\n * @param {Object} layout layoutOptions\r\n * @param {Number} scale fontscale\r\n * @return {Object} layout size\r\n */\r\nfunction genPanelLy({ gutter = 0, headHeight = 0, footHeight = 0, rightWidth = 0, leftWidth = 0 }, scale = 1) {\r\n    gutter = formatMargin2(gutter, scale);\r\n    headHeight = getCssSize(headHeight, scale);\r\n    footHeight = getCssSize(footHeight, scale);\r\n    rightWidth = getCssSize(rightWidth, scale);\r\n    leftWidth = getCssSize(leftWidth, scale);\r\n\r\n    const containerHeight = `calc(100% - ${headHeight} - ${footHeight} - ${gutter.top} - ${gutter.bottom})`,\r\n        centerWidth = `calc(100% - ${rightWidth} - ${leftWidth} - ${gutter.left} - ${gutter.right})`;\r\n\r\n    return {\r\n        headHeight,\r\n        footHeight,\r\n        rightWidth,\r\n        leftWidth,\r\n        containerHeight,\r\n        centerWidth,\r\n        gutter,\r\n    };\r\n}\r\n\r\nfunction addPanel(panel, layout, fontScale) {\r\n    const { headHeight, footHeight, rightWidth, leftWidth,\r\n        containerHeight, centerWidth, gutter } = genPanelLy(layout, fontScale);\r\n    let containerNode = null;\r\n\r\n    // head\r\n    if (headHeight !== '0px' && headHeight !== '0%') {\r\n        new Vnode().setRole(CT.GRID_HEAD)\r\n            .setHeight(headHeight)\r\n            .insertTo(panel);\r\n    }\r\n\r\n    // center\\left\\right container\r\n    if (headHeight !== '100%' && footHeight !== '100%') {\r\n        containerNode = new Vnode().setRole(CT.GRID_L_C_R)\r\n            .setHeight(containerHeight)\r\n            .setStyle({ marginBottom: gutter.bottom, marginTop: gutter.top })\r\n            .insertTo(panel);\r\n    }\r\n\r\n    // foot\r\n    if (footHeight !== '0px' && footHeight !== '0%') {\r\n        new Vnode().setRole(CT.GRID_FOOT).setHeight(footHeight).insertTo(panel);\r\n    }\r\n\r\n    // left\r\n    if (leftWidth !== '0px' && leftWidth !== '0%') {\r\n        const left = new Vnode().setRole(CT.GRID_LEFT)\r\n            .setWidth(leftWidth);\r\n\r\n        if (containerNode) {\r\n            left.insertTo(containerNode);\r\n        }\r\n    }\r\n\r\n    // center\r\n    if (containerNode) {\r\n        new Vnode().setRole(CT.GRID_CENTER)\r\n            .setWidth(centerWidth)\r\n            .setStyle({\r\n                marginLeft: gutter.left,\r\n                marginRight: gutter.right,\r\n            })\r\n            .insertTo(containerNode);\r\n    }\r\n\r\n    // right\r\n    if (rightWidth !== '0px' && rightWidth !== '0%') {\r\n        const right = new Vnode().setRole(CT.GRID_RIGHT)\r\n            .setWidth(rightWidth);\r\n\r\n        if (containerNode) {\r\n            right.insertTo(containerNode);\r\n        }\r\n    }\r\n\r\n    return panel;\r\n}\r\n\r\nexport function addLayoutToPanel(panel, layout, fontScale) {\r\n    if (!panel || !layout) return;\r\n    if (panel.queryByRole(CT.PANEL_CONTAINER)) {\r\n        return;\r\n    }\r\n\r\n    const panelContainer = new Vnode()\r\n        .setStyle({ position: 'relative' })\r\n        .setRole(CT.PANEL_CONTAINER);\r\n\r\n    addPanel(panelContainer, layout, fontScale || 1).insertTo(panel);\r\n}\r\n\r\nexport function addPanels(vc, o) {\r\n    if (!vc || !o.panel || !o.panel.enable) return;\r\n    const df = o.panel.default,\r\n        custom = o.panel.custom,\r\n        customIds = [],\r\n        fullId = o.fullId,\r\n        fullZIndex = o.fullZIndex;\r\n\r\n    if (custom && isArray(custom)) {\r\n        custom.forEach((c) => {\r\n            let panels = c.panels;\r\n\r\n            if (isNumber(panels)) {\r\n                panels = [panels];\r\n            }\r\n\r\n            if (isArray(panels)) {\r\n                const customVnodes = [];\r\n\r\n                c.panels = panels = unique(panels);\r\n                panels.forEach((id) => {\r\n                    customIds.push(id);\r\n                    const _vn = vc.getChild(id);\r\n\r\n                    if (_vn) {\r\n                        customVnodes.push(_vn);\r\n                    }\r\n                });\r\n\r\n                customVnodes.forEach((vnode) => {\r\n                    let zIndex = c.zIndex;\r\n\r\n                    if (vnode.getId() === fullId) {\r\n                        zIndex = fullZIndex;\r\n                    }\r\n                    addLayoutToPanel(vnode, c, o.fontScale);\r\n                    vnode.setStyle({ zIndex }).update();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    vc.children.forEach((node) => {\r\n        if (contain(customIds, node[CT.COMPONENT_ID_KEY]) < 0) {\r\n            let zIndex = df.zIndex;\r\n\r\n            if (node.getId() === fullId) {\r\n                zIndex = fullZIndex;\r\n            }\r\n            addLayoutToPanel(node, df, o.fontScale);\r\n            node.setStyle({ zIndex }).update();\r\n        }\r\n    });\r\n}","import Vnode from '../../dom/vdom/vnode';\r\nimport SVG from '../../dom/vdom//vsvg';\r\nimport CT from '../../constant/constant';\r\nimport { css, create, removeByClass, query } from '../../dom/dom';\r\nimport { isNumber, isArray, isString, isDOM, merge } from '../../utils/util';\r\nimport { getRealIds, getAllIds } from './popo';\r\n\r\nfunction n2px(fz) {\r\n    if (isNumber(fz)) return `${fz}px`;\r\n    if (isString(fz)) {\r\n        if (fz.indexOf('px') < 0 || fz.indexOf('em') > 0) {\r\n            return fz;\r\n        } else if (!isNaN(Number(fz))) {\r\n            return `${fz}px`;\r\n        }\r\n    }\r\n\r\n    return fz;\r\n}\r\n\r\nfunction px2n(str) {\r\n    if (isString(str)) {\r\n        const i = str.indexOf('px');\r\n\r\n        if (i >= 0) {\r\n            return Number(str.substring(0, i));\r\n        }\r\n    }\r\n\r\n    if (isNumber(str)) {\r\n        return str;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nfunction _addGGL(panel, o) {\r\n    if (!panel || !isDOM(panel.realDom) || !o || !o.show) return;\r\n    removeByClass(CT.PANEL_GUIDELINES, panel.realDom);\r\n    const ggl = query(panel.realDom, `.${CT.GUIDELINES}`),\r\n        width = panel.width,\r\n        height = panel.height,\r\n        zIndex = o.zIndex,\r\n        size = o.size || 15,\r\n        color = o.color,\r\n        lineSize = o.lineSize,\r\n        lines = new SVG(),\r\n        svg = create('div', CT.PANEL_GUIDELINES, {\r\n            zIndex,\r\n            height: `${height}px`,\r\n            width: `${width}px`,\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0,\r\n            overflow: 'hidden',\r\n            userSelect: 'none',\r\n        }, panel.realDom);\r\n\r\n    if (isDOM(ggl)) {\r\n        panel.realDom.removeChild(ggl);\r\n    }\r\n\r\n    let rows = Math.ceil(height / size),\r\n        cols = Math.ceil(width / size),\r\n        points = '',\r\n        points2 = '';\r\n\r\n    for (let i = 1; i <= rows; i++) {\r\n        const y = size * i;\r\n\r\n        points += `M0 ${y} L${width} ${y} `;\r\n    }\r\n    for (let i = 1; i <= cols; i++) {\r\n        const x = size * i;\r\n\r\n        points += `M${x} 0 L${x} ${height} `;\r\n    }\r\n\r\n    rows = Math.ceil(height / size / 4);\r\n    cols = Math.ceil(width / size / 4);\r\n    for (let i = 1; i <= rows; i++) {\r\n        const y = size * i * 4;\r\n\r\n        points2 += `M0 ${y} L${width} ${y} `;\r\n    }\r\n    for (let i = 1; i <= cols; i++) {\r\n        const x = size * i * 4;\r\n\r\n        points2 += `M${x} 0 L${x} ${height} `;\r\n    }\r\n\r\n    lines.create('path', { d: points, stroke: color, strokeWidth: lineSize });\r\n    lines.create('path', { d: points2, stroke: color, strokeWidth: lineSize * 1.5 });\r\n    svg.appendChild(lines.createElement());\r\n}\r\n\r\nfunction addPanelGuidelines(vc, o) {\r\n    if (!vc || !o || !o.dev || !o.dev.enable || !o.dev.panelGuideline.show) return;\r\n    const gg = o.dev.panelGuideline,\r\n        options = merge({\r\n            color: 'rgba(0,0,0,.25)',\r\n            width: 1,\r\n            size: 10,\r\n            zIndex: 0,\r\n        }, gg || {});\r\n\r\n    let ids = gg.ids;\r\n\r\n    if (ids === 'all') {\r\n        ids = getAllIds(vc);\r\n    }\r\n    if (isNumber(ids)) {\r\n        ids = [ids];\r\n    }\r\n    if (isArray(ids)) {\r\n        ids.forEach((id) => {\r\n            id = getRealIds(vc, id, o.alias);\r\n            if (id > 0) {\r\n                const node = vc.getChild(id);\r\n\r\n                if (node && node.realDom) {\r\n                    _addGGL(node, options);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction createPanelInfo(panel, size, id, position, color, fontSize) {\r\n    fontSize = n2px(fontSize);\r\n    if (panel && panel.realDom) {\r\n        const width = Math.round(panel.width),\r\n            height = Math.round(panel.height),\r\n            left = Math.round(panel.left),\r\n            top = Math.round(panel.top);\r\n\r\n        if (size || id || position) {\r\n            let info = '';\r\n\r\n            if (id) {\r\n                info += panel[CT.COMPONENT_ID_KEY];\r\n            }\r\n            if (size) {\r\n                info += `${(id ? ' - ' : '')} W${width} H${height}`;\r\n            }\r\n            if (position) {\r\n                info += `${(id || size) ? ' - ' : ''} L${left} T${top}`;\r\n            }\r\n\r\n            return new Vnode('span')\r\n                .addClassName(CT.INFO)\r\n                .setTop(panel.top + 5)\r\n                .setLeft(panel.left + 5)\r\n                .setWidth('auto')\r\n                .setHeight('auto')\r\n                .setStyle({ color, fontSize })\r\n                .setHtml(info);\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction createDebugInfo(vc, dev) {\r\n    if (!vc || !dev || !dev.enable || !dev.panel.show) return;\r\n    const o = dev.panel,\r\n        id = o.id,\r\n        size = o.size,\r\n        position = o.position,\r\n        background = o.background,\r\n        fontSize = n2px(o.fontSize),\r\n        fontColor = o.fontColor;\r\n\r\n    if (vc.realDom && (id || size || position || background)) {\r\n        for (let i = 0, len = vc.children.length; i < len; i++) {\r\n            if (vc.children[i].realDom && background && isString(background)) {\r\n                css(vc.children[i].realDom, { background });\r\n            }\r\n            const span = createPanelInfo(vc.children[i], size, id, position, fontColor, fontSize);\r\n\r\n            if (span) {\r\n                vc.realDom.appendChild(span.createElement());\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createSVGText(svg, text, x, y, fontSize, fill) {\r\n    if (svg) {\r\n        svg.create('text', { x, y, fontSize, fill }).setHtml(text);\r\n    }\r\n}\r\n\r\nexport function addGuidelines(c, vc, o) {\r\n    if (!c || !vc || !o || !o.dev.guideline.show) return;\r\n    removeByClass(CT.GUIDELINES, c);\r\n    const gl = o.dev.guideline,\r\n        padding = o.padding,\r\n        width = vc.width + padding.left + padding.right,\r\n        height = vc.height + padding.top + padding.bottom,\r\n        identifier = gl.identifier,\r\n        fontSize = gl.fontSize,\r\n        fontColor = gl.fontColor,\r\n        zIndex = gl.zIndex,\r\n        rows = o.rows,\r\n        cols = o.cols,\r\n        unitRowHeight = (100 / rows).toFixed(5) * height / 100,\r\n        unitColWidth = (100 / cols).toFixed(5) * width / 100,\r\n        lines = new SVG(),\r\n        svg = create('div', CT.GUIDELINES, {\r\n            zIndex,\r\n            height: `${height}px`,\r\n            width: `${width}px`,\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0,\r\n            overflow: 'hidden',\r\n            userSelect: 'none',\r\n        }, c),\r\n        position = c.style.position;\r\n\r\n    if (position === '' || position === 'static') {\r\n        css(c, {\r\n            position: 'relative',\r\n        });\r\n    }\r\n\r\n    let points = '';\r\n\r\n    for (let i = 0; i <= rows; i++) {\r\n        const y = unitRowHeight * i;\r\n\r\n        points += `M0 ${y} L${width} ${y} `;\r\n        if (identifier) {\r\n            createSVGText(lines, i, 5, y - unitRowHeight + px2n(fontSize) + 5, fontSize, fontColor);\r\n        }\r\n    }\r\n    for (let i = 0; i <= cols; i++) {\r\n        const x = unitColWidth * i;\r\n\r\n        points += `M${x} 0 L${x} ${height} `;\r\n        if (identifier && i !== 1) {\r\n            createSVGText(lines, i, x - unitColWidth + 5, px2n(fontSize) + 5, fontSize, fontColor);\r\n        }\r\n    }\r\n\r\n    lines.create('path', { d: points, stroke: gl.color, strokeWidth: gl.lineSize });\r\n    svg.appendChild(lines.createElement());\r\n}\r\n\r\nexport function addSplitLine(c, vc, o) {\r\n    if (!c || !vc || !o || !o.dev.splitline.show) return;\r\n    removeByClass(CT.SPLITLINES, c);\r\n    const sl = o.dev.splitline,\r\n        fontSize = n2px(sl.fontSize),\r\n        fontColor = sl.fontColor,\r\n        padding = o.padding,\r\n        identifier = sl.identifier,\r\n        width = vc.width + padding.left + padding.right,\r\n        height = vc.height + padding.top + padding.bottom,\r\n        unitRowHeight = sl.height,\r\n        unitColWidth = sl.width,\r\n        zIndex = sl.zIndex,\r\n        rows = Math.ceil(height / unitRowHeight),\r\n        cols = Math.ceil(width / unitColWidth),\r\n        svg = create('div', CT.SPLITLINES, {\r\n            zIndex,\r\n            height: `${height}px`,\r\n            width: `${width}px`,\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0,\r\n            overflow: 'hidden',\r\n            userSelect: 'none',\r\n        }, c),\r\n        lines = new SVG(),\r\n        position = c.style.position,\r\n        infoY = [],\r\n        infoX = [];\r\n\r\n    if (position === '' || position === 'static') {\r\n        css(c, { position: 'relative' });\r\n    }\r\n\r\n    let points = '';\r\n\r\n    for (let i = 0; i <= rows; i++) {\r\n        const y = unitRowHeight * i;\r\n\r\n        points += `M0 ${y} L${width} ${y} `;\r\n        infoY.push(y);\r\n    }\r\n    for (let i = 0; i <= cols; i++) {\r\n        const x = unitColWidth * i;\r\n\r\n        points += `M${x} 0 L${x} ${height} `;\r\n        infoX.push(x);\r\n    }\r\n\r\n    if (identifier) {\r\n        infoX.forEach((x) => {\r\n            infoY.forEach((y) => {\r\n                createSVGText(lines, `${x}, ${y}`, x + 10, y + 10 + px2n(fontSize), fontSize, fontColor);\r\n            });\r\n        });\r\n    }\r\n\r\n    lines.create('path', { d: points, stroke: sl.color, strokeWidth: sl.lineSize });\r\n    svg.appendChild(lines.createElement());\r\n}\r\n\r\nexport function loadDev(c, vc, o) {\r\n    if (!vc || !c || !o || !o.dev || !o.dev.enable) return false;\r\n    removeByClass(CT.INFO, c);\r\n    createDebugInfo(vc, o.dev);\r\n    addGuidelines(c, vc, o);\r\n    addSplitLine(c, vc, o);\r\n    addPanelGuidelines(vc, o);\r\n\r\n    return true;\r\n}\r\n","import Vnode from '../../dom/vdom/vnode';\r\nimport CT from '../../constant/constant';\r\nimport { updateLayout, initLayout } from './layout';\r\nimport { addLayoutToPanel } from './panel';\r\nimport {\r\n    css, addClass, setClass, hasClass, query, eachChild,\r\n    removeClass, getPureStyle, getRect, attr,\r\n} from '../../dom/dom';\r\nimport {\r\n    isNumber, isArray, isString, isDOM, isObject, contain, isEmptyObject, merge,\r\n    bind, multiplyBy, isFunction, formatNum, cloneJsonObject,\r\n} from '../../utils/util';\r\nimport { loadDev } from './dev';\r\nimport defaultPanel from '../options/panel';\r\nimport defaultStyle from '../options/style';\r\n\r\nexport function createPane(o) {\r\n    const pd = o.padding,\r\n        str = `${pd.top}px ${pd.right}px ${pd.bottom}px ${pd.left}px`;\r\n\r\n    return new Vnode()\r\n        .setRole(CT.PANE)\r\n        .setHeight('auto')\r\n        .setStyle({\r\n            padding: str,\r\n            fontSize: `${o.fontScale}em`,\r\n        })\r\n        .createElement();\r\n}\r\n\r\nexport function createVc() {\r\n    return new Vnode()\r\n        .setRole(CT.CONTAINER)\r\n        .setStyle({ position: 'relative' });\r\n}\r\n\r\nexport function vcToDom(vc) {\r\n    return vc && vc.createElement();\r\n}\r\n\r\nexport function getAllIds(vc) {\r\n    return vc ? vc.children.map((node) => node.getId()) : [];\r\n}\r\n\r\nexport function stampInner(c) {\r\n    if (isDOM(c)) {\r\n        [CT.ZOOMPANE, CT.ZOOMCONTAINER].forEach((role) => {\r\n            if (attr(c, CT.ROLE) === role) {\r\n                /*eslint-disable */\r\n                c._popo_inner = true;\r\n                /*eslint-enable */\r\n\r\n                return;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function addExtend(vc, padding, options, scale, createPanel) {\r\n    if (!vc || !padding || !options) return null;\r\n    const { left, top, right, bottom } = padding,\r\n        width = vc.width + left + right,\r\n        height = vc.height + top + bottom;\r\n\r\n    if (isObject(options)) {\r\n        const panelOption = merge(defaultPanel, options),\r\n            { position, size, id, zIndex, layout, style } = panelOption,\r\n            node = new Vnode()\r\n                .setRole(CT.PANEL)\r\n                .setHeight(multiplyBy(size.height || 0, height))\r\n                .setWidth(multiplyBy(size.width || 0, width))\r\n                .setTop(multiplyBy(position.top || 0, height))\r\n                .setLeft(multiplyBy(position.left || 0, width))\r\n                .setStyle({\r\n                    position: 'absolute',\r\n                    zIndex,\r\n                });\r\n\r\n        if (id) { node.id = id; }\r\n\r\n        node[CT.COMPONENT_ID_KEY] = vc.getNewId();\r\n        node.isExtend = true;\r\n        node.extendInfo = {\r\n            position: {\r\n                left: node.left / (position.responsive ? width : 1),\r\n                top: node.top / (position.responsive ? height : 1),\r\n            },\r\n            size: {\r\n                width: node.width / (size.responsive ? width : 1),\r\n                height: node.height / (size.responsive ? height : 1),\r\n            },\r\n            zIndex,\r\n        };\r\n\r\n        if (layout && isObject(layout) && createPanel) {\r\n            addLayoutToPanel(node, layout, scale);\r\n        }\r\n        if (style) {\r\n            const _style = merge(defaultStyle.default, style);\r\n\r\n            _setStyle(node, _style.panel, false, true);\r\n            for (const key in style) {\r\n                const son = node.queryByRole(key);\r\n\r\n                if (son && _style[key]) {\r\n                    _setStyle(son, _style[key], false, true);\r\n                }\r\n            }\r\n        }\r\n        vc.addNode(node);\r\n\r\n        return node;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function loadExtends(vc, o, createPanel) {\r\n    if (!vc || !o || !o.extends) return;\r\n    let ext = o.extends;\r\n\r\n    if (ext && isObject(ext)) {\r\n        ext = [ext];\r\n    }\r\n    if (ext && isArray(ext)) {\r\n        ext.forEach((e) => {\r\n            addExtend(vc, o.padding, e, o.fontScale, createPanel);\r\n        });\r\n    }\r\n}\r\n\r\nexport function updateExtends(vc, o) {\r\n    if (!vc || !o) return;\r\n    const exts = vc.children.filter((n) => n.isExtend === true),\r\n        { left, top, right, bottom } = o.padding,\r\n        width = vc.width + left + right,\r\n        height = vc.height + top + bottom;\r\n\r\n    exts.forEach((panel) => {\r\n        if (isObject(panel.extendInfo)) {\r\n            const { size, position } = panel.extendInfo,\r\n                panelWidth = multiplyBy(size.width || 0, width),\r\n                panelHeight = multiplyBy(size.height || 0, height);\r\n\r\n            panel.setHeight(panel._oldHeight !== undefined ? panel.height : panelHeight)\r\n                .setWidth(panel._oldWidth !== undefined ? panel.width : panelWidth)\r\n                .setTop(multiplyBy(panel._oldTop !== undefined ? panel.top : position.top || 0, height))\r\n                .setLeft(multiplyBy(panel._oldLeft !== undefined ? panel.left : position.left || 0, width))\r\n                .update();\r\n        }\r\n    });\r\n}\r\n\r\nexport function getIdByAlias(alias, key) {\r\n    if (isArray(alias) && key) {\r\n        const _alias = alias.slice(0),\r\n            result = _alias.filter((a) => a && a.name === key);\r\n\r\n        if (result.length === 1) {\r\n            return result[0].id || -1;\r\n        }\r\n        if (result.length > 1) {\r\n            return result.map((r) => r.id || -1)[0];\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\nexport function getAliasById(alias, id) {\r\n    if (isArray(alias) && id) {\r\n        const result = isArray(alias) && id && alias.slice(0).filter((a) => a && a.id === id)[0];\r\n\r\n        if (isObject(result)) {\r\n            return result.name;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getId(id, alias) {\r\n    if (!isNaN(Number(id))) {\r\n        return Number(id);\r\n    } else if (alias && isString(id)) {\r\n        return getIdByAlias(alias, id);\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\nexport function getRealIds(vc, id, alias) {\r\n    if (!vc || id === null || id === undefined) return -1;\r\n    const length = vc.children.length;\r\n\r\n    if (id === 'all') {\r\n        return getAllIds(vc);\r\n    }\r\n    if (!isArray(id)) {\r\n        id = getId(id, alias);\r\n\r\n        return id < 0 ? -1 : id;\r\n    }\r\n\r\n    return id.map((_id) => {\r\n        _id = getId(_id, alias);\r\n\r\n        return _id < 0 ? -1 : _id;\r\n    });\r\n}\r\n\r\nfunction getNode(panel, type) {\r\n    if (panel) {\r\n        type = type || CT.GRID_CENTER;\r\n\r\n        /*eslint-disable */\r\n        if (contain([CT.PANEL, CT.GRID_HEAD, CT.GRID_CENTER, CT.GRID_LEFT, CT.GRID_RIGHT, CT.GRID_L_C_R,\r\n        CT.PANEL_CONTAINER, CT.GRID_FOOT], type) < 0) {\r\n            return null;\r\n        }\r\n        /*eslint-enable */\r\n\r\n        return type === CT.PANEL ? panel : panel.queryByRole(type);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getNodesByPanel(panel) {\r\n    if (panel) {\r\n        return {\r\n            panel,\r\n            head: getNode(panel, CT.GRID_HEAD),\r\n            left: getNode(panel, CT.GRID_LEFT),\r\n            right: getNode(panel, CT.GRID_RIGHT),\r\n            center: getNode(panel, CT.GRID_CENTER),\r\n            panelContainer: getNode(panel, CT.PANEL_CONTAINER),\r\n            lcr: getNode(panel, CT.GRID_L_C_R),\r\n            foot: getNode(panel, CT.GRID_FOOT),\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getRealNodesByPanel(panel, id, options) {\r\n    if (panel) {\r\n        const nodes = getNodesByPanel(panel);\r\n\r\n        if (isObject(nodes)) {\r\n            const { head, foot, left, right, center, lcr, panelContainer } = nodes;\r\n            const elements = {\r\n                panel: panel.realDom,\r\n                panelContainer: panelContainer && panelContainer.realDom,\r\n                lcr: lcr && lcr.realDom,\r\n                head: head && head.realDom,\r\n                foot: foot && foot.realDom,\r\n                left: left && left.realDom,\r\n                center: center && center.realDom,\r\n                right: right && right.realDom,\r\n                id: id || panel.getId(),\r\n                isExtend: panel.isExtend,\r\n                alias: getAliasById(options.alias, id),\r\n                size: {\r\n                    width: formatNum(panel.width, 5),\r\n                    height: formatNum(panel.height, 5),\r\n                },\r\n                position: {\r\n                    top: formatNum(panel.top, 5),\r\n                    left: formatNum(panel.left, 5),\r\n                    zIndex: panel.styles.zIndex,\r\n                },\r\n            };\r\n\r\n            return elements;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getRealdomsById(vc, id, o) {\r\n    const realId = getId(id, o.alias),\r\n        panel = vc.getChild(realId);\r\n\r\n    return getRealNodesByPanel(panel, realId, o);\r\n}\r\n\r\nexport function getNodeById(vc, id, type) {\r\n    if (!vc || !id || id <= 0) return null;\r\n    const panel = vc.getChild(id);\r\n\r\n    if (panel) {\r\n        return getNode(panel, type || CT.GRID_CENTER);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function validateType(type) {\r\n    return !isString(type) ? 'panel' : (type || 'panel').toLowerCase();\r\n}\r\n\r\nexport function setHide(ids, vcontainer, o, showIds) {\r\n    if (!ids || !vcontainer) return;\r\n    const type = showIds ? o.hideType : (o.hideType || 'panel');\r\n\r\n    if (isNumber(ids)) {\r\n        ids = [ids];\r\n    }\r\n    if (isArray(ids)) {\r\n        ids.forEach((id) => {\r\n            const node = getNodeById(vcontainer, getRealIds(vcontainer, id, o.alias), type);\r\n\r\n            if (node) {\r\n                if (node.realDom) {\r\n                    css(node.realDom, {\r\n                        display: 'none',\r\n                    });\r\n                } else {\r\n                    node.setStyle({\r\n                        display: 'none',\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function createZoomContainer(c, options) {\r\n    if (!c || !options || hasClass(c, CT.ZOOMCONTAINER)) return null;\r\n    const z = options.zoom,\r\n        zoomContainer = new Vnode()\r\n            .setRole(CT.ZOOMCONTAINER),\r\n        zoomPane = new Vnode()\r\n            .setRole(CT.ZOOMPANE)\r\n            .addNode(zoomContainer)\r\n            .createElement();\r\n\r\n    c.appendChild(zoomPane);\r\n\r\n    if (z.enable && z.control) {\r\n        const zoomControl = new Vnode()\r\n            .addClassName(CT.EXT_PANE)\r\n            .setRole(CT.EXT_PANE)\r\n            .setWidth(34)\r\n            .setHeight(94)\r\n            .setHtml(`\r\n            <a class=\\'${CT.ZOOMIN}\\' href=\\'javascript:;\\' title=\\'Zoom in\\'>+</a>\r\n            <span class='${CT.ZOOMINFO}' title=\\'Current Scale\\'></span>\r\n            <a class=\\'${CT.ZOOMOUT}\\' href=\\'javascript:;\\' title=\\'Zoom out\\'>-</a>`)\r\n            .createElement(),\r\n            size = '10px';\r\n\r\n        switch (z.position) {\r\n            case 'leftTop':\r\n                css(zoomControl, { top: size, left: size });\r\n                break;\r\n            case 'leftBottom':\r\n                css(zoomControl, { bottom: size, left: size });\r\n                break;\r\n            case 'rightBottom':\r\n                css(zoomControl, { bottom: size, right: size });\r\n                break;\r\n            default:\r\n                css(zoomControl, { right: size, top: size });\r\n                break;\r\n        }\r\n\r\n        c.appendChild(zoomControl);\r\n    }\r\n\r\n    return zoomContainer.realDom;\r\n}\r\n\r\nexport function getComponent(vcontainer, id, classname) {\r\n    if (isNumber(id) && id > 0) {\r\n        const node = vcontainer.getChild(id);\r\n\r\n        if (node && isDOM(node.realDom)) {\r\n            return node.realDom.querySelector(`.${classname}`);\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function isInPoPo(c) {\r\n    return c && c._popo_inner;\r\n}\r\n\r\nfunction veach(vcontainer, fn, ids, context) {\r\n    if (!vcontainer) return;\r\n    if (!ids || ids === 'all') {\r\n        ids = getAllIds(vcontainer);\r\n    }\r\n    if (isNumber(ids)) {\r\n        ids = [ids];\r\n    }\r\n    if (isArray(ids) && ids.length > 0) {\r\n        ids.forEach((id) => {\r\n            const panel = vcontainer.getChild(id);\r\n\r\n            if (panel) {\r\n                if (context) {\r\n                    fn = bind(fn, context);\r\n                }\r\n                if (fn(getNodesByPanel(panel)) === false) {\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function updateHideIds(showIds, all) {\r\n    let ids = showIds || [];\r\n\r\n    if (isNumber(ids)) {\r\n        ids = [ids];\r\n    }\r\n    if (ids.length > 0) {\r\n        let done = false;\r\n\r\n        ids.forEach((id) => {\r\n            const index = contain(all, id);\r\n\r\n            if (index >= 0) {\r\n                all.splice(index, 1);\r\n                done = true;\r\n            }\r\n        });\r\n        if (done) {\r\n            return all;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function _each(vcontainer, options, fn, ids, context) {\r\n    if (!vcontainer || !options || !isFunction(fn)) return;\r\n    if (ids === 'all') {\r\n        ids = getAllIds(vcontainer);\r\n    }\r\n    if (isNumber(ids)) {\r\n        ids = [ids];\r\n    }\r\n\r\n    if (isArray(ids) && ids.length > 0) {\r\n        ids.forEach((id) => {\r\n            id = getId(id, options.alias);\r\n            if (id > 0) {\r\n                const panel = vcontainer.getChild(id);\r\n\r\n                if (panel && isDOM(panel.realDom)) {\r\n                    const elements = getRealNodesByPanel(panel, id, options);\r\n\r\n                    if (context) {\r\n                        fn = bind(fn, context);\r\n                    }\r\n                    if (fn(elements) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function _full(vc, id, zIndex) {\r\n    if (id > 0 && vc) {\r\n        const node = vc.getChild(id);\r\n\r\n        if (node) {\r\n            node.oldSize = {\r\n                zIndex: node.styles.zIndex,\r\n                width: node.width,\r\n                height: node.height,\r\n                top: node.top,\r\n                left: node.left,\r\n            };\r\n            node.setWidth(vc.width)\r\n                .setHeight(vc.height)\r\n                .setTop(0)\r\n                .setLeft(0)\r\n                .setStyle({ zIndex })\r\n                .update();\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function _unFull(vcontainer, id) {\r\n    if (isNumber(id) && id > 0) {\r\n        const node = vcontainer.getChild(id);\r\n\r\n        if (node && node.oldSize && node.realDom) {\r\n            node.setStyle({\r\n                zIndex: node.oldSize.zIndex || 1,\r\n            });\r\n            node.width = node.oldSize.width;\r\n            node.height = node.oldSize.height;\r\n            node.top = node.oldSize.top;\r\n            node.left = node.oldSize.left;\r\n            node.update();\r\n            node.oldSize = null;\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function _removeStyle(node, option) {\r\n    if (!node || !option) return;\r\n\r\n    let _class = '',\r\n        _css = null;\r\n\r\n    if (isString(option)) {\r\n        _class = option;\r\n    }\r\n    if (isObject(option) && !isEmptyObject(option)) {\r\n        if (option.classname && isString(option.classname)) {\r\n            _class = option.classname;\r\n        }\r\n        if (isObject(option.css) && !isEmptyObject(option.css)) {\r\n            _css = cloneJsonObject(option.css);\r\n        }\r\n        if (!option.classname && !option.css) {\r\n            _css = cloneJsonObject(option);\r\n        }\r\n    }\r\n    if (_class) {\r\n        if (isDOM(node)) {\r\n            removeClass(node, _class);\r\n        } else {\r\n            node.removeClassName(_class);\r\n            if (node.realDom) {\r\n                removeClass(node.realDom, _class);\r\n            }\r\n        }\r\n    }\r\n    if (_css) {\r\n        for (const key in _css) {\r\n            _css[key] = '';\r\n        }\r\n        if (isDOM(node)) {\r\n            css(node, _css);\r\n        } else {\r\n            node.setStyle(_css);\r\n            if (node.realDom) {\r\n                css(node.realDom, _css);\r\n            }\r\n        }\r\n    }\r\n    if (!isDOM(node) && node.update) {\r\n        node.update();\r\n    }\r\n}\r\n\r\nexport function removeStyle(c, vc, o, style) {\r\n    if (isObject(style)) {\r\n        const { container, custom } = style,\r\n            df = style.default;\r\n\r\n        if (container) {\r\n            _removeStyle(c, container);\r\n        }\r\n        if (isObject(df)) {\r\n            vc.children.forEach((panel) => {\r\n                for (const key in df) {\r\n                    const target = getNodesByPanel(panel)[key];\r\n\r\n                    if (target) {\r\n                        _removeStyle(target, df[key]);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        (isArray(custom) ? custom : [custom]).forEach((com) => {\r\n            if (isObject(com) && com.panels) {\r\n                veach(vc, (elements) => {\r\n                    for (const key in com) {\r\n                        if (com[key] && elements[key]) {\r\n                            _removeStyle(elements[key], com[key]);\r\n                        }\r\n                    }\r\n                }, getRealIds(vc, com.panels, o.alias));\r\n            }\r\n        });\r\n\r\n        vc.update();\r\n    }\r\n}\r\n\r\nexport function _setStyle(node, option, isUpdate, overwrite) {\r\n    if (!node || !option) return;\r\n\r\n    let _class = '',\r\n        _css = null;\r\n\r\n    if (isString(option)) {\r\n        _class = option;\r\n    }\r\n    if (isObject(option) && !isEmptyObject(option)) {\r\n        if (option.classname && isString(option.classname)) {\r\n            _class = option.classname;\r\n        }\r\n        if (isObject(option.css) && !isEmptyObject(option.css)) {\r\n            _css = option.css;\r\n        }\r\n        if (!option.classname && !option.css) {\r\n            _css = option;\r\n        }\r\n    }\r\n    if (_class) {\r\n        if (isDOM(node)) {\r\n            if (isUpdate) {\r\n                if (overwrite) {\r\n                    setClass(node, _class);\r\n                } else {\r\n                    addClass(node, _class);\r\n                }\r\n            }\r\n        } else {\r\n            if (overwrite) {\r\n                node.setClassName(_class);\r\n            } else {\r\n                node.addClassName(_class);\r\n            }\r\n            if (isUpdate && node.realDom) {\r\n                if (overwrite) {\r\n                    setClass(node.realDom, _class);\r\n                } else {\r\n                    addClass(node.realDom, _class);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (_css) {\r\n        if (isDOM(node)) {\r\n            if (isUpdate) {\r\n                css(node, _css);\r\n            }\r\n        } else {\r\n            node.setStyle(_css);\r\n            if (isUpdate && node.realDom) {\r\n                css(node.realDom, _css);\r\n            }\r\n        }\r\n    }\r\n    if (!isDOM(node) && node.update) {\r\n        node.update();\r\n    }\r\n}\r\n\r\nexport function _initStyle(c, vc, zoom, zoomParent, o, styleOption, update) {\r\n    if (!vc || !o) return;\r\n    const style = styleOption || {},\r\n        { custom, inner, zoomContainer, zoomPane, container } = style,\r\n        df = style.default;\r\n\r\n    if (container && update) {\r\n        _setStyle(c, container, true);\r\n    }\r\n\r\n    if (inner) {\r\n        _setStyle(vc, inner);\r\n    }\r\n    if (zoomContainer) {\r\n        _setStyle(zoom, zoomContainer);\r\n    }\r\n    if (zoomPane) {\r\n        _setStyle(zoomParent, zoomPane);\r\n    }\r\n    if (isObject(df)) {\r\n        vc.children.forEach((panel) => {\r\n            for (const key in df) {\r\n                _setStyle(getNodesByPanel(panel)[key], df[key], true);\r\n            }\r\n        });\r\n    }\r\n    if (custom) {\r\n        (isArray(custom) ? custom : [custom]).forEach((com) => {\r\n            if (isObject(com) && com.panels) {\r\n                veach(vc, (elements) => {\r\n                    for (const key in com) {\r\n                        if (com[key] && elements[key] && !(elements[key].isExtend)) {\r\n                            _setStyle(elements[key], com[key], true, true);\r\n                        }\r\n                    }\r\n                }, getRealIds(vc, com.panels, o.alias));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function updateStyle(c, vc, zoom, zoomParent, o, styleOption, isExtend) {\r\n    if (!vc || !o) return;\r\n    const style = styleOption || {},\r\n        { container, custom, inner, zoomContainer, zoomPane } = style,\r\n        df = style.default;\r\n\r\n    if (container) {\r\n        _setStyle(c, container, true);\r\n    }\r\n\r\n    if (inner) {\r\n        _setStyle(vc, inner, true);\r\n    }\r\n\r\n    if (zoomContainer) {\r\n        _setStyle(zoom, zoomContainer, true);\r\n    }\r\n\r\n    if (zoomPane) {\r\n        _setStyle(zoomParent, zoomPane, true);\r\n    }\r\n    if (isObject(df)) {\r\n        vc.children.forEach((panel) => {\r\n            for (const key in df) {\r\n                _setStyle(getNodesByPanel(panel)[key], df[key], true);\r\n            }\r\n        });\r\n    }\r\n    if (custom) {\r\n        (isArray(custom) ? custom : [custom]).forEach((com) => {\r\n            if (isObject(com) && com.panels) {\r\n                veach(vc, (elements) => {\r\n                    for (const key in com) {\r\n                        if (com[key] && elements[key]) {\r\n                            _setStyle(elements[key], com[key], true, false);\r\n                        }\r\n                    }\r\n                }, getRealIds(vc, com.panels, o.alias));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function removeGuidelines(container) {\r\n    if (isDOM(container)) {\r\n        const gd = container.querySelector(`.${CT.GUIDELINES}`);\r\n\r\n        if (isDOM(gd)) {\r\n            gd.parentNode.removeChild(gd);\r\n        }\r\n    }\r\n}\r\n\r\n/*eslint-disable */\r\nfunction getNewSize(old, percent, vsize, vvsize, totalSize) {\r\n    return old !== undefined ? (percent !== null ? percent * totalSize : vsize) : vvsize;\r\n}\r\n/*eslint-enable*/\r\n\r\nfunction setNodeLayout(vnode, vvnode, size, fullId, fullzIndex) {\r\n    if ((vvnode.width !== undefined || vvnode.width !== null) && !vnode.isExtend) {\r\n        const { _oldWidth, _oldHeight, _oldTop, _oldLeft,\r\n            width, height, top, left,\r\n            percentWidth, percentHeight, percentLeft, percentTop } = vnode;\r\n\r\n        vnode\r\n            .setHeight(getNewSize(_oldHeight, percentHeight, height, vvnode.height, size.height))\r\n            .setWidth(getNewSize(_oldWidth, percentWidth, width, vvnode.width, size.width))\r\n            .setTop(getNewSize(_oldTop, percentTop, top, vvnode.top, size.height))\r\n            .setLeft(getNewSize(_oldLeft, percentLeft, left, vvnode.left, size.width));\r\n    }\r\n\r\n    if (vvnode.oldSize) {\r\n        vnode.oldSize = vvnode.oldSize;\r\n        vnode.setStyle({\r\n            zIndex: vvnode.styles.zIndex || CT.PANEL_DEFAULT_ZINDEX,\r\n        });\r\n    }\r\n    if (fullId > 0 && vnode.getId() === fullId) {\r\n        vnode.setLeft(0).setTop(0).setStyle({\r\n            zIndex: fullzIndex,\r\n        });\r\n    }\r\n}\r\n\r\nfunction updateOldVc(vnode, vvnode, size, o, fullId, fullzIndex) {\r\n    setNodeLayout(vnode, vvnode, size, fullId, fullzIndex);\r\n    vnode.children.forEach((vn) => {\r\n        vvnode.children.forEach((vvn) => {\r\n            if (vn.getId() === vvn.getId() && vnode.getRole() !== CT.PANEL) {\r\n                setNodeLayout(vn, vvn, size, fullId, fullzIndex);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction _setOverflow(vc, ids, type) {\r\n    if (!vc || !ids || !type) return;\r\n    if (isNumber(ids)) {\r\n        ids = [ids];\r\n    }\r\n    if (isArray(ids)) {\r\n        ids.forEach((id) => {\r\n            const panel = getNodeById(vc, id, 'wrap');\r\n            let style = null;\r\n\r\n            if (panel) {\r\n                if (type === 'auto' || type === 'visible') {\r\n                    style = { overflow: type };\r\n                }\r\n                if (type === 'overflowX' || type === 'overflowY') {\r\n                    style[type] = 'auto';\r\n                }\r\n\r\n                panel.setStyle(style).update();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function setOverflows(vc, o) {\r\n    if (!vc || !o || !o.panelOverflow) return;\r\n    const overflow = o.panelOverflow;\r\n\r\n    if (overflow) {\r\n        for (const key in overflow) {\r\n            if (overflow[key] === 'all') {\r\n                overflow[key] = getAllIds(vc);\r\n            }\r\n            if (isNumber(overflow[key]) || isArray(overflow[key])) {\r\n                _setOverflow(vc, overflow[key], key);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateContainerSize(vc, o) {\r\n    const { left, right, bottom, top } = o.padding;\r\n\r\n    return {\r\n        width: vc.width + left + right,\r\n        height: vc.height + top + bottom,\r\n    };\r\n}\r\n\r\nexport function updateVCC(vc, c, sizes, o, fullId, zIndex) {\r\n    if (!vc || !isDOM(c) || !sizes || !o) return;\r\n\r\n    const vcc = createVc(),\r\n        panels = [],\r\n        ids = [];\r\n\r\n    initLayout(o, vcc);\r\n\r\n    updateLayout(vcc, c, sizes, o, panels, ids);\r\n\r\n    loadExtends(vcc, o, false);\r\n\r\n    if (fullId) {\r\n        _full(vcc, fullId, zIndex || 0);\r\n    }\r\n\r\n    updateOldVc(vc, vcc, updateContainerSize(vcc, o), o, fullId, zIndex);\r\n\r\n    updateExtends(vc, o);\r\n\r\n    vc.update();\r\n\r\n    if (o.dev.enable) {\r\n        loadDev(c, vc, o);\r\n    }\r\n\r\n    setLineheight(vc, o.lineHeight);\r\n}\r\n\r\nfunction _setNodeLineHeight(target) {\r\n    if (target && target.realDom) {\r\n        const { realDom } = target,\r\n            height = getPureStyle(realDom, 'height') || realDom.clientHeight,\r\n            pt = getPureStyle(realDom, 'padding-top'),\r\n            pb = getPureStyle(realDom, 'padding-bottom'),\r\n            bt = getPureStyle(realDom, 'border-top-width'),\r\n            bb = getPureStyle(realDom, 'border-bottom-width');\r\n\r\n        target.setStyle({ lineHeight: `${height - pt - pb - bt - bb}px` }).update();\r\n    }\r\n}\r\n\r\nexport function setLineheight(vc, option) {\r\n    if (!vc || !option) return;\r\n    const op = isObject(option) ? [option] : option;\r\n\r\n    if (isArray(op)) {\r\n        op.forEach((o) => {\r\n            let panels = o.panels;\r\n            const type = o.type || 'head';\r\n\r\n            if (isNumber(panels)) {\r\n                panels = [panels];\r\n            }\r\n            if (isString(panels) && panels === 'all') {\r\n                panels = getAllIds(vc);\r\n            }\r\n            if (isArray(panels)) {\r\n                veach(vc, (nodes) => {\r\n                    (isArray(type) ? type : [type]).forEach((t) => {\r\n                        if (isString(t) && nodes) {\r\n                            if (t === 'all') {\r\n                                ['head', 'center', 'right', 'foot', 'left'].forEach((_t) => {\r\n                                    _setNodeLineHeight(nodes[_t]);\r\n                                });\r\n                            } else {\r\n                                _setNodeLineHeight(nodes[t]);\r\n                            }\r\n                        }\r\n                    });\r\n                }, panels);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction insertTplDomToVc(target, vnode, type) {\r\n    if (isDOM(target) && attr(target, CT.TARGET) === type && vnode && vnode.realDom) {\r\n        vnode.realDom.appendChild(target);\r\n    }\r\n}\r\n\r\nexport function loadTemplate(c, vc, o) {\r\n    if (!isDOM(c) || !vc || !isDOM(vc.realDom) || !o) return;\r\n    eachChild(c, (node) => {\r\n        if (isDOM(node) && node.hasAttribute(CT.POPO)) {\r\n            const id = getRealIds(vc, node.getAttribute(CT.POPO), o.alias),\r\n                panel = getNodeById(vc, id, 'panel'),\r\n                title = node.getAttribute('title'),\r\n                cls = node.getAttribute('class');\r\n\r\n            if (panel && panel.realDom) {\r\n                const els = getNodesByPanel(panel);\r\n\r\n                addClass(panel.realDom, cls);\r\n                eachChild(node, (target) => {\r\n                    for (const key in els) {\r\n                        if (key !== 'panel' && els[key]) {\r\n                            insertTplDomToVc(target, els[key], key);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (!query(node, `[${CT.TARGET}=head]`) && title && els.head\r\n                    && els.head.realDom && !els.head.realDom.hasChildNodes()) {\r\n                    els.head.realDom.innerHTML = title;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function restorePanelTemplate(panel, c, vc, o) {\r\n    if (!panel || !isDOM(panel.realDom) || !isDOM(c) || !vc || !o) return;\r\n    eachChild(c, (node) => {\r\n        if (isDOM(node) && node.hasAttribute(CT.POPO)) {\r\n            const id = getRealIds(vc, node.getAttribute(CT.POPO), o.alias);\r\n\r\n            if (panel.getId() === id) {\r\n                const nodes = getNodesByPanel(panel);\r\n\r\n                for (const type in nodes) {\r\n                    if (nodes[type] && nodes[type].realDom) {\r\n                        const target = nodes[type].realDom.firstChild;\r\n\r\n                        if (isDOM(target) && type === target.getAttribute(CT.TARGET)) {\r\n                            node.appendChild(target);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\nexport function restoreTemplate(c, vc, o) {\r\n    if (!isDOM(c) || !vc || !isDOM(vc.realDom) || !o) return;\r\n    eachChild(c, (node) => {\r\n        if (isDOM(node) && node.hasAttribute(CT.POPO)) {\r\n            const id = getRealIds(vc, node.getAttribute(CT.POPO), o.alias),\r\n                panel = getNodeById(vc, id, 'panel');\r\n\r\n            if (panel && panel.realDom) {\r\n                const nodes = getNodesByPanel(panel);\r\n\r\n                for (const type in nodes) {\r\n                    if (nodes[type] && nodes[type].realDom) {\r\n                        const target = nodes[type].realDom.firstChild;\r\n\r\n                        if (isDOM(target) && type === target.getAttribute(CT.TPL)) {\r\n                            target.removeAttribute(CT.TPL);\r\n                            addClass(target, type);\r\n                            node.appendChild(target);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function getScrollPane(o, c, init) {\r\n    /*eslint-disable */\r\n    const target = o.zoom.enable ? c.parentNode.parentNode : c.parentNode;\r\n    /*eslint-enable */\r\n\r\n    if (init && isDOM(target)) {\r\n        target.scrollLeft = 0;\r\n        target.scrollTop = 0;\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport function focusOn(vc, c, o, id, offsetX, offsetY) {\r\n    if (!vc || !c || !o || !id < 0) return;\r\n\r\n    const panel = getNodeById(vc, getId(id, o.alias), 'panel');\r\n\r\n    if (panel) {\r\n        const pane = getScrollPane(o, c, true),\r\n            scale = o.zoom.enable ? o.zoom.scale : 1;\r\n\r\n        if (pane && isDOM(pane)) {\r\n            pane.scrollLeft = (panel.left + offsetX) * scale;\r\n            pane.scrollTop = (panel.top + offsetY) * scale;\r\n        }\r\n    }\r\n}\r\n\r\nexport function zoomUpdate(vc, c, scale) {\r\n    if (!vc || !c || !scale) return;\r\n    const rect = getRect(c.parentNode.parentNode),\r\n        width = (c._origionWidth || vc.width),\r\n        height = (c._origionHeight || vc.height);\r\n\r\n    let top = (rect.height - (height * scale)) / 2,\r\n        left = (rect.width - (width * scale)) / 2;\r\n\r\n    if (top < 0 || scale === 1) top = 0;\r\n    if (left < 0 || scale === 1) left = 0;\r\n\r\n    css(c.parentNode, {\r\n        paddingTop: `${top}px`,\r\n        paddingLeft: `${left}px`,\r\n    });\r\n}\r\n\r\nexport function togglePoPo(c, show) {\r\n    const display = show ? '' : 'none';\r\n\r\n    eachChild(c, (node) => {\r\n        if (isDOM(node) && node.getAttribute(CT.POPO)) {\r\n            css(node, { display });\r\n        }\r\n    });\r\n}","const NM = 'popo';\r\n\r\n/**\r\n * Enum for system constant\r\n * @enum\r\n * @readonly\r\n */\r\nexport default {\r\n\r\n    /**\r\n     * @const\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    MIN_LY_COUNT: 1,\r\n\r\n    /**\r\n     * Grids system column count\r\n     * @const\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    COLS: 24,\r\n\r\n    /**\r\n     * Grids system row count\r\n     * @const\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    ROWS: 12,\r\n\r\n    /**\r\n     * Panel default zIndex\r\n     * @const\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    PANEL_DEFAULT_ZINDEX: 1,\r\n\r\n    NAME: NM,\r\n\r\n    POPO: `data-${NM}`,\r\n\r\n    ROLE: `data-${NM}-role`,\r\n\r\n    TARGET: `data-${NM}-target`,\r\n\r\n    COMPONENT_ID_KEY: `data-${NM}-id`,\r\n\r\n    EXT_PANE: `${NM}-ext-pane`,\r\n\r\n    PANE: `pane`,\r\n\r\n    CONTAINER: `container`,\r\n\r\n    PANEL: `panel`,\r\n\r\n    PANEL_CONTAINER: `panel-container`,\r\n\r\n    WRAP: `wrap`,\r\n\r\n    GRID_L_C_R: 'lcr',\r\n\r\n    GRID_HEAD: `head`,\r\n\r\n    GRID_CENTER: `center`,\r\n\r\n    GRID_LEFT: `left`,\r\n\r\n    GRID_RIGHT: `right`,\r\n\r\n    GRID_FOOT: `foot`,\r\n\r\n    SINGLE_ROW: `${NM}-s-row`,\r\n\r\n    ROW: `${NM}-row`,\r\n\r\n    COL: `${NM}-col`,\r\n\r\n    INFO: `${NM}-dev-info`,\r\n\r\n    GUIDELINES: `${NM}-guideline`,\r\n\r\n    PANEL_GUIDELINES: `${NM}-panel-guideline`,\r\n\r\n    SPLITLINES: `${NM}-splitline`,\r\n\r\n    ZOOMPANE: `zoom-pane`,\r\n\r\n    ZOOMCONTAINER: `zoom-container`,\r\n\r\n    ATTRIBUTTION: `${NM}-attribution`,\r\n\r\n    ZOOMIN: `${NM}-ct-zoom-in`,\r\n\r\n    ZOOMOUT: `${NM}-ct-zoom-out`,\r\n\r\n    ZOOMINFO: `${NM}-ct-zoom-info`,\r\n\r\n    TPL: `data-${NM}-tpl`,\r\n\r\n    DRAW_ID_KEY: `${NM}-ts`,\r\n\r\n    LINE: 'l',\r\n\r\n    PATH: 'p',\r\n\r\n    CIRCLE: 'c',\r\n\r\n    FILTER: 'f',\r\n\r\n    MARKER: 'm',\r\n\r\n    LINER_GRADIENT: 'lg',\r\n\r\n    RADIAL_GRADIENT: 'rg',\r\n\r\n    BORDER: 'b',\r\n\r\n    EVENT: `_${NM}_event`,\r\n\r\n};\r\n","const ua = navigator.userAgent.toLowerCase(),\r\n    doc = document.documentElement,\r\n    width = window.innerWidth || doc.clientWidth || document.body.clientWidth,\r\n    height = window.innerHeight || doc.clientHeight || document.body.clientHeight,\r\n    ie = 'ActiveXObject' in window,\r\n    webkit = ua.indexOf('webkit') !== -1,\r\n    mobile = typeof orientation !== 'undefined' || ua.indexOf('mobile') !== -1;\r\n\r\nexport default {\r\n\r\n    ie,\r\n\r\n    width,\r\n\r\n    height,\r\n\r\n    aspectRatio: width / height,\r\n\r\n    webkit,\r\n\r\n    mobile,\r\n\r\n};\r\n","export default {\r\n\r\n    POPO_EXSIT: 'The target container has been initialized by popo.',\r\n\r\n    CONTAINER_ERR: 'The target container was not found',\r\n\r\n    LY_INVALID: 'Layout array is invalid.',\r\n\r\n    LY_FIXED_LESS: 'Fixed height and fixed width shall not be less than 1 at the same time.',\r\n\r\n};\r\n","import {\r\n    isNumber, isString, isDOM, isObject, contain, isEmptyObject, getObjectFromArray,\r\n    removeObjectFromArray, stamp, splitWords, mixin, formatNum, unique,\r\n} from '../../utils/util';\r\nimport { css, attr } from '../dom';\r\nimport CT from '../../constant/constant';\r\n\r\n/**\r\n * @class VNode\r\n * @ignore\r\n */\r\nexport default class VNode {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {String} nodeName node TagName\r\n     */\r\n    constructor(nodeName) {\r\n        this.nodeName = nodeName || 'div';\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.classNames = '';\r\n        this.children = [];\r\n        this.styles = {};\r\n        this.parentNode = null;\r\n        this.html = '';\r\n        this.role = '';\r\n        this.isExtend = false;\r\n        stamp(this);\r\n    }\r\n\r\n    /**\r\n     * Add class\r\n     * @param {String} name classname\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    addClassName(name) {\r\n        if (isString(name)) {\r\n            if (this.classNames === '') {\r\n                this.classNames = name;\r\n\r\n                return this;\r\n            }\r\n            const cns = splitWords(this.classNames);\r\n\r\n            splitWords(name).forEach((n) => {\r\n                const inner = contain(cns, n);\r\n\r\n                if (inner < 0) {\r\n                    this.classNames += ` ${n}`;\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * remove class name\r\n     * @param {String} name classname\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    removeClassName(name) {\r\n        if (isString(name)) {\r\n            const cns = splitWords(this.classNames),\r\n                inner = contain(cns, name);\r\n\r\n            if (inner >= 0) {\r\n                cns[inner] = '';\r\n                this.classNames = cns.join(' ');\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clear node class\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    clearClassName() {\r\n        this.classNames = '';\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clear current class and set new class\r\n     * @param {String} classname classname\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setClassName(classname) {\r\n        if (classname && isString(classname)) {\r\n            this.classNames = classname;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get child\r\n     * @param {Number|String} id id\r\n     * @return {VNode} vnode\r\n     */\r\n    getChild(id) {\r\n        if (!isNumber(id)) {\r\n            id = Number(id);\r\n        }\r\n        if (!isNaN(id) && id > 0) {\r\n            return getObjectFromArray(this.children, CT.COMPONENT_ID_KEY, id);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Set node role\r\n     * @param {String} role node role.\r\n     * @return {VNode} vnode\r\n     */\r\n    setRole(role) {\r\n        this.role = role;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get node role\r\n     * @return {String} role\r\n     */\r\n    getRole() {\r\n        return this.role;\r\n    }\r\n\r\n    /**\r\n     * Query child by role\r\n     * @param {String} role node role\r\n     * @return {VNode} node\r\n     */\r\n    queryByRole(role) {\r\n        let result = null;\r\n\r\n        function _query(vnode) {\r\n            if (vnode && vnode.children.length > 0) {\r\n                vnode.children.forEach((node) => {\r\n                    if (node.role === role) {\r\n                        result = node;\r\n\r\n                        return;\r\n                    }\r\n                    _query(node);\r\n                });\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return _query(this);\r\n    }\r\n\r\n    /**\r\n     * Set node id\r\n     * @param {String} id id\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setId(id) {\r\n        this[CT.COMPONENT_ID_KEY] = id;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get vnode id\r\n     * @return {Number} id\r\n     */\r\n    getId() {\r\n        return this[CT.COMPONENT_ID_KEY];\r\n    }\r\n\r\n    /**\r\n     * Set width\r\n     * @param {Number} width width\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setWidth(width) {\r\n        this.width = width;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set Height\r\n     * @param {Number} height height\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setHeight(height) {\r\n        this.height = height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get node width\r\n     * @return {Number} width\r\n     */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    /**\r\n     * Get node height\r\n     * @return {Number} height\r\n     */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    /**\r\n     * Set margin\r\n     * @param {Number} margin margin\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setMargin(margin) {\r\n        this.margin = margin;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get margin\r\n     * @return {Number} margin\r\n     */\r\n    getMargin() {\r\n        return this.margin;\r\n    }\r\n\r\n    /**\r\n     * Get px size\r\n     * @ignore\r\n     * @param {Number|String} size size\r\n     * @return {String} size\r\n     */\r\n    _getSize(size) {\r\n        return isNumber(size) ? `${formatNum(size, 5)}px` : size;\r\n    }\r\n\r\n    /**\r\n     * Set styles\r\n     * @param {Object} styles styles\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setStyle(styles) {\r\n        mixin(this.styles, styles);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set top\r\n     * @param {Number} top top\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setTop(top) {\r\n        this.top = top;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get top\r\n     * @return {Number} top\r\n     */\r\n    getTop() {\r\n        return this.top;\r\n    }\r\n\r\n    /**\r\n     * Set left\r\n     * @param {Number} left left\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setLeft(left) {\r\n        this.left = left;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get left\r\n     * @return {Number} left\r\n     */\r\n    getLeft() {\r\n        return this.left;\r\n    }\r\n\r\n    /**\r\n     * Insert to parent vnode\r\n     * @param {VNode} parent parent vnode\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    insertTo(parent) {\r\n        if (parent && parent.children) {\r\n            parent.children.push(this);\r\n            this.parentNode = parent;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add child vnode\r\n     * @param {VNode} son child vnode\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    addNode(son) {\r\n        if (son) {\r\n            this.children.push(son);\r\n            son.parentNode = this;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove child\r\n     * @param {VNode} node child vnode\r\n     */\r\n    removeNode(node) {\r\n        if (isObject(node)) {\r\n            if (node && node._popo_id && this.children.length > 0) {\r\n                removeObjectFromArray(this.children, '_popo_id', node._popo_id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove All Child\r\n     */\r\n    clear() {\r\n        if (this.children && this.children.length > 0) {\r\n            this.children.forEach((node) => {\r\n                node.remove();\r\n            });\r\n            this.children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove instance\r\n     */\r\n    remove() {\r\n        const that = this;\r\n\r\n        if (this.parentNode) {\r\n            this.parentNode.removeNode(that);\r\n        }\r\n        if (isDOM(this.realDom)) {\r\n            this.realDom.parentNode.removeChild(this.realDom);\r\n            this.realDom = null;\r\n        }\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.top = 0;\r\n        this.left = 0;\r\n        this.classNames = '';\r\n        this.styles = {};\r\n        if (this.children && this.children.length > 0) {\r\n            this.children.forEach((node) => {\r\n                node.remove();\r\n            });\r\n            this.children = [];\r\n        }\r\n        this.parentNode = null;\r\n    }\r\n\r\n    /**\r\n     * Render current vnode\r\n     * @param {HTMLElement} node node\r\n     * @return {HTMLElement} node\r\n     */\r\n    render(node) {\r\n        if (!node) return node;\r\n\r\n        const realDomClass = attr(node, 'class'),\r\n            cls = realDomClass ? unique(splitWords(realDomClass)\r\n                .concat(splitWords(this.classNames))).join(' ') : this.classNames;\r\n\r\n        if (cls) {\r\n            attr(node, 'class', cls);\r\n        }\r\n\r\n        const w = this.width,\r\n            h = this.height;\r\n\r\n        // if (this.styles.width === undefined || this.styles.width === null) {\r\n        this.setStyle({\r\n            width: w ? this._getSize(w) : '100%',\r\n            height: h ? this._getSize(h) : '100%',\r\n        });\r\n        // }\r\n\r\n        // if (this.styles.height === undefined || this.styles.height === null) {\r\n        // this.setStyle({\r\n        //     height: h ? this._getSize(h) : '100%',\r\n        // });\r\n        // }\r\n\r\n        if (this.top !== undefined) {\r\n            this.setStyle({ top: this._getSize(this.top) });\r\n        }\r\n\r\n        if (this.left !== undefined) {\r\n            this.setStyle({ left: this._getSize(this.left) });\r\n        }\r\n\r\n        if (this.margin !== undefined) {\r\n            this.setStyle({ margin: this._getSize(this.margin) });\r\n        }\r\n\r\n        if (!isEmptyObject(this.styles)) {\r\n            css(node, this.styles);\r\n        }\r\n\r\n        if (this[CT.COMPONENT_ID_KEY]) {\r\n            attr(node, CT.COMPONENT_ID_KEY, this[CT.COMPONENT_ID_KEY]);\r\n        }\r\n\r\n        if (this.role) {\r\n            attr(node, 'data-popo-role', this.role);\r\n        }\r\n\r\n        if (this.id) {\r\n            node.id = this.id;\r\n        }\r\n\r\n        if (this.html) {\r\n            node.innerHTML = this.html;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Set node innerHTML\r\n     * @param {String} html html\r\n     * @return {VNode} current vnode instance\r\n     */\r\n    setHtml(html) {\r\n        if (html && isString(html)) {\r\n            this.html = html;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Update vnode\r\n     */\r\n    update() {\r\n        const realDom = this.realDom;\r\n\r\n        if (realDom) {\r\n            this.render(realDom);\r\n            this.children.forEach((vnode) => { vnode.update(); });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create Html element\r\n     * @return {HTMLElement} node\r\n     */\r\n    createElement() {\r\n        const node = this.realDom || document.createElement(this.nodeName);\r\n\r\n        /*eslint-disable */\r\n        node._popo_id = this._popo_id;\r\n        /*eslint-enable */\r\n\r\n        this.render(node);\r\n        this.children.forEach((c) => {\r\n            node.appendChild(c.createElement());\r\n        });\r\n\r\n        this.realDom = node;\r\n        node.vnode = this;\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Get last child\r\n     * @return {Vnode} vnode\r\n     */\r\n    getLastChild() {\r\n        const c = this.children,\r\n            len = c.length;\r\n\r\n        return len > 0 ? c[len - 1] : c[0];\r\n    }\r\n\r\n    /**\r\n     * Get new Id\r\n     * @return {Number} id\r\n     */\r\n    getNewId() {\r\n        const lastChild = this.getLastChild();\r\n\r\n        return lastChild ? lastChild.getId() + 1 : 1;\r\n    }\r\n}\r\n","import CT from '../../constant/constant';\r\n\r\nexport default {\r\n\r\n    // Layout container\r\n    // It can be either DOM or ID and classname\r\n    container: '',\r\n\r\n    // Define grid rows number. Sets the number of rows in the layout. default value is 12.\r\n    rows: CT.ROWS,\r\n\r\n    // Sets the number of columns in the layout. default value is 24.\r\n    cols: CT.COLS,\r\n\r\n    // Define grid cols number. The default will be stretched over the width of the entire container.\r\n    // px\r\n    width: 0,\r\n\r\n    // The default will be full of the entire container height.\r\n    // px\r\n    height: 0,\r\n\r\n    // Gutter\r\n    gutter: 10,\r\n\r\n    // The default is the panel that is spread across the container.\r\n    // []\r\n    // {row:4, col:6, height:0, width:0}\r\n    layout: null,\r\n\r\n    // Layout start type\r\n    layoutStartType: 'row',\r\n\r\n    // font scale, only setting for panel size.\r\n    fontScale: 1,\r\n\r\n    // Full screen display of panel\r\n    fullId: 0,\r\n\r\n    // Full screen panel zIndex\r\n    fullZIndex: 0,\r\n\r\n    // scroll, when zoom is enable, scroll will be disabled.\r\n    scroll: {\r\n        x: false,\r\n        y: false,\r\n    },\r\n\r\n    // drag enable or disable.\r\n    drag: false,\r\n\r\n    // Panel setting\r\n    panel: {\r\n        enable: false,\r\n        default: {\r\n            headHeight: 0,\r\n            footHeight: 0,\r\n            leftWidth: 0,\r\n            rightWidth: 0,\r\n            gutter: 0,\r\n            zIndex: CT.PANEL_DEFAULT_ZINDEX,\r\n        },\r\n        custom: [],\r\n    },\r\n\r\n    overflowVisible: false,\r\n\r\n    // Setting Panel overflow\r\n    panelOverflow: {\r\n        visible: '',\r\n        overflowX: '',\r\n        overflowY: '',\r\n    },\r\n\r\n    /**\r\n     * dev options\r\n     * @type {Object}\r\n     * @define\r\n     */\r\n    dev: {\r\n        /**\r\n         * @param {Boolean} enable enbale or disable dev. @default false\r\n         */\r\n        enable: false,\r\n        // Panel info setting\r\n        panel: {\r\n            show: true,\r\n            id: true,\r\n            size: false,\r\n            position: false,\r\n            background: '',\r\n            fontSize: 14,\r\n            fontColor: '#333',\r\n        },\r\n        // layout guideline setting\r\n        guideline: {\r\n            show: false,\r\n            identifier: true,\r\n            lineSize: 1,\r\n            color: 'rgba(0,0,0,.25)',\r\n            zIndex: 0,\r\n            fontSize: 14,\r\n            fontColor: '#333',\r\n        },\r\n        // panel guidlines setting\r\n        panelGuideline: {\r\n            show: false,\r\n            ids: 'all',\r\n            lineSize: 0.5,\r\n            size: 15,\r\n            zIndex: 0,\r\n            color: '#888',\r\n        },\r\n        // Screen splitline setting\r\n        splitline: {\r\n            show: false,\r\n            lineSize: 1,\r\n            width: 100,\r\n            height: 100,\r\n            color: '#000',\r\n            zIndex: 0,\r\n            identifier: true,\r\n            fontColor: '#333333',\r\n            fontSize: 12,\r\n        },\r\n        // only show one or some pannels.\r\n        showIds: 0,\r\n    },\r\n\r\n    // Zoom setting\r\n    zoom: {\r\n        enable: false,\r\n        control: true,\r\n        scale: 1,\r\n        ratio: 0.1,\r\n        min: 0.1,\r\n        max: 1,\r\n        position: 'rightTop', // leftTop, leftBottom, rightBottom, rightTop\r\n        wheelZoom: true,\r\n    },\r\n\r\n    /**\r\n     * Focus option\r\n     * @type {Object}\r\n     * @define fouces\r\n     * @param {Number|String} id focus id @default 0\r\n     * @param {Number} offsetX offsetX @default 0\r\n     * @param {Number} offsetY offsetY @default 0\r\n     */\r\n    focus: {\r\n        id: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n    },\r\n\r\n    // set auto line-height. lineheight will to be eqaul element height\r\n    // [{ids: 1, type: 'center, head'}, {ids:[2,3], type:'head'}]\r\n    lineHeight: null,\r\n\r\n    /**\r\n     * Hide ids\r\n     * @type {Array|Number|String}\r\n     * @default\r\n     */\r\n    hideIds: null,\r\n\r\n    /**\r\n     * hide type. include panel, wrap, center, head, foot, left, right\r\n     * @type {String}\r\n     * @default\r\n     */\r\n    hideType: 'panel',\r\n\r\n    /**\r\n     * trace window resize\r\n     * @type {Boolean}\r\n     * @default\r\n     */\r\n    trackResize: true,\r\n\r\n    /**\r\n     * update interval time.ms\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    updateInterval: 200,\r\n\r\n    /**\r\n     * render delay time. ms\r\n     * @type {Number}\r\n     * @default\r\n     */\r\n    renderDelay: 0,\r\n\r\n    /**\r\n     * theme setting.\r\n     * @type {Object}\r\n     * @default\r\n     */\r\n    style: null,\r\n\r\n    /**\r\n     * Extend Panels setting\r\n     * @type {Array}\r\n     * @default\r\n     */\r\n    extends: [],\r\n\r\n    /**\r\n     * onload function\r\n     * @type {Function}\r\n     * @default\r\n     */\r\n    onload: null,\r\n\r\n    /**\r\n     * update function\r\n     * @type {Function}\r\n     * @default\r\n     */\r\n    update: null,\r\n\r\n    /**\r\n     * Alias\r\n     * @type {Object}\r\n     * @default\r\n     */\r\n    alias: null,\r\n};\r\n","import CT from '../../constant/constant';\r\n\r\nconst prefix = `${CT.NAME}-`;\r\n\r\n/**\r\n * Theme option\r\n * @typedef {Object} theme\r\n * @prop {Object} container container theme\r\n * @prop {Object} default panel default theme\r\n * @prop {Object|Array} custom custom panel theme\r\n */\r\nexport default {\r\n    container: prefix + CT.WRAP,\r\n    inner: prefix + CT.CONTAINER,\r\n    zoomContainer: prefix + CT.ZOOMCONTAINER,\r\n    zoomPane: prefix + CT.ZOOMPANE,\r\n    default: {\r\n        panel: prefix + CT.PANEL,\r\n        panelContainer: prefix + CT.PANEL_CONTAINER,\r\n        head: prefix + CT.GRID_HEAD,\r\n        foot: prefix + CT.GRID_FOOT,\r\n        center: prefix + CT.GRID_CENTER,\r\n        right: prefix + CT.GRID_RIGHT,\r\n        left: prefix + CT.GRID_LEFT,\r\n        lcr: prefix + CT.GRID_L_C_R,\r\n    },\r\n    custom: null,\r\n};","import {\r\n    isString, isObject, isEmptyObject, removeObjectFromArray,\r\n    stamp, reverseCamelcase, getPercentage, isArray,\r\n} from '../../utils/util';\r\nimport CT from '../../constant/constant';\r\n\r\nconst keys = ['baseFrequency', 'stdDeviation', 'viewBox', 'numOctaves',\r\n    'tableValues', 'markerWidth', 'markerHeight', 'refX', 'refY',\r\n    'patternUnits', 'patternTransform'].join(' ');\r\n\r\n/**\r\n * SVG\r\n * @class\r\n * @ignore\r\n */\r\nexport default class SVG {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {String} nodeName node tagNae\r\n     * @param {SVG} parent parent node\r\n     */\r\n    constructor(nodeName, parent) {\r\n        this.nodeName = nodeName || 'svg';\r\n        this.attrs = {};\r\n        this.children = [];\r\n        this.parentNode = null;\r\n        this.realNode = null;\r\n        this._stamp();\r\n        this.id = this._popo_id;\r\n        this.styles = {};\r\n        this.style = '';\r\n        this.html = '';\r\n        if (parent) {\r\n            this.insertTo(parent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stamp svg node\r\n     * @ignore\r\n     */\r\n    _stamp() {\r\n        let preffix = '';\r\n\r\n        switch (this.nodeName) {\r\n            case 'filter':\r\n                preffix = CT.FILTER;\r\n                break;\r\n            case 'linearGradient':\r\n                preffix = CT.LINER_GRADIENT;\r\n                break;\r\n            case 'radialGradient':\r\n                preffix = CT.RADIAL_GRADIENT;\r\n                break;\r\n            case 'marker':\r\n                preffix = CT.MARKER;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        stamp(this, preffix);\r\n    }\r\n\r\n    /**\r\n     * Set node id\r\n     * @ignore\r\n     * @return {SVG} current svg instance\r\n     */\r\n    _setId() {\r\n        this.attr({\r\n            id: this.getId(),\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get node id\r\n     * @return {String} id\r\n     */\r\n    getId() {\r\n        return this.attr('id') || `${CT.DRAW_ID_KEY}-${this._popo_id}`;\r\n    }\r\n\r\n    /**\r\n     * Set style\r\n     * @param {Object} styles styles\r\n     * @return {SVG} current svg instance\r\n     */\r\n    setStyle(styles) {\r\n        for (const key in styles) {\r\n            this.styles[key] = styles[key];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add attibutes\r\n     * @param {Object|String} name name\r\n     * @param {Any} value value\r\n     * @return {SVG} current svg instance\r\n     */\r\n    attr(name, value) {\r\n        if (!name) return this;\r\n        if (isString(name)) {\r\n            if (value !== undefined && value !== null) {\r\n                if (keys.indexOf(name) < 0) {\r\n                    name = reverseCamelcase(name);\r\n                }\r\n                this.attrs[name] = value;\r\n\r\n                return this;\r\n            }\r\n\r\n            return this.attrs[name];\r\n        }\r\n\r\n        if (isObject(name)) {\r\n            for (const key in name) {\r\n                if (isObject(name[key]) && name[key] instanceof SVG) {\r\n                    let _key = key;\r\n\r\n                    if (keys.indexOf(key) < 0) {\r\n                        _key = reverseCamelcase(key);\r\n                    }\r\n                    this.attrs[_key] = `url(#${name[key].getId()})`;\r\n                } else if (keys.indexOf(key) < 0) {\r\n                    const _key = reverseCamelcase(key);\r\n\r\n                    if (_key === 'id') {\r\n                        this.attrs[_key] = `${CT.DRAW_ID_KEY}-${name[key]}`;\r\n                    } else {\r\n                        this.attrs[_key] = name[key];\r\n                    }\r\n                } else {\r\n                    this.attrs[key] = name[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set SVG Filter\r\n     * @ignore\r\n     * @param {Object} filters filters\r\n     * @param {Object} node node\r\n     * @return {SVG} current svg instance\r\n     */\r\n    _filter(filters, node) {\r\n        node = node || this;\r\n        for (let i = 0, len = filters.length; i < len; i++) {\r\n            const f = filters[i];\r\n\r\n            for (const key in f) {\r\n                const filter = new SVG(key, node),\r\n                    pureKeys = {};\r\n\r\n                if (isArray(f[key])) {\r\n                    this._filter(f[key], filter);\r\n                } else {\r\n                    for (const _key in f[key]) {\r\n                        if (isObject(f[key][_key])) {\r\n                            new SVG(_key, filter).attr(f[key][_key]);\r\n                        } else {\r\n                            pureKeys[_key] = f[key][_key];\r\n                        }\r\n                    }\r\n                    filter.attr(pureKeys);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set gradient\r\n     * @ignore\r\n     * @param {Array} stops  [offset, stopColor, stopOpacity]\r\n     * @return {SVG} current svg instance\r\n     */\r\n    _stops(stops) {\r\n        for (let i = 0; i < stops.length; i++) {\r\n            new SVG('stop', this).attr({\r\n                offset: `${getPercentage(stops[i][0])}%`,\r\n                stopColor: stops[i][1] || '#333',\r\n                stopOpacity: stops[i][2] || 1,\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Insert to parent\r\n     * @param {Object} parent parentNode\r\n     * @return {SVG} current svg instance\r\n     */\r\n    insertTo(parent) {\r\n        if (parent && parent.children) {\r\n            parent.children.push(this);\r\n            this.parentNode = parent;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Create svg\r\n     * @param {String} nodeName svg tag name\r\n     * @param {Object} attrs attributies\r\n     * @return {SVG} current svg instance\r\n     */\r\n    create(nodeName, attrs) {\r\n        return new SVG(nodeName, this).attr(attrs);\r\n    }\r\n\r\n    /**\r\n     * Add child\r\n     * @param {Object} son svg instance\r\n     * @return {SVG} current svg instance\r\n     */\r\n    add(son) {\r\n        if (son) {\r\n            this.children.push(son);\r\n            son.parentNode = this;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove svg node\r\n     * @param {Object} node svg node instance\r\n     * @return {SVG} current svg instance\r\n     */\r\n    remove(node) {\r\n        if (node && node._popo_id && this.children.length > 0) {\r\n            return removeObjectFromArray(this.children, '_popo_id', node._popo_id);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Render node\r\n     * @ignore\r\n     * @param {SVG} node svg node\r\n     */\r\n    render(node) {\r\n        if (!isEmptyObject(this.styles)) {\r\n            let style = '';\r\n\r\n            for (const key in this.styles) {\r\n                if (isObject(this.styles[key]) && this.styles[key] instanceof SVG) {\r\n                    style += `${key}:url(#${this.styles[key].getId()});`;\r\n                } else {\r\n                    style += `${key}:${this.styles[key]};`;\r\n                }\r\n            }\r\n            if (style) {\r\n                this.attr({ style });\r\n            }\r\n        }\r\n\r\n        const attrs = this.attrs;\r\n\r\n        for (const key in attrs) {\r\n            if (key.indexOf('xlink') >= 0) {\r\n                node.setAttributeNS('http://www.w3.org/1999/xlink', key, attrs[key]);\r\n            } else {\r\n                node.setAttribute(key, attrs[key]);\r\n            }\r\n        }\r\n\r\n        if (this.nodeName === 'style' || this.nodeName === 'text') {\r\n            node.innerHTML = this.html;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set svg inner html\r\n     * @param {String} html html content\r\n     * @return {SVG} current svg instance\r\n     */\r\n    setHtml(html) {\r\n        if (html) {\r\n            this.html = html;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Create svg element\r\n     * @param {Boolean} hidden hidden\r\n     * @return {HTMLObject} html object\r\n     */\r\n    createElement(hidden) {\r\n        if (hidden) {\r\n            this.attr({ width: '0%', height: '0%' });\r\n        }\r\n\r\n        const node = document.createElementNS('http://www.w3.org/2000/svg', this.nodeName);\r\n\r\n        this.render(node);\r\n\r\n        if (this.children && this.children.length > 0) {\r\n            this.children.forEach((c) => {\r\n                if (c.nodeName === 'defs' && c.children.length === 0) {\r\n                    return;\r\n                }\r\n                if (c.nodeName === 'style' && c.html === '') {\r\n                    return;\r\n                }\r\n                node.appendChild(c.createElement());\r\n            });\r\n        }\r\n\r\n        this.realNode = node;\r\n\r\n        if (hidden) {\r\n            node.style.width = '0px';\r\n            node.style.height = '0px';\r\n            node.style.zIndex = -9999;\r\n            node.style.position = 'fixed';\r\n            node.style.top = '-100%';\r\n            node.style.left = '-100%';\r\n        }\r\n\r\n        return node;\r\n    }\r\n}\r\n","import { isArray, getPercentage } from '../../utils/util';\r\nimport CT from '../../constant/constant';\r\nimport VSVG from './vsvg_base';\r\n\r\n/**\r\n * SVG\r\n * @class\r\n * @ignore\r\n */\r\nexport default class SVG extends VSVG {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {String} nodeName node tagName\r\n     * @param {SVG} parent parent svg\r\n     * @param {Object} options options\r\n     */\r\n    constructor(nodeName, parent, options) {\r\n        super(nodeName, parent, options);\r\n        this.attr({\r\n            width: '100%',\r\n            height: '100%',\r\n        });\r\n        this.globalStyle = new VSVG('style', this);\r\n        this.defs = new VSVG('defs', this);\r\n        this._setId();\r\n    }\r\n\r\n    /**\r\n     * Get custom defines\r\n     * @param {string|Number} id defined id\r\n     * @return {String} format defined object\r\n     */\r\n    def(id) {\r\n        return this.defs._getDefById(id) || '';\r\n    }\r\n\r\n    /**\r\n     * Get Custom defined item\r\n     * @ignore\r\n     * @param {String} id id\r\n     * @return {String} defined object\r\n     */\r\n    _getDefById(id) {\r\n        for (let i = 0, len = this.children.length; i < len; i++) {\r\n            const childId = this.children[i].getId();\r\n\r\n            if (childId) {\r\n                if (childId === id || childId === (`${CT.DRAW_ID_KEY}-${id}`)) {\r\n                    return `url(#${childId})`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Add global style\r\n     * @param {String} style style content\r\n     * @return {SVG} current svg instance\r\n     */\r\n    addGlobalStyle(style) {\r\n        this.globalStyle.html += style;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add radial gradient\r\n     * @param {Number} cx circle x center position\r\n     * @param {Number} cy circle y center position\r\n     * @param {Number} r radius\r\n     * @param {Array} stops  stops\r\n     * @return {SVG} new gradient svg\r\n     */\r\n    addRG(cx, cy, r, stops) {\r\n        stops = stops || [\r\n            [0, '#333', 1],\r\n            [1, '#555', 1],\r\n        ];\r\n\r\n        return new VSVG('radialGradient', this.defs)._setId().attr({ cx, cy, r })._stops(stops);\r\n    }\r\n\r\n    /**\r\n     * Add linear gradient\r\n     * @param {*} x1 start x position\r\n     * @param {*} y1 start y position\r\n     * @param {*} x2 end x position\r\n     * @param {*} y2 end y position\r\n     * @param {*} stops  stops array\r\n     * @return {SVG} new gradient svg node\r\n     */\r\n    addLG(x1, y1, x2, y2, stops) {\r\n        x1 = `${getPercentage(x1)}%`;\r\n        y1 = `${getPercentage(y1)}%`;\r\n        x2 = `${getPercentage(x2, 1)}%`;\r\n        y2 = `${getPercentage(y2)}%`;\r\n        stops = stops || [\r\n            [0, '#333', 1],\r\n            [1, '#555', 1],\r\n        ];\r\n\r\n        return new VSVG('linearGradient', this.defs)._setId().attr({ x1, x2, y1, y2 })._stops(stops);\r\n    }\r\n\r\n    /**\r\n     * Add Group\r\n     * @param {Array} units units\r\n     */\r\n    g(units) {\r\n        const g = new VSVG('g', this)._setId();\r\n\r\n        if (isArray(units)) {\r\n            /*eslint-disable */\r\n            units.forEach((u) => {\r\n                new VSVG('path', g);\r\n            })\r\n            /*eslint-enable */\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add filters\r\n     * @param {Object} filters filter\r\n     * @return {SVG} new filter svg\r\n     */\r\n    addFilter(filters) {\r\n        return new VSVG('filter', this.defs)._setId()._filter(filters);\r\n    }\r\n\r\n    /**\r\n     * Add marker\r\n     * @param {Object} markers markers\r\n     * @param {String} color color\r\n     * @return {SVG} new marker svg\r\n     */\r\n    addMarker(markers, color) {\r\n        const marker = new VSVG('marker', this.defs)._setId().attr(markers);\r\n\r\n        new VSVG('circle', marker).attr({\r\n            cx: 5,\r\n            cy: 5,\r\n            r: 4,\r\n            fill: 'none',\r\n            stroke: color || '#ffffff',\r\n            strokeWidth: 1,\r\n        });\r\n\r\n        return marker;\r\n    }\r\n\r\n    /**\r\n     * Add pattern\r\n     * @param {Object} patterns patterns\r\n     * @return {SVG} new pattern svg\r\n     */\r\n    addPattern(patterns) {\r\n        const pattern = new VSVG('pattern', this.defs)._setId().attr(patterns),\r\n            { width, height } = pattern.attrs;\r\n\r\n        new VSVG('line', pattern).attr({\r\n            x1: width / 2,\r\n            y1: 0,\r\n            x2: width / 2,\r\n            y2: height,\r\n            strokeWidth: width / 2,\r\n            stroke: 'rgba(0,0,0,.2)',\r\n        });\r\n\r\n        return pattern;\r\n    }\r\n\r\n    /**\r\n     * Create SVG\r\n     * @param {String} nodeName node tagName\r\n     * @param {Object} attrs attributes\r\n     * @return {SVG} new svg node\r\n     */\r\n    create(nodeName, attrs) {\r\n        return new VSVG(nodeName, this).attr(attrs);\r\n    }\r\n\r\n}\r\n","import CT from '../../constant/constant';\r\n\r\n/**\r\n * Screen extends panel option and addPanel option\r\n * @typedef {Object} panel\r\n * @property {Object} size panel size\r\n * @property {Object} position panel position\r\n * @property {String} id panel dom id\r\n * @property {Number} zIndex panel zIndex\r\n * @prop {Object} layout panel layout.\r\n */\r\nexport default {\r\n    size: {\r\n        width: 0,\r\n        height: 0,\r\n        responsive: true,\r\n    },\r\n    position: {\r\n        left: 0,\r\n        top: 0,\r\n        responsive: true,\r\n    },\r\n    id: '',\r\n    zIndex: CT.PANEL_DEFAULT_ZINDEX,\r\n    layout: null,\r\n};\r\n\r\n//    layout: {\r\n//     headHeight: 0,\r\n//     footHeight: 0,\r\n//     leftWidth: 0,\r\n//     rightWidth: 0,\r\n//     gutter: 0,\r\n// },","import { isDOM, isObject } from '../../utils/util';\r\nimport * as DomEvent from '../../dom/dom_event';\r\nimport { css, getPureStyle } from '../../dom/dom';\r\nimport { getScrollPane } from '../core/popo';\r\n\r\nexport default {\r\n\r\n    /**\r\n     * Start drag\r\n     * @ignore\r\n     * @param {Object} e mouse event param\r\n     */\r\n    _onDragStart(e) {\r\n        DomEvent.stop(e);\r\n        const pane = this._scrollPane;\r\n\r\n        if (isDOM(pane)) {\r\n            const { clientX, clientY } = e,\r\n                { scrollLeft, scrollTop } = pane;\r\n\r\n            this._startDrag = {\r\n                x: clientX,\r\n                y: clientY,\r\n                width: getPureStyle(pane, 'width'),\r\n                height: getPureStyle(pane, 'height'),\r\n                left: scrollLeft,\r\n                top: scrollTop,\r\n            };\r\n            css(pane, { cursor: 'move' });            \r\n            DomEvent.on(pane, 'mousemove', this._onDragging, this);\r\n            DomEvent.on(pane, 'mouseup', this._onDragend, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Dragging\r\n     * @ignore\r\n     * @param {Object} e mouse event param\r\n     */\r\n    /*eslint-disable */\r\n    _onDragging(e) {\r\n        // DomEvent.stop(e);\r\n        const pane = this._scrollPane,\r\n            dr = this._startDrag;\r\n\r\n        if (isDOM(pane) && isObject(dr)) {\r\n            pane.scrollLeft = (dr.left || 0) - e.clientX + dr.x;\r\n            pane.scrollTop = (dr.top || 0) - e.clientY + dr.y;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * End drag\r\n     * @ignore\r\n     * @param {Object} e mouse event param\r\n     */\r\n    _onDragend(e) {\r\n        // DomEvent.stop(e);\r\n        DomEvent.off(this._scrollPane, 'mousemove', this._onDragging, this);\r\n    },\r\n    /*eslint-enable */\r\n\r\n    /**\r\n     * Disable mouse drag\r\n     */\r\n    disableDrag() {\r\n        const pane = this._scrollPane;\r\n\r\n        if (isDOM(pane)) {\r\n            DomEvent.off(pane, 'mousedown', this._onDragStart, this);\r\n            DomEvent.off(pane, 'mousemove', this._onDragging, this);\r\n            DomEvent.off(pane, 'mouseup', this._onDragend, this);\r\n            this._startDrag = null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Enable drag on container and start drag\r\n     */\r\n    enableDrag() {\r\n        const o = this.options;\r\n\r\n        if (o.drag && this._pane) {\r\n            const dragPane = getScrollPane(o, this._pane);\r\n\r\n            if (isDOM(dragPane)) {\r\n                this._scrollPane = dragPane;\r\n                // this.disableDrag();\r\n                DomEvent.on(dragPane, 'mousedown', this._onDragStart, this);\r\n            }\r\n        }\r\n    },\r\n\r\n};\r\n","import * as DomEvent from '../../dom/dom_event';\r\nimport { bind, throttle } from '../../utils/util';\r\nimport { zoomUpdate } from '../core/popo';\r\n\r\nexport default {\r\n\r\n    /**\r\n     * Add container resize event on window resize\r\n     * @ignore.\r\n     */\r\n    _resize() {\r\n        const o = this.options,\r\n            c = this._pane,\r\n            vc = this.vc,\r\n            ui = o.updateInterval;\r\n\r\n        if (!this._onResize && o.trackResize) {\r\n            const interval = o.renderDelay > 0 ? Math.max(ui, o.renderDelay) : ui;\r\n            // const interval = ui;\r\n\r\n            this._onResize = throttle((_fn, _context) => {\r\n                if (!o.trackResize) return;\r\n                if (o.zoom.enable) {\r\n                    zoomUpdate(vc, c, this.scale);\r\n                } else {\r\n                    this.update();\r\n                    if (typeof o.update === 'function') {\r\n                        o.update(this);\r\n                    }\r\n                    if (typeof _fn === 'function') {\r\n                        bind(_fn, _context)(this);\r\n                    }\r\n                }\r\n            }, interval, this);\r\n            DomEvent.on(window, 'resize', this._onResize, this);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Remove resize event listener\r\n     * @ignore\r\n     */\r\n    _removeResize() {\r\n        if (this._onResize) {\r\n            DomEvent.off(window, 'resize', this._onResize, this);\r\n            this._onResize = null;\r\n        }\r\n    },\r\n};\r\n","import * as DomEvent from '../../dom/dom_event';\r\nimport { getScrollPane } from '../core/popo';\r\nimport CT from '../../constant/constant';\r\n\r\nexport default {\r\n    /**\r\n     * wheel zoom handle\r\n     * @ignore\r\n     */\r\n    _performZoom() {\r\n        const ratio = this.options.zoom.ratio;\r\n\r\n        this.zoom(this.scale + (this._wheelScroll.delta > 0 ? ratio : -ratio));\r\n    },\r\n\r\n    /**\r\n     * Wheel scrolling\r\n     * @ignore\r\n     * @param {Object} e wheel event param\r\n     */\r\n    _onWheelScroll(e) {\r\n        DomEvent.stop(e);\r\n        const delta = DomEvent.getWheelDelta(e),\r\n            time = this._wheelScroll.startTime;\r\n\r\n        /*eslint-disable */\r\n        this._wheelScroll.delta = delta;\r\n        if (!time) {\r\n            this._wheelScroll.startTime = +new Date();\r\n        }\r\n        const left = Math.max(CT.DEBOUNCE - (+new Date() - time), 0);\r\n        /*eslint-enable */\r\n\r\n        clearTimeout(this._wheelScroll.timer);\r\n\r\n        this._wheelScroll.timer = setTimeout(() => {\r\n            this._performZoom();\r\n        }, left);\r\n    },\r\n\r\n    enableScrollWheel() {\r\n        this.disableScrollWheel();\r\n\r\n        if (!this._scrollPane) {\r\n            this._scrollPane = getScrollPane(this.options, this._pane);\r\n        }\r\n        this._wheelScroll = {\r\n            delta: 0,\r\n            startTime: 0,\r\n            timer: 0,\r\n        };\r\n        DomEvent.on(this._scrollPane, 'mousewheel', this._onWheelScroll, this);\r\n    },\r\n\r\n    disableScrollWheel() {\r\n        if (this._scrollPane) {\r\n            DomEvent.off(this._scrollPane, 'mousewheel', this._onWheelScroll, this);\r\n        }\r\n    },\r\n};\r\n","import {\r\n    isNumber, isArray, isDOM, isObject, contain, legalNumber, get, merge, formatMargin,\r\n    mixins, formatNum, isPercentage, translatePercentage, isEmptyObject, isString,\r\n} from '../utils/util';\r\nimport {\r\n    css, getStyle, isHidden, query,\r\n    removeByRole, getTargetDataId, TRANSFORM, getRect, getPureStyle,\r\n} from '../dom/dom';\r\nimport { initSize, updateLayout, initLayoutSet, initLayout } from './core/layout';\r\nimport { addPanels, addLayoutToPanel } from './core/panel';\r\nimport CT from '../constant/constant';\r\nimport ERROR_MSG from '../constant/error';\r\nimport defaultOptions from './options/popo';\r\nimport defaultStyle from './options/style';\r\nimport {\r\n    createPane,\r\n    createVc,\r\n    stampInner,\r\n    isInPoPo,\r\n    setHide,\r\n    getNodeById,\r\n    updateHideIds,\r\n    _each,\r\n    _full,\r\n    _unFull,\r\n    _setStyle,\r\n    _initStyle,\r\n    updateStyle,\r\n    removeStyle,\r\n    vcToDom,\r\n    updateVCC,\r\n    loadTemplate,\r\n    restoreTemplate,\r\n    restorePanelTemplate,\r\n    setLineheight,\r\n    setOverflows,\r\n    loadExtends,\r\n    addExtend,\r\n    getRealIds,\r\n    focusOn,\r\n    getRealdomsById,\r\n    createZoomContainer,\r\n    getAllIds,\r\n    togglePoPo,\r\n    getAliasById,\r\n    updateContainerSize,\r\n} from './core/popo';\r\n\r\nimport { loadDev } from './core/dev';\r\n\r\nimport dragHandle from './handle/drag';\r\nimport resize from './handle/resize';\r\nimport wheelzoom from './handle/wheelzoom';\r\nimport * as DomEvent from '../dom/dom_event';\r\n\r\n/**\r\n * PoPoInstance\r\n * @class\r\n */\r\nexport default class PoPoInstance {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Object} options options\r\n     */\r\n    constructor(options) {\r\n        const o = this.options = merge(defaultOptions, options),\r\n            c = this.container = o.container ? get(o.container) : null;\r\n\r\n        this._initOptions();\r\n\r\n        this._fullId = o.fullId;\r\n\r\n        this._fullZIndex = o.fullZIndex || 0;\r\n\r\n        this._hideIds = o.hideIds || [];\r\n\r\n        this._showIds = o.dev.showIds || [];\r\n\r\n        this.style = merge(defaultStyle, o.style || {});\r\n\r\n        this._sizes = initSize(o.rows, o.cols);\r\n\r\n        this._vc = createVc();\r\n\r\n        if (initLayoutSet(o)) {\r\n            initLayout(o, this._vc);\r\n            if (isDOM(c)) {\r\n                this._initContainer();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialization options\r\n     * @ignore\r\n     */\r\n    _initOptions() {\r\n        const o = this.options,\r\n            scale = legalNumber(o.fontScale, 0.1);\r\n\r\n        o.padding = formatMargin(o.padding, scale);\r\n\r\n        if (isObject(o.panel.custom)) {\r\n            o.panel.custom = [o.panel.custom];\r\n        }\r\n        if (isArray(o.panel.custom)) {\r\n            o.panel.custom = o.panel.custom.map((panel) => merge({\r\n                headHeight: 0,\r\n                footHeight: 0,\r\n                leftWidth: 0,\r\n                rightWidth: 0,\r\n                gutter: 0,\r\n                zIndex: CT.PANEL_DEFAULT_ZINDEX,\r\n            }, panel));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialization container\r\n     * @ignore\r\n     */\r\n    _initContainer() {\r\n        const vc = this._vc,\r\n            c = this.container,\r\n            o = this.options,\r\n            sizes = this._sizes;\r\n\r\n        if (vc && c && o && sizes) {\r\n            // Mark container if it is in another popo instance.\r\n            stampInner(c);\r\n\r\n            this._oldContainerStyle = {\r\n                display: getStyle(c, 'display'),\r\n            };\r\n\r\n            // Set container position when zoom on.\r\n            if (getStyle(c, 'position') === 'static' && o.zoom.enable) {\r\n                // save origin container style state\r\n                this._oldContainerStyle.position = 'static';\r\n                css(c, { position: 'relative' });\r\n            }\r\n\r\n            // Hide data-popo elements in container.\r\n            togglePoPo(c, false);\r\n\r\n            // Add custom style to container\r\n            const { style } = this;\r\n\r\n            if (style) {\r\n                _setStyle(c, style.container, true);\r\n            }\r\n\r\n            // Nest PoPo resize update interval.\r\n            if (isInPoPo(c)) {\r\n                o.updateInterval += 50;\r\n            }\r\n\r\n            // Create Zoom Container and Pane\r\n            const zoomContainer = this._zoomContainer = createZoomContainer(c, o),\r\n                scroll = o.scroll,\r\n                _style = {},\r\n                p = this._pane = createPane(o);\r\n\r\n            // If zoom mode on, drag option auto enable.\r\n            if (o.zoom.enable) { o.drag = true; }\r\n\r\n            // Set zoom container and zoom pane overflow and scroll.\r\n            if (o.zoom.enable || o.overflowVisible) {\r\n                _style.overflow = 'visible';\r\n            } else if (scroll.x && scroll.y) {\r\n                _style.overflow = 'auto';\r\n            } else if (scroll.x && !scroll.y) {\r\n                _style.overflowX = 'auto';\r\n                _style.overflowY = 'hidden';\r\n            } else if (!scroll.x && scroll.y) {\r\n                _style.overflowY = 'auto';\r\n                _style.overflowX = 'hidden';\r\n            }\r\n            css(zoomContainer, _style);\r\n            css(zoomContainer.parentNode, {\r\n                overflow: o.overflowVisible ? 'visible' : 'hidden',\r\n            });\r\n\r\n            // Sign Nest PoPo\r\n            // stampInner(p);\r\n\r\n            zoomContainer.appendChild(p);\r\n\r\n            // Update layout\r\n            updateLayout(vc, p, sizes, o, this._vpanels = []);\r\n\r\n            // Add Panel Layout\r\n            if (o.panel && o.panel.enable) {\r\n                addPanels(vc, o);\r\n            }\r\n\r\n            // Add extends panel\r\n            loadExtends(vc, o, true);\r\n\r\n            // Set Panel Overflow style.\r\n            setOverflows(vc, o);\r\n\r\n            // Full the select full panel\r\n            if (this._fullId) {\r\n                _full(vc, this._getId(this._fullId), this._fullZIndex);\r\n            }\r\n\r\n            css(c, { display: 'none' });\r\n\r\n            // Update style\r\n            _initStyle(c, vc, zoomContainer, zoomContainer.parentNode, o, this.style);\r\n\r\n            this._render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepare render\r\n     * @ignore\r\n     */\r\n    _render() {\r\n        const c = this._pane,\r\n            o = this.options;\r\n\r\n        if (c && o) {\r\n            let delay = o.renderDelay;\r\n\r\n            if (delay > 0 && o.updateInterval > 0) {\r\n                delay = Math.max(delay, o.updateInterval);\r\n            }\r\n            if (delay > 0) {\r\n                setTimeout(() => {\r\n                    this._onRender();\r\n                }, delay || 0);\r\n            } else {\r\n                this._onRender();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rendering\r\n     * @ignore\r\n     */\r\n    _onRender() {\r\n        const vc = this._vc,\r\n            c = this.container,\r\n            pane = this._pane,\r\n            o = this.options;\r\n\r\n        if (c && vc && o) {\r\n            const ids = this._showIds;\r\n\r\n            if (ids) {\r\n                this._hideIds = updateHideIds(ids, this.getIds()) || this._hideIds;\r\n            }\r\n            setHide(this._hideIds, vc, o, ids && ids.length > 0);\r\n\r\n            pane.appendChild(vcToDom(vc));\r\n\r\n            if (o.dev.enable) {\r\n                loadDev(pane, vc, o);\r\n            }\r\n\r\n            loadTemplate(c, vc, o);\r\n\r\n            this._resize();\r\n\r\n            css(c, {\r\n                display: this._oldContainerStyle.display,\r\n            });\r\n\r\n            this._updateSize();\r\n\r\n            if (o.zoom.enable) {\r\n                const scale = legalNumber(o.zoom.scale, CT.MIN_ZOOM, CT.MAX_ZOOM);\r\n\r\n                this._initZoomEvent();\r\n                this.zoom(scale);\r\n                if (o.zoom.wheelZoom) {\r\n                    this.enableScrollWheel();\r\n                }\r\n            }\r\n\r\n            if (o.drag) {\r\n                this.enableDrag();\r\n            }\r\n\r\n            if (o.focus.id) {\r\n                const { id, offsetX, offsetY } = o.focus;\r\n\r\n                this.focus(id, offsetX, offsetY);\r\n            }\r\n\r\n            setLineheight(vc, o.lineHeight);\r\n\r\n            if (o.onload && typeof o.onload === 'function') {\r\n                o.onload(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialization zoom event.\r\n     * @ignore\r\n     */\r\n    _initZoomEvent() {\r\n        const o = this.options,\r\n            c = this.container,\r\n            zoom = o.zoom;\r\n\r\n        if (zoom.enable && zoom.control) {\r\n            const zoomin = query(c, `.${CT.ZOOMIN}`),\r\n                zoomout = query(c, `.${CT.ZOOMOUT}`),\r\n                ratio = zoom.ratio;\r\n\r\n            this._zoomInfoPane = query(c, `.${CT.ZOOMINFO}`);\r\n\r\n            if (isDOM(zoomin) && isDOM(zoomout)) {\r\n                DomEvent.on(zoomin, 'click', () => {\r\n                    this.zoom(this.scale + ratio);\r\n                }, this);\r\n\r\n                DomEvent.on(zoomout, 'click', () => {\r\n                    this.zoom(this.scale - ratio);\r\n                }, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get component real id.\r\n     * @param {String|Number} id panel id or alias.\r\n     * @return {Array} component ids\r\n     */\r\n    _getId(id) {\r\n        return isNumber(id) ? id : getRealIds(this._vc, id, this.options.alias);\r\n    }\r\n\r\n    /**\r\n     * Get vnode by id and type.\r\n     * @ignore\r\n     * @param {String|Number} id panel id or alias\r\n     * @param {String} type component type:panel, panelContainer, lcr, center,left, right, head, foot @default panel\r\n     * @return {VNode} vnode\r\n     */\r\n    _getNode(id, type) {\r\n        return getNodeById(this._vc, this._getId(id), type || CT.PANEL);\r\n    }\r\n\r\n    /**\r\n     * Get Option\r\n     * @return {Object} option\r\n     */\r\n    getOption() {\r\n        return this.options;\r\n    }\r\n\r\n    /**\r\n     * Get Panel count\r\n     * @return {Number} panel count\r\n     */\r\n    getPanelCount() {\r\n        return this.getIds().length;\r\n    }\r\n\r\n    /**\r\n     * Get all panel id.\r\n     * @return {Array} ids array\r\n     */\r\n    getIds() {\r\n        return getAllIds(this._vc);\r\n    }\r\n\r\n    /**\r\n     * @Get component alias\r\n     * @return {Array} alias\r\n     */\r\n    getAliasName() {\r\n        const alias = this.options.alias;\r\n\r\n        if (alias && isArray(alias)) {\r\n            return alias.map((a) => a.name);\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Get component alias\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {Array|String} component alias\r\n     */\r\n    getAlias(target) {\r\n        const alias = this.options.alias;\r\n\r\n        if (target === undefined) {\r\n            return alias;\r\n        }\r\n        const result = (isArray(target) ? target : [target]).map((t) => getAliasById(alias, getTargetDataId(t)));\r\n\r\n        return result.length === 1 ? result[0] : result;\r\n    }\r\n\r\n    /**\r\n     * Get screen container\r\n     * @return {HTMLElement} app container\r\n     */\r\n    getContainer() {\r\n        return this.container;\r\n    }\r\n\r\n    /**\r\n     * Zoom screen\r\n     * @param {Number} scale scale\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    zoom(scale) {\r\n        const c = this._pane,\r\n            vc = this._vc,\r\n            o = this.options,\r\n            preview = this._zoomContainer,\r\n            width = this.$width(),\r\n            height = this.$height(),\r\n            style = {};\r\n\r\n        if (!o.zoom.enable || !isNumber(scale) || this.scale === scale || !vc || !c || !o) return this;\r\n\r\n        this.scale = scale = legalNumber(scale, o.zoom.min, o.zoom.max);\r\n        if (isDOM(this._zoomInfoPane)) {\r\n            this._zoomInfoPane.innerHTML = formatNum(scale, 1);\r\n        }\r\n\r\n        style[TRANSFORM] = `scale(${scale})`;\r\n        css(c, style);\r\n\r\n        /*eslint-disable */\r\n        const rect = getRect(preview.parentNode);\r\n        /*eslint-enable */\r\n\r\n        let top = (rect.height - (height * scale)) / 2,\r\n            left = (rect.width - (width * scale)) / 2;\r\n\r\n        if (top < 0 || scale === 1) top = 0;\r\n        if (left < 0 || scale === 1) left = 0;\r\n\r\n        css(preview, {\r\n            width: `${width * scale}px`,\r\n            height: `${height * scale}px`,\r\n            paddingTop: `${top}px`,\r\n            paddingLeft: `${left}px`,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Focus On Panel\r\n     * @param {Number | String} id panel id or alias\r\n     * @param {Number} offsetX offsetX\r\n     * @param {Number} offsetY offsetY\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    focus(id, offsetX, offsetY) {\r\n        focusOn(this._vc, this._pane, this.options, id, offsetX || 0, offsetY || 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get elements\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {Object} elements, include panel, panelContainer, lcr, center,left, right, head, foot\r\n     */\r\n    get(target) {\r\n        if (!target) return null;\r\n\r\n        const result = (!isArray(target) ? [target] : target).map((t) =>\r\n            getRealdomsById(this._vc, getTargetDataId(t), this.options));\r\n\r\n        return result.length === 1 ? result[0] : result;\r\n    }\r\n\r\n    /**\r\n     * Get all elements\r\n     * @return {Array} all elements.\r\n     */\r\n    getAll() {\r\n        return this.get(this.getIds());\r\n    }\r\n\r\n    /**\r\n     * Get component\r\n     * @ignore\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @param {String} type component type: panel, panelContainer, lcr, center,head, left, right, foot\r\n     * @return {HTMLElement} component container\r\n     */\r\n    _getXComponent(target, type) {\r\n        const result = this.get(target);\r\n\r\n        return isArray(result) ? result.map((r) => r && r[type]) : result && result[type];\r\n    }\r\n\r\n    /**\r\n     * get panel container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} wrap container\r\n     */\r\n    panel(target) {\r\n        return this._getXComponent(target, 'panel');\r\n    }\r\n\r\n    /**\r\n     * get wrap container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} wrap container\r\n     */\r\n    wrap(target) {\r\n        return this._getXComponent(target, 'wrap');\r\n    }\r\n\r\n    /**\r\n     * get center container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} center container\r\n     */\r\n    center(target) {\r\n        return this._getXComponent(target, 'center');\r\n    }\r\n\r\n    /**\r\n     * get head container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} head container\r\n     */\r\n    head(target) {\r\n        return this._getXComponent(target, 'head');\r\n    }\r\n\r\n    /**\r\n     * get left container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} left container\r\n     */\r\n    left(target) {\r\n        return this._getXComponent(target, 'left');\r\n    }\r\n\r\n    /**\r\n     * get right container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} right container\r\n     */\r\n    right(target) {\r\n        return this._getXComponent(target, 'right');\r\n    }\r\n\r\n    /**\r\n     * get foot container\r\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\r\n     * @return {HTMLElement} foot container\r\n     */\r\n    foot(target) {\r\n        return this._getXComponent(target, 'foot');\r\n    }\r\n\r\n    /**\r\n     * Clear Panel\r\n     * @param {String|Number|HTMLElement|Array} target panel id or alias, or panel dom.\r\n     * @param {Boolean} clearTpl if true will delete template content\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    clearPanel(target, clearTpl) {\r\n        if (target) {\r\n            (!isArray(target) ? [target] : target).forEach((t) => {\r\n                const node = this._getNode(getTargetDataId(t));\r\n\r\n                if (node) {\r\n                    if (!clearTpl) {\r\n                        restorePanelTemplate(node, this.container, this._vc, this.options);\r\n                    }\r\n                    node.clear();\r\n                    node.update();\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clear all panels.\r\n     * @param {Boolean} clearTpl if true will delete template content\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    clearAllPanel(clearTpl) {\r\n        return this.clearPanel(this._vpanels, clearTpl);\r\n    }\r\n\r\n    /**\r\n     * Set Panel Layout\r\n     * @param {Object} option panel layout options\r\n     */\r\n    _setPanel({ panels, headHeight = 0, footHeight = 0, leftWidth = 0, rightWidth = 0, gutter = 0 }) {\r\n        const o = this.options.panel;\r\n\r\n        if (!panels) return;\r\n        if (!isArray(panels)) { panels = [panels]; }\r\n        if (!o.custom) {\r\n            o.custom = [];\r\n        }\r\n        if (isObject(o.custom)) {\r\n            o.custom = [o.custom];\r\n        }\r\n        if (isArray(o.custom)) {\r\n            this.clearPanel(panels);\r\n            const nodes = panels.map((id) => this._getNode(getTargetDataId(id)));\r\n\r\n            o.custom.forEach((c, i) => {\r\n                if (c.panels === panels) {\r\n                    o.custom.splice(i, 1);\r\n\r\n                    return;\r\n                }\r\n                if (!isArray(c.panels)) {\r\n                    c.panels = [c.panels];\r\n                }\r\n\r\n                let exsit = false;\r\n\r\n                c.panels.forEach((cid, index) => {\r\n                    const rcid = this._getId(cid);\r\n\r\n                    panels.forEach((id) => {\r\n                        if (rcid === id) {\r\n                            c.panels.splice(index, 1);\r\n                            exsit = true;\r\n\r\n                            return;\r\n                        }\r\n                    });\r\n                    if (exsit) {\r\n                        return;\r\n                    }\r\n                });\r\n            });\r\n\r\n            o.custom = o.custom.filter((c) => c.panels.length > 0);\r\n\r\n            const panelOption = {\r\n                panels,\r\n                headHeight,\r\n                footHeight,\r\n                leftWidth,\r\n                rightWidth,\r\n                gutter,\r\n            };\r\n\r\n            o.custom.push(panelOption);\r\n\r\n            nodes.forEach((node) => {\r\n                addLayoutToPanel(node, panelOption, this.options.fontScale);\r\n                node.createElement();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set Panels Layout\r\n     * @param {Object|Array<Object>} options panel layout options array\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    setPanelLayout(options) {\r\n        if (options) {\r\n            (isArray(options) ? options : [options]).forEach((option) => this._setPanel(option));\r\n            this.update();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set panel position and zIndex\r\n     * @param {String|Number|HTMLElement} panel panel id or alias, or panel dom.\r\n     * @param {Number} left left\r\n     * @param {Number} top left\r\n     * @param {Number} zIndex zIndex\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    _updatePanel({ panels, left, top, width, height, zIndex }) {\r\n        (isArray(panels) ? panels : [panels]).forEach((panel) => {\r\n            const node = this._getNode(getTargetDataId(panel));\r\n\r\n            if (node) {\r\n                if (left) {\r\n                    const pl = node.percentLeft = isPercentage(left) ? translatePercentage(left) : null;\r\n\r\n                    if (pl !== null) left = pl;\r\n                    if (isNumber(left)) {\r\n                        if (node._oldLeft === undefined) {\r\n                            node._oldLeft = node.getLeft();\r\n                        }\r\n                        node.setLeft(pl !== null ? left * this.width : left);\r\n                    }\r\n                }\r\n                if (top) {\r\n                    const pt = node.percentTop = isPercentage(top) ? translatePercentage(top) : null;\r\n\r\n                    if (pt !== null) top = pt;\r\n                    if (isNumber(top)) {\r\n                        if (node._oldTop === undefined) {\r\n                            node._oldTop = node.getTop();\r\n                        }\r\n                        node.setTop(pt !== null ? top * this.height : top);\r\n                    }\r\n                }\r\n                if (isNumber(zIndex)) {\r\n                    if (node._oldZIndex === undefined) {\r\n                        node._oldZIndex = node.styles.zIndex;\r\n                    }\r\n                    node.setStyle({ zIndex });\r\n                }\r\n                if (width !== undefined && width !== null) {\r\n                    width = width || node.width;\r\n                    const pw = node.percentWidth = isPercentage(width) ? translatePercentage(width) : null;\r\n\r\n                    if (pw !== null) width = pw;\r\n                    if (isNumber(width)) {\r\n                        if (node._oldWidth === undefined) {\r\n                            node._oldWidth = node.getWidth();\r\n                        }\r\n                        node.setWidth(pw !== null ? width * this.width : width);\r\n                    }\r\n                }\r\n                if (height !== undefined && height !== null) {\r\n                    height = height || node.height;\r\n\r\n                    const ph = node.percentHeight = isPercentage(height) ? translatePercentage(height) : null;\r\n\r\n                    if (ph !== null) height = ph;\r\n                    if (isNumber(height)) {\r\n                        if (node._oldHeight === undefined) {\r\n                            node._oldHeight = node.getHeight();\r\n                        }\r\n                        node.setHeight(ph !== null ? height * this.height : height);\r\n                    }\r\n                }\r\n\r\n                if (node._oldWidth !== undefined || node._oldHeight !== undefined\r\n                    || node._classChange || node._styleChange) {\r\n                    setLineheight(this._vc, this.options.lineHeight);\r\n                }\r\n\r\n                node.update();\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Restore option\r\n     * @ignore\r\n     * @param {Object} option {panels, size, position, zIndex}\r\n     */\r\n    _restorePanel({ panels, size = true, position = true, zIndex = true }) {\r\n        (isArray(panels) ? panels : [panels]).forEach((panel) => {\r\n            const node = this._getNode(getTargetDataId(panel));\r\n\r\n            if (node) {\r\n                if (position) {\r\n                    if (node._oldLeft !== undefined) {\r\n                        node.setLeft(node._oldLeft);\r\n                    }\r\n                    if (node._oldTop !== undefined) {\r\n                        node.setTop(node._oldTop);\r\n                    }\r\n                }\r\n                if (size) {\r\n                    if (node._oldWidth !== undefined) {\r\n                        node.setWidth(node._oldWidth);\r\n                    }\r\n                    if (node._oldHeight !== undefined) {\r\n                        node.setHeight(node._oldHeight);\r\n                    }\r\n                }\r\n                if (zIndex) {\r\n                    if (node._oldZIndex !== undefined) {\r\n                        node.setStyle({\r\n                            zIndex: node._oldZIndex,\r\n                        });\r\n                    }\r\n                }\r\n                node.update();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Restore Panel State\r\n     * @param {Object|Array<Object>} options restore option\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    restore(options) {\r\n        if (options === undefined) {\r\n            this._restorePanel({\r\n                panels: this.getIds(),\r\n                size: true,\r\n                position: true,\r\n                zIndex: true,\r\n            });\r\n        } else {\r\n            (isArray(options) ? options : [options]).forEach((option) => {\r\n                if (option.panels) {\r\n                    this._restorePanel(option);\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get panel top, only for panel container.\r\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\r\n     * @return {Number} top\r\n     */\r\n    $top(target) {\r\n        const node = this._getNode(getTargetDataId(target));\r\n\r\n        return node ? node.getTop() : 0;\r\n    }\r\n\r\n    /**\r\n     * Get panel left, only for panel container.\r\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\r\n     * @return {Number} left\r\n     */\r\n    $left(target) {\r\n\r\n        const node = this._getNode(getTargetDataId(target));\r\n\r\n        return node ? node.getLeft() : 0;\r\n    }\r\n\r\n    /**\r\n     * Get component element width\r\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\r\n     * @param {String} type element type: panel, panelContainer, lcr, center,head, foot, left, right\r\n     * @return {Number} width\r\n     */\r\n    $width(target, type) {\r\n        if (arguments.length === 0) {\r\n            return this.width;\r\n        }\r\n        let dom = target;\r\n\r\n        if (!isDOM(target)) {\r\n            const node = this._getNode(getTargetDataId(target), type);\r\n\r\n            dom = node && node.realDom;\r\n        }\r\n\r\n        return isDOM(dom) ? getPureStyle(dom, 'width') : -1;\r\n    }\r\n\r\n    /**\r\n     * Get component element height\r\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\r\n     * @param {String} type element type: panel, panelContainer, lcr, center,head, foot, left, right\r\n     * @return {Number} height\r\n     */\r\n    $height(target, type) {\r\n        if (arguments.length === 0) {\r\n            return this.height;\r\n        }\r\n        let dom = target;\r\n\r\n        if (!isDOM(target)) {\r\n            const node = this._getNode(getTargetDataId(target), type);\r\n\r\n            dom = node && node.realDom;\r\n        }\r\n\r\n        return isDOM(dom) ? getPureStyle(dom, 'height') : -1;\r\n    }\r\n\r\n    /**\r\n     * show screen or panel\r\n     * @param {String|Number|HTMLElement|Array|null} target component id, map key or panel dom,\r\n     * if it's null that will be the screen container.\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    show(target) {\r\n        const c = this.container;\r\n\r\n        if (!target && c && isHidden(c)) {\r\n            css(c, { display: 'block' });\r\n        } else {\r\n            (isArray(target) ? target : [target]).forEach((t) => {\r\n                const id = this._getId(getTargetDataId(t)),\r\n                    node = this.panel(id);\r\n\r\n                if (isDOM(node) && isHidden(node)) {\r\n                    const index = contain(this._hideIds, id);\r\n\r\n                    if (index >= 0) {\r\n                        this._hideIds.splice(index, 1);\r\n                    }\r\n                    css(node, { display: 'block' });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * show screen or panel\r\n     * @param {String|Number|HTMLElement|Array|null} target component id, map key or panel dom,\r\n     * if it's null that will be the screen container.\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    hide(target) {\r\n        const c = this.container;\r\n\r\n        if (!target && c && !isHidden(c)) {\r\n            css(c, { display: 'none' });\r\n        } else {\r\n            const ids = [];\r\n\r\n            (isArray(target) ? target : [target]).forEach((t) => {\r\n                const id = this._getId(getTargetDataId(t));\r\n\r\n                ids.push(id);\r\n                if (contain(this._hideIds, id) < 0) {\r\n                    this._hideIds.push(id);\r\n                }\r\n            });\r\n            setHide(ids, this._vc, this.options);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Execute methods for each component elements.\r\n     * @param {Function} fn fn\r\n     * @param {Array<String|Number|HTMLElement>} targets panels\r\n     * @param {Object} context context\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    each(fn, targets, context) {\r\n        const _targets = targets ? (isArray(targets) ? targets : targets).map((t) => getTargetDataId(t)) : this.getIds();\r\n\r\n        _each(this._vc, this.options, fn, _targets, context);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * remvoe screen or component\r\n     * @param {String|Number|null} target panel id or alias, if it's null that will be the screen container.\r\n     * @param {Boolean} clearTpl if true will delete template content\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    remove(target, clearTpl) {\r\n        if (arguments.length === 0) {\r\n            this._remove();\r\n        } else {\r\n            (isArray(target) ? target : [target]).forEach((t) => {\r\n                const node = this._getNode(getTargetDataId(t));\r\n\r\n                if (node && node.remove) {\r\n                    if (!clearTpl) {\r\n                        restorePanelTemplate(node, this.container, this._vc, this.options);\r\n                    }\r\n                    node.remove();\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add Panel width Options\r\n     * @param {Object} options panel options\r\n     * @return {PoPoInstance} current PoPoInstance instance\r\n     */\r\n    addPanel(options) {\r\n        const o = this.options;\r\n        const panel = addExtend(this._vc, o.padding, options, o.fontScale, true);\r\n\r\n        if (this._vc.realDom && panel) {\r\n            this._vc.realDom.appendChild(panel.createElement());\r\n        }\r\n\r\n        return this.get(panel.getId());\r\n    }\r\n\r\n    /**\r\n     * Remove screen\r\n     * @ignore\r\n     */\r\n    _remove() {\r\n        const p = this._pane,\r\n            old = this._oldContainerStyle,\r\n            c = this.container,\r\n            vc = this._vc,\r\n            o = this.options;\r\n\r\n        restoreTemplate(c, vc, o);\r\n        this.removeStyle();\r\n        this.disableDrag();\r\n        this._removeResize();\r\n        this._sizes = null;\r\n        this._fullId = 0;\r\n        this._fullZIndex = 0;\r\n        this._showIds = null;\r\n        this._hideIds = null;\r\n        this.style = null;\r\n        this._vc.remove();\r\n\r\n        if (isDOM(p) && p.parentNode) {\r\n            p.parentNode.removeChild(p);\r\n        }\r\n\r\n        removeByRole(CT.ZOOMPANE, c);\r\n        removeByRole(CT.EXT_PANE, c);\r\n        this._pane = null;\r\n        this._vc = null;\r\n        this._vpanels = null;\r\n        this._scrollPane = null;\r\n        this.options = null;\r\n\r\n        if (old && old.position) {\r\n            css(c, { position: old.position });\r\n        }\r\n\r\n        this.container = null;\r\n\r\n        this._oldContainerStyle = null;\r\n\r\n        this._oldBodyScroll = null;\r\n\r\n        /*eslint-disable */\r\n        this._popo_id = 0;\r\n        /*eslint-enable */\r\n\r\n        this._zoomContainer = null;\r\n\r\n        this._zoomInfoPane = null;\r\n\r\n        this.width = 0;\r\n\r\n        this.height = 0;\r\n    }\r\n\r\n    /**\r\n     * Full panel component\r\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\r\n     * @param {Number} zIndex css zIndex\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    full(target, zIndex) {\r\n        if (target) {\r\n            const id = this._getId(getTargetDataId(target));\r\n\r\n            if (isNumber(id) && id > 0) {\r\n                if (this._fullId > 0) {\r\n                    this.unFull();\r\n                }\r\n                this._fullId = id;\r\n                this._fullZIndex = zIndex || 0;\r\n                this.update();\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Unfull the full target panel\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    unFull() {\r\n        if (this._fullId > 0 && _unFull(this._vc, this._getId(this._fullId))) {\r\n            this._fullId = 0;\r\n            this._fullZIndex = 0;\r\n            this.update();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Update popo size.\r\n     */\r\n    _updateSize() {\r\n        const size = updateContainerSize(this._vc, this.options);\r\n\r\n        if (size) {\r\n            this.width = size.width;\r\n            this.height = size.height;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update popo or panel\r\n     * @param {Array|Object} options update options.\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    update(options) {\r\n        if (options === undefined) {\r\n            updateVCC(this._vc, this._pane, this._sizes, this.options, this._getId(this._fullId), this._fullZIndex || 0);\r\n            this._updateSize();\r\n        } else {\r\n            (isArray(options) ? options : [options]).forEach((t) => {\r\n                if (isObject(t)) {\r\n                    this._updatePanel(t);\r\n                }\r\n            });\r\n            this.update();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set Body scroll\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    setBodyScroll() {\r\n        const body = document.body,\r\n            zc = this._zoomContainer;\r\n\r\n        if (zc && zc.parentNode) {\r\n            this._oldBodyScroll = {\r\n                body: body.style.overflow,\r\n                zc: zc.style.overflow,\r\n                zcParent: zc.parentNode.style.overflow,\r\n            };\r\n\r\n            css(document.body, {\r\n                overflowY: 'auto',\r\n            });\r\n            css(this._zoomContainer.parentNode, {\r\n                overflow: 'visible',\r\n            });\r\n            css(this._zoomContainer, {\r\n                overflow: '',\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Reset Body Scroll\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    resetBodyScroll() {\r\n        const old = this._oldBodyScroll;\r\n\r\n        if (old) {\r\n            const body = document.body,\r\n                zc = this._zoomContainer;\r\n\r\n            this._oldBodyScroll = {\r\n                body: body.style.overflow,\r\n                zc: zc.style.overflow,\r\n                zcParent: zc.parentNode.style.overflow,\r\n            };\r\n            css(document.body, {\r\n                overflow: old.body,\r\n            });\r\n            css(this._zoomContainer.parentNode, {\r\n                overflow: old.zc,\r\n            });\r\n            css(this._zoomContainer, {\r\n                overflow: old.zcParent,\r\n            });\r\n\r\n            this._oldBodyScroll = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or update style\r\n     * @ignore\r\n     * @param {Object} style style options\r\n     * @param {Boolean} isUpdate update or set style\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    _setStyle(style, isUpdate) {\r\n        if (isObject(style)) {\r\n            const { _vc, options, container, _zoomContainer } = this;\r\n\r\n            if (!isEmptyObject(this.style)) {\r\n                removeStyle(container, _vc, options, this.style, this);\r\n            }\r\n            this.style = isUpdate ? merge(this.style, style) : style;\r\n            _initStyle(container, _vc, _zoomContainer,\r\n                _zoomContainer.parentNode, options, this.style, true);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set style\r\n     * @ignore\r\n     * @param {Object} style style options\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    setStyle(style) {\r\n        return this._setStyle(style, false);\r\n    }\r\n\r\n    /**\r\n     * Update style\r\n     * @param {Object} style style option\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    updateStyle(style) {\r\n        return this._setStyle(style, true);\r\n    }\r\n\r\n    /**\r\n     * 移除主题\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    removeStyle() {\r\n        const { style, _vc, options, container } = this;\r\n\r\n        if (style) {\r\n            removeStyle(container, _vc, options, style, this);\r\n            this.style = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add screen to container\r\n     * @param {String|HTMLElement} container container id or container dom.\r\n     * @param {Number} delay render delay @default 0\r\n     * @return {PoPoInstance} current popo instance\r\n     */\r\n    addTo(container, delay) {\r\n        if (this.container) {\r\n            throw new Error(ERROR_MSG.POPO_EXSIT);\r\n        } else {\r\n            const c = get(container);\r\n\r\n            if (c && isDOM(c)) {\r\n                this.container = c;\r\n                if (delay > 0) {\r\n                    setTimeout(() => { this._initContainer(); }, delay);\r\n                } else {\r\n                    this._initContainer();\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nmixins(PoPoInstance.prototype, [dragHandle, resize, wheelzoom]);\r\n","import { version } from '../package.json';\r\nimport * as DomUtil from './dom/dom';\r\nimport * as DomEvent from './dom/dom_event';\r\nimport * as Util from './utils/util';\r\nimport { validateAllLy as validateLayoutExp } from './popo/core/layout';\r\nimport Browser from './utils/browser';\r\nimport PoPoInstance from './popo/index';\r\nimport ERR from './constant/error';\r\n\r\nconst P = {\r\n\r\n    version,\r\n\r\n    instances: [],\r\n\r\n    init(options) {\r\n        const oc = options.container;\r\n        let popo = null;\r\n\r\n        if (oc) {\r\n            const c = Util.get(oc);\r\n\r\n            if (Util.isDOM(c)) {\r\n                const instance = Util.getObjectFromArray(P.instances, 'container', c);\r\n\r\n                if (instance) {\r\n                    throw new Error(ERR.POPO_EXSIT);\r\n                }\r\n            } else {\r\n                throw new Error(ERR.CONTAINER_ERR);\r\n            }\r\n        }\r\n\r\n        popo = new PoPoInstance(options);\r\n\r\n        P.instances.push(popo);\r\n\r\n        return popo;\r\n    },\r\n\r\n    extend: (obj) => {\r\n        if (Util.isObject(obj)) {\r\n            const keys = Object.keys(P);\r\n\r\n            for (const key in obj) {\r\n                if (Util.contain(keys, key) < 0) {\r\n                    if (Util.isFunction(obj[key])) {\r\n                        P[key] = (...args) => {\r\n                            const result = obj[key].apply(null, args);\r\n\r\n                            return result !== undefined ? result : P;\r\n                        }\r\n                    } else {\r\n                        P[key] = obj[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getInstanceByDom: (container) => {\r\n        const c = Util.get(container);\r\n\r\n        return Util.isDOM(c) ? Util.getObjectFromArray(P.instances, 'container', c) : null;\r\n    },\r\n\r\n    dispose: (target) => {\r\n        if (!target) return;\r\n        if (target instanceof PoPoInstance) {\r\n            const index = Util.contain(P.instances, target);\r\n\r\n            if (index >= 0) {\r\n                P.instances.splice(index, 1);\r\n                target.remove();\r\n            }\r\n        }\r\n        if (target && (Util.isString(target) || Util.isDOM(target))) {\r\n            const c = Util.get(target);\r\n\r\n            if (Util.isDOM(c)) {\r\n                const instance = Util.removeObjectFromArray(P.instances, 'container', c);\r\n\r\n                if (instance) {\r\n                    instance[0].remove();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    DomUtil,\r\n\r\n    DomEvent,\r\n\r\n    Browser,\r\n\r\n    Util,\r\n};\r\n\r\nconst { bind, merge, extend } = Util,\r\n    { addClass, hasClass, removeClass, css, attr, isHidden, create, html } = DomUtil;\r\n\r\nP.extend({ addClass, hasClass, removeClass, css, attr, isHidden, create, html, bind, merge, extend, validateLayoutExp });\r\n\r\nif (typeof window !== 'undefined') {\r\n    const oldP = window.P;\r\n\r\n    P.noConflict = function noConflict() {\r\n        window.P = oldP;\r\n\r\n        return this;\r\n    };\r\n\r\n    window.P = P;\r\n}\r\n\r\nexport default P;\r\n"],"names":["stamp","obj","_popo_id","lastId","bind","fn","slice","Array","prototype","args","call","arguments","apply","length","concat","extend","dest","j","len","src","i","legalNumber","v","min","max","isNumber","trim","str","isString","replace","splitWords","split","type","o","t","Object","toString","isArray","isFunction","isObject","isEmptyObject","e","validateNumber","num","isNaN","Number","mixin","sources","key","mixins","sourcesArr","forEach","source","getObjectFromArray","arr","value","filter","removeObjectFromArray","splice","get","dom","document","getElementById","_isDOM1","HTMLElement","_isDOM2","nodeType","nodeName","cloneJsonObject","JSON","parse","stringify","merge","target","copyObj","copyFuns","newObj","getPercentage","number","init","capitalize","charAt","toUpperCase","reverseCamelcase","n","l","toLowerCase","camelize","indexOf","match","unique","array","r","push","firstUpperCase","L","isPercentage","translatePercentage","index","substring","translateNumberToPercentage","contain","item","throttle","time","context","later","wrapperFn","lock","formatNum","digits","pow","Math","round","formatNumber","getCssSize","size","scale","getPureValue","multiplyBy","m","val","formatMargin","margin","p","map","_getScaleMargin","formatMargin2","String","testProp","props","style","documentElement","getClass","el","isDOM","undefined","className","baseVal","hasClass","name","classList","contains","RegExp","test","setClass","addClass","classes","add","removeClass","names","remove","cls","setStyle","styles","addOn","_key","css","getStyle","create","tag","classnames","container","createElement","appendChild","html","innerHTML","isHidden","addHStyle","head","querySelector","oldStyle","node","insertBefore","removeByClass","classname","querySelectorAll","parentNode","removeChild","removeByRole","attr","CT","ROLE","query","eachChild","parent","childNodes","getAttribute","setAttribute","currentStyle","window","getComputedStyle","getPureStyle","getRect","getBoundingClientRect","getTargetDataId","id","COMPONENT_ID_KEY","getId","createPublicStyle","POPO","PANE","GRID_L_C_R","GRID_LEFT","GRID_CENTER","GRID_RIGHT","GRID_FOOT","GRID_HEAD","INFO","EXT_PANE","addOne","handler","event","eventsKey","this","addEventListener","attachEvent","removeOne","removeEventListener","detachEvent","stopPropagation","originalEvent","_stopped","cancelBubble","preventDefault","returnValue","stop","on","types","off","getWheelDelta","Browser","edge","wheelDeltaY","deltaY","deltaMode","wheelPxFactor","deltaX","deltaZ","wheelDelta","detail","abs","sumArrFirst","sum","a","sumItem","sumArr","validateAllLy","ly","rows","cols","startType","validateCore","count","great","firstCount","initSize","unitRow","unitCol","sizes","SINGLE_ROW","toFixed","COL","validateLayoutNumber","end","getLayoutWrapCount","layouts","start","validateLayout","Error","ERROR_MSG","LY_INVALID","getRowClassName","row","getColClassName","col","hasRow","ROW","generateEvLy","rowNumber","colNumber","floor","result","colsLength","newVNode","classNames","setId","Vnode","addClassName","insertTo","setRole","PANEL","removeUnused","vc","panels","selectPanel","vnode","children","role","newLy","layout","childrens","vparentNode","c","updateVnodeSize","options","setSize","keys","setWidth","setHeight","updateFixedSize","fixedHeight","fixedWidth","height","width","gutter","updateRealsize","freeLy","join","padding","paddingLeft","left","right","paddingTop","top","bottom","rect","_origionWidth","_origionHeight","child","fixedTotalHeight","layoutStartType","fixedTotalWidth","updateAbs","setAbs","nodes","step","_step","panel","setTop","setLeft","clearClassName","PANEL_DEFAULT_ZINDEX","initLayoutSet","MIN_LY_COUNT","_ly","toLocaleLowerCase","fh","fw","LY_FIXED_LESS","initLayout","lys","updateLayout","genPanelLy","headHeight","footHeight","rightWidth","leftWidth","addPanel","fontScale","containerHeight","centerWidth","containerNode","marginBottom","marginTop","addLayoutToPanel","queryByRole","PANEL_CONTAINER","position","addPanels","enable","df","default","custom","customIds","fullId","fullZIndex","customVnodes","_vn","getChild","zIndex","update","n2px","fz","px2n","_addGGL","realDom","show","PANEL_GUIDELINES","ggl","GUIDELINES","color","lineSize","lines","SVG","svg","ceil","points","points2","y","x","d","stroke","strokeWidth","addPanelGuidelines","dev","panelGuideline","gg","ids","getAllIds","getRealIds","alias","createPanelInfo","fontSize","info","setHtml","createDebugInfo","background","fontColor","span","createSVGText","text","fill","addGuidelines","guideline","gl","identifier","unitRowHeight","unitColWidth","addSplitLine","splitline","SPLITLINES","sl","infoY","infoX","loadDev","createPane","pd","createVc","CONTAINER","vcToDom","stampInner","ZOOMPANE","ZOOMCONTAINER","_popo_inner","addExtend","createPanel","defaultPanel","panelOption","getNewId","isExtend","extendInfo","responsive","_style","defaultStyle","son","addNode","loadExtends","extends","ext","updateExtends","panelWidth","panelHeight","_oldHeight","_oldWidth","_oldTop","_oldLeft","getIdByAlias","_alias","getAliasById","_id","getNode","getNodesByPanel","getRealNodesByPanel","foot","center","lcr","panelContainer","getRealdomsById","realId","getNodeById","setHide","vcontainer","showIds","hideType","createZoomContainer","z","zoom","zoomContainer","zoomPane","control","zoomControl","ZOOMIN","ZOOMINFO","ZOOMOUT","isInPoPo","veach","updateHideIds","all","done","_each","elements","_full","oldSize","_unFull","_removeStyle","option","_class","_css","removeClassName","removeStyle","com","_setStyle","isUpdate","overwrite","setClassName","_initStyle","zoomParent","styleOption","inner","getNewSize","old","percent","vsize","vvsize","totalSize","setNodeLayout","vvnode","fullzIndex","percentWidth","percentHeight","percentLeft","percentTop","updateOldVc","vn","vvn","getRole","_setOverflow","overflow","setOverflows","panelOverflow","updateContainerSize","updateVCC","vcc","lineHeight","_setNodeLineHeight","clientHeight","pt","pb","bt","bb","setLineheight","op","_t","insertTplDomToVc","TARGET","loadTemplate","hasAttribute","title","els","hasChildNodes","restorePanelTemplate","firstChild","restoreTemplate","TPL","removeAttribute","getScrollPane","scrollLeft","scrollTop","focusOn","offsetX","offsetY","pane","zoomUpdate","togglePoPo","display","NM","TRANSFORM","TRANSITION","TRANSITION_END","ua","navigator","userAgent","doc","innerWidth","clientWidth","body","innerHeight","ie","webkit","mobile","orientation","EVENT","win","chrome","devicePixelRatio","gecko","VNode","cns","_query","that","removeNode","realDomClass","w","h","_getSize","render","lastChild","getLastChild","ROWS","COLS","prefix","NAME","WRAP","attrs","realNode","_stamp","preffix","FILTER","LINER_GRADIENT","RADIAL_GRADIENT","MARKER","DRAW_ID_KEY","filters","f","pureKeys","_filter","stops","setAttributeNS","hidden","createElementNS","globalStyle","VSVG","defs","_setId","_getDefById","childId","cx","cy","_stops","x1","y1","x2","y2","units","g","u","markers","marker","patterns","pattern","_scrollPane","clientX","clientY","_startDrag","cursor","_onDragging","_onDragend","dr","_onDragStart","drag","_pane","dragPane","ui","updateInterval","_onResize","trackResize","interval","renderDelay","_fn","_context","_this","ratio","_wheelScroll","delta","DomEvent","startTime","Date","DEBOUNCE","timer","setTimeout","_performZoom","disableScrollWheel","_onWheelScroll","PoPoInstance","defaultOptions","_initOptions","_fullId","_fullZIndex","_hideIds","hideIds","_showIds","_sizes","_vc","_initContainer","_oldContainerStyle","_zoomContainer","scroll","overflowVisible","overflowX","overflowY","_vpanels","_getId","_render","delay","_onRender","getIds","_resize","_updateSize","MIN_ZOOM","MAX_ZOOM","_initZoomEvent","wheelZoom","enableScrollWheel","enableDrag","focus","onload","zoomin","zoomout","_zoomInfoPane","_this2","preview","$width","$height","_this3","_getXComponent","clearTpl","_this4","_getNode","clear","clearPanel","_this5","exsit","cid","rcid","_this6","_setPanel","_this7","pl","getLeft","getTop","_oldZIndex","pw","getWidth","ph","getHeight","_classChange","_styleChange","_this8","_restorePanel","_this10","_this11","targets","_targets","_remove","_this12","disableDrag","_removeResize","_oldBodyScroll","unFull","_updatePanel","zc","zcParent","POPO_EXSIT","dragHandle","resize","wheelzoom","P","oc","popo","Util","ERR","CONTAINER_ERR","instances","instance","DomUtil","validateLayoutExp","oldP","noConflict"],"mappings":"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"}