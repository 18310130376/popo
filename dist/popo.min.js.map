{"version":3,"file":"popo.min.js","sources":["../src/utils/util.js","../src/dom/dom.js","../src/dom/dom_event.js","../src/popo/core/layout.js","../src/popo/core/panel.js","../src/popo/core/dev.js","../src/popo/core/popo.js","../src/constant/constant.js","../src/utils/browser.js","../src/constant/error.js","../src/dom/vdom/vnode.js","../src/popo/options/popo.js","../src/popo/options/style.js","../src/dom/vdom/vsvg_base.js","../src/dom/vdom/vsvg.js","../src/popo/options/panel.js","../src/popo/handle/drag.js","../src/popo/handle/resize.js","../src/popo/handle/wheelzoom.js","../src/popo/index.js","../src/index.js"],"sourcesContent":["let lastId = 0;\n\nexport function stamp(obj) {\n    /*eslint-disable */\n    obj._popo_id = obj._popo_id || ++lastId;\n\n    return obj._popo_id;\n    /*eslint-enable */\n}\n\nexport function bind(fn, obj) {\n    if (!obj) return fn;\n    const slice = Array.prototype.slice,\n        args = slice.call(arguments, 2);\n\n    if (fn.bind) {\n        return fn.bind.apply(fn, slice.call(arguments, 1));\n    }\n\n    return function _fn() {\n        return fn.apply(obj, args.length ? args.concat(slice.call(arguments)) : arguments);\n    };\n}\n\nexport function extend(dest) {\n    for (let j = 1, len = arguments.length; j < len; j++) {\n        const src = arguments[j];\n\n        for (const i in src) {\n            dest[i] = src[i];\n        }\n    }\n\n    return dest;\n}\n\nexport function legalNumber(v, min, max) {\n    if (!isNumber(v)) {\n        return v;\n    }\n    if (isNumber(min)) {\n        if (v < min) return min;\n    }\n    if (isNumber(max)) {\n        if (v > max) return max;\n    }\n\n    return v;\n}\n\nexport function trim(str) {\n\n    if (!isString(str)) { return str; }\n\n    return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\nexport function splitWords(str) {\n    return trim(str).split(/\\s+/);\n}\n\nfunction type(o, t) {\n    return (Object.prototype.toString.call(o) === `[object ${t}]`);\n}\n\nexport function isArray(obj) { return type(obj, 'Array'); }\n\nexport function isString(obj) { return type(obj, 'String'); }\n\nexport function isNumber(obj) { return type(obj, 'Number'); }\n\nexport function isFunction(obj) { return type(obj, 'Function'); }\n\nexport function isObject(obj) { return type(obj, 'Object'); }\n\nexport function isEmptyObject(e) {\n    if (!isObject(e)) return false;\n\n    for (const t in e) {\n        return !1;\n    }\n\n    return !0;\n}\n\nexport function validateNumber(num) {\n    return !isNaN(Number(num));\n}\n\nexport function mixin(obj, sources) {\n    if (isObject(sources)) {\n        for (const key in sources) {\n            if (isObject(sources[key])) {\n                if (!isObject(obj[key])) {\n                    obj[key] = {};\n                }\n                mixin(obj[key], sources[key]);\n            } else {\n                obj[key] = sources[key];\n            }\n        }\n    }\n\n    return obj;\n}\n\nexport function mixins(obj, sourcesArr) {\n    if (isArray(sourcesArr)) {\n        sourcesArr.forEach((source) => { mixin(obj, source); });\n    }\n\n    return obj;\n}\n\nexport function getObjectFromArray(arr, key, value, index) {\n    // return arr.filter((i) => i[key] === value)[0];\n    if (!arr || !arr.length || !key) return;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        if (arr[i][key] && arr[i][key] === value) {\n            return index ? i : arr[i];\n        }\n    }\n    return undefined;\n}\n\nexport function removeObjectFromArray(arr, key, value) {\n    for (let i = 0, len = arr.length; i < len; i++) {\n        if ((value !== undefined && arr[i][key] === value) || (value === undefined && arr[i] === key)) {\n            return arr.splice(i, 1);\n        }\n    }\n\n    return [];\n}\n\nexport function get(dom) {\n    return dom && typeof dom === 'string' ? document.getElementById(dom) : dom;\n}\n\nfunction _isDOM1(obj) {\n    return obj instanceof HTMLElement;\n}\n\nfunction _isDOM2(obj) {\n    return !!obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n}\n\nexport const isDOM = (typeof HTMLElement === 'object') ? _isDOM1 : _isDOM2;\n\nexport function cloneJsonObject(obj) {\n    return isObject(obj) ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\nexport function merge(target, source) {\n    const copyObj = {},\n        copyFuns = {};\n\n    for (const key in target) {\n        if (!isFunction(target[key])) {\n            copyObj[key] = target[key];\n        } else {\n            copyFuns[key] = target[key];\n        }\n    }\n    /*eslint-disable */\n    const newObj = mixin(JSON.parse(JSON.stringify(copyObj)), source);\n    /*eslint-enable */\n    for (const key in copyFuns) {\n        newObj[key] = copyFuns[key];\n    }\n\n    return newObj;\n}\n\nexport function getPercentage(number, init) {\n    return legalNumber(number || init || 0, 0, 1) * 100;\n}\n\nexport function capitalize(str) {\n    return isString(str) ? (str.charAt(0).toUpperCase() + str.slice(1)) : str;\n};\n\nexport function reverseCamelcase(n) {\n    return n.replace(/[A-Z]/g, (l) => `-${l.toLowerCase()}`);\n}\n\nexport function camelize(target) {\n    if (!target || (target.indexOf('-') < 0 && target.indexOf('_') < 0)) {\n        return target;\n    }\n\n    return target.replace(/[-_][^-_]/g, (match) => match.charAt(1).toUpperCase());\n}\n\nexport function unique(array) {\n    const r = [];\n\n    for (let i = 0, l = array.length; i < l; i++) {\n        for (let j = i + 1; j < l; j++) {\n            if (array[i] === array[j]) j = ++i;\n        }\n        r.push(array[i]);\n    }\n\n    return r;\n}\n\nexport function firstUpperCase(str) {\n    return str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\n}\n\nexport function isPercentage(num) {\n    return (isString(num) && num.indexOf('%') > 0) || (num >= -1 && num <= 1);\n}\n\nexport function translatePercentage(num) {\n\n    if (isString(num)) {\n        const index = num.indexOf('%');\n\n        if (index > 0) {\n            return Number(num.substring(0, index)) / 100;\n        }\n\n        if (validateNumber(num)) {\n            return Number(num);\n        }\n\n    }\n\n    return num;\n}\n\nexport function translateNumberToPercentage(num) {\n    return `${num * 100}%`;\n}\n\nexport function contain(arr, item) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === item) { return i; }\n    }\n\n    return -1;\n}\n\nexport function throttle(fn, time, context) {\n    let lock = null,\n        args = null;\n\n    function later() {\n        lock = false;\n        if (args) {\n            wrapperFn.apply(context, args);\n            args = false;\n        }\n    }\n\n    function wrapperFn() {\n        if (lock) {\n            args = arguments;\n        } else {\n            fn.apply(context, arguments);\n            setTimeout(later, time);\n            lock = true;\n        }\n    }\n\n    return wrapperFn;\n}\n\nexport function formatNum(num, digits) {\n    const pow = Math.pow(10, digits || 5);\n\n    return Math.round(num * pow) / pow;\n}\n\n// 56, 56%, 0, 1, 0.5\nexport function formatNumber(n) {\n    if (isNumber(n) && !isNaN(n)) {\n        return n;\n    }\n    if (isString(n)) {\n        if (validateNumber(n)) return Number(n);\n\n        return translatePercentage(n);\n    }\n\n    return 0;\n}\n\nexport function getCssSize(size, scale) {\n    scale = scale || 1;\n    if (isString(size)) {\n        if (size.indexOf('%') > 0) {\n            return size;\n        }\n        if (size.indexOf('px') > 0) {\n            return `${getPureValue(size) * scale}px`;\n        }\n        if (validateNumber(size)) {\n            return `${Number(size) * scale}px`;\n        }\n    }\n    if (validateNumber(size)) {\n        return `${size * scale}px`;\n    }\n\n    return '0px';\n}\n\nexport function multiplyBy(n, m) {\n    n = formatNumber(n);\n    m = m || 1;\n    if (n === 0 || n < 0) return n;\n    if (n <= 1 && n > 0) {\n        return m * n;\n    }\n    if (n > 1) {\n        return n;\n    }\n\n    return n;\n}\n\nexport function getPureValue(val) {\n    if (isString(val) && val.indexOf('px') > 0) {\n        val = trim(val);\n\n        return Number(val.substring(0, val.indexOf('px')));\n    }\n\n    return val;\n}\n\nexport function formatMargin(margin, scale) {\n    scale = scale || 1;\n    if (!margin) {\n        margin = '0 0';\n    }\n    if (isString(margin)) {\n        const p = splitWords(margin).map((m) => getPureValue(m));\n\n        if (isArray(p)) {\n            if (p.length === 4) {\n                return {\n                    top: Number(p[0]) * scale,\n                    right: Number(p[1]) * scale,\n                    bottom: Number(p[2]) * scale,\n                    left: Number(p[3]) * scale,\n                };\n            }\n            if (p.length === 2) {\n                return {\n                    top: Number(p[0]) * scale,\n                    right: Number(p[1]) * scale,\n                    bottom: Number(p[0]) * scale,\n                    left: Number(p[1]) * scale,\n                };\n            }\n            if (p.length === 1) {\n                margin = Number(margin);\n            }\n        }\n    }\n    if (isNumber(margin) && margin >= 0) {\n        return {\n            top: margin * scale,\n            right: margin * scale,\n            bottom: margin * scale,\n            left: margin * scale,\n        };\n    }\n\n    return null;\n}\n\nfunction _getScaleMargin(margin, scale) {\n    scale = scale || 1;\n    if (margin && isString(margin)) {\n        if (margin.indexOf('%') > 0) {\n            return `${translatePercentage(margin) * 100}%`;\n        }\n        if (margin.indexOf('px') > 0) {\n            return `${Number(getPureValue(margin)) * scale}px`;\n        }\n    }\n    if (validateNumber(margin)) {\n        return `${Number(margin) * scale}px`;\n    }\n\n    return '0px';\n}\n\nexport function formatMargin2(margin, scale) {\n    if (!margin) {\n        margin = '0 0';\n    }\n    scale = scale || 1;\n    if (validateNumber(margin)) {\n        margin = String(margin);\n    }\n    let p = [];\n\n    if (isString(margin)) {\n        p = splitWords(margin);\n\n        if (p.length === 2) {\n            p = p.concat([p[0], p[1]]);\n        }\n        if (p.length === 3) {\n            p.push(p[2]);\n        }\n        if (p.length === 1) {\n            p = p.concat([p[0], p[0], p[0]]);\n        }\n    }\n\n    return p.length === 4 ? {\n        top: _getScaleMargin(p[0], scale),\n        right: _getScaleMargin(p[1], scale),\n        bottom: _getScaleMargin(p[2], scale),\n        left: _getScaleMargin(p[3], scale),\n    } : null;\n}\n\nexport function distinct(arr) {\n    if (isArray(arr)) {\n        const len = arr.length;\n        function loop(index) {\n            if (index >= 1) {\n                if (arr[index] === arr[index - 1]) {\n                    arr.splice(index, 1);\n                }\n                loop(index - 1);\n            }\n        }\n        loop(len - 1);\n    }\n\n    return arr;\n}\n\nexport function NullFn() {\n\n}\n\n/*eslint-disable*/\nexport function guid() {\n    const s = 'xxxyxxxxxxxxyxxxxxxxxxxyxxxx'.replace(/[xy]/g, (c) => {\n        const r = Math.random() * 16 | 0;\n        const v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n    return s.toLowerCase();\n}\n/*eslint-enabel*/\n\nexport function stampUUID(obj) {\n    obj.uuid = obj.uuid || guid();\n\n    return obj.uuid;\n}\n\n// 交换数组顺序\nexport const swapArrItems = function (arr, index1, index2) {\n    arr[index1] = arr.splice(index2, 1, arr[index1])[0];\n    return arr;\n};\n\n// 移动数组项到最前面\nexport const moveToFirst = function (arr, index) {\n    if (arr.length < 2) return;\n    arr.unshift(arr.splice(index, 1)[0]);\n}\n\n// 移动数组项到最后面\nexport const moveToLast = function (arr, index) {\n    if (arr.length < 2) return;\n    arr.push(arr.splice(index, 1)[0]);\n}\n\nexport function insertToArr(arr, index, target) {\n    if (isArray(arr)) {\n        arr.splice(index, 0, target);\n    }\n}","import {\n    isString, isDOM, isObject, splitWords, bind, trim, isFunction,\n    validateNumber, isEmptyObject, camelize, reverseCamelcase,\n} from '../utils/util';\nimport CT from '../constant/constant';\n\nexport function testProp(props) {\n    const style = document.documentElement.style;\n\n    for (let i = 0; i < props.length; i++) {\n        if (props[i] in style) {\n            return props[i];\n        }\n    }\n\n    return false;\n}\n\n/*eslint-disable */\nexport const TRANSFORM = testProp(['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform']);\n\nexport const TRANSITION = testProp(['webkitTransition', 'transition', 'OTransition', 'MozTransition', 'msTransition']);\n\nexport const TRANSITION_END = (TRANSITION === 'webkitTransition') || (TRANSITION === 'OTransition')\n    ? TRANSITION + 'End' : 'transitionend';\n\n/*eslint-enable */\n\nexport function getClass(el) {\n    if (!isDOM(el)) return null;\n\n    return el.className.baseVal === undefined ? el.className : el.className.baseVal;\n}\n\nexport function hasClass(el, name) {\n    if (!isDOM(el) && !name) return false;\n    if (el.classList !== undefined) {\n        return el.classList.contains(name);\n    }\n    const className = getClass(el);\n\n    /*eslint-disable */\n    return className.length > 0 && new RegExp('(^|\\\\s)' + name + '(\\\\s|$)').test(className);\n    /*eslint-enable */\n}\n\nexport function setClass(el, name) {\n    if (el.className.baseVal === undefined) {\n        el.className = name;\n    } else {\n        el.className.baseVal = name;\n    }\n}\n\nexport function addClass(el, name) {\n    if (!isDOM(el) || !name) return;\n    if (el.classList !== undefined) {\n        const classes = splitWords(name);\n\n        for (let i = 0, len = classes.length; i < len; i++) {\n            el.classList.add(classes[i]);\n        }\n    } else if (!hasClass(el, name)) {\n        const className = getClass(el);\n\n        setClass(el, (className ? `${className} ` : '') + name);\n    }\n}\n\nexport function removeClass(el, names) {\n    if (!isDOM(el) || !names) return;\n    names = splitWords(names);\n    names.forEach((name) => {\n        if (el.classList !== undefined) {\n            el.classList.remove(name);\n        } else {\n            const cls = getClass(el);\n\n            setClass(el, trim((` ${cls} `).replace(` ${name} `, ' ')));\n        }\n    });\n}\n\nexport function setStyle(dom, styles, addOn) {\n    if (!isDOM(dom) || isEmptyObject(styles)) return;\n    for (const key in styles) {\n        let _key = key;\n\n        if (addOn && _key) {\n            _key = camelize(_key);\n            _key = testProp([_key, `webkit${_key}`, `moz${_key}`, `ms${_key}`, `o${_key}`]);\n        }\n        if (_key && styles[_key] !== null && styles[_key] !== undefined) {\n            dom.style[_key] = styles[_key];\n        }\n    }\n}\n\nexport function css(el, styles) {\n\n    if (isDOM(el) && styles) {\n        if (isString(styles)) {\n            return getStyle(el, reverseCamelcase(styles));\n        }\n        if (!isEmptyObject(styles)) {\n            setStyle(el, styles, true);\n\n            return undefined;\n        }\n    }\n\n    return undefined;\n}\n\nexport function create(tag, classnames, styles, container) {\n    const el = document.createElement(tag || 'div');\n\n    if (classnames) {\n        addClass(el, classnames);\n    }\n    if (isObject(styles)) {\n        css(el, styles);\n    }\n    if (isDOM(container)) {\n        container.appendChild(el);\n    }\n\n    return el;\n}\n\nexport function html(el, html) {\n    if (isDOM(el)) {\n        if (isString(html)) {\n            el.innerHTML = html;\n        }\n        if (html && isDOM(html)) {\n            el.appendChild(html);\n        }\n        if (html === undefined) {\n            return el.innerHTML;\n        }\n    }\n}\n\nexport function isHidden(el) {\n    return isDOM(el) && getStyle(el, 'display') === 'none';\n}\n\nfunction addHStyle(css) {\n    if (!isString(css)) return;\n    const head = document.querySelector('head');\n\n    if (head) {\n        const oldStyle = head.querySelector('style');\n\n        if (oldStyle) {\n            oldStyle.innerHTML += css;\n        } else {\n            const style = document.createElement('style'),\n                node = document.querySelector('link');\n\n            style.type = 'text/css';\n            style.innerHTML = css;\n\n            if (node) {\n                head.insertBefore(style, node);\n            } else {\n                head.appendChild(style);\n            }\n        }\n    }\n}\n\nexport function removeByClass(classname, container) {\n    Array.prototype.forEach.call((container || document).querySelectorAll(`.${classname}`), (el) => {\n        if (isDOM(el)) el.parentNode.removeChild(el);\n    });\n}\n\nexport function removeByRole(attr, container) {\n    Array.prototype.forEach.call((container || document).querySelectorAll(`[${CT.ROLE}=\"${attr}\"]`), (el) => {\n        if (isDOM(el)) el.parentNode.removeChild(el);\n    });\n}\n\nexport function query(el, filter) {\n    return isDOM(el) && filter && el.querySelector(filter);\n}\n\nexport function eachChild(parent, fn, context) {\n    if (isDOM(parent)) {\n        fn = bind(fn, context);\n        Array.prototype.forEach.call(parent.childNodes, (node) => {\n            if (isFunction(fn) && fn(node) === false) {\n                return;\n            }\n        });\n    }\n}\n\nexport function attr(el, name, value) {\n    if (isDOM(el)) {\n        if (name !== undefined) {\n            if (value !== undefined) {\n                el.setAttribute(name, value);\n            } else {\n                return el.getAttribute(name);\n            }\n        }\n    }\n\n    return undefined;\n}\n\nexport function getStyle(dom, key) {\n    if (dom && isDOM(dom)) {\n        if (dom.currentStyle) {\n            return dom.currentStyle[key];\n        } else if (window.getComputedStyle) {\n            return window.getComputedStyle(dom, null)[key];\n        }\n    }\n\n    return null;\n}\n\nexport function getPureStyle(dom, key) {\n    if (dom) {\n        const style = getStyle(dom, key);\n\n        if (isString(style)) {\n            if (style.indexOf('px') > 0) {\n                return Number(style.substring(0, style.length - 2));\n            }\n            if (validateNumber(style)) {\n                return Number(style);\n            }\n        }\n    }\n\n    return 0;\n}\n\nexport function getRect(el) {\n    return isDOM(el) ? el.getBoundingClientRect() : null;\n}\n\nexport function getTargetDataId(el) {\n    if (isDOM(el)) {\n        const id = el.getAttribute(CT.COMPONENT_ID_KEY);\n\n        if (Number(id) > 0) {\n            return id;\n        }\n    }\n    if (isObject(el)) {\n        if (el.getId) {\n            return el.getId();\n        }\n        if (el.id) {\n            return el.id;\n        }\n    }\n\n    return el;\n}\n\n/*eslint-disable */\nexport function createPublicStyle() {\n    const css\n        = `\\/* PoPo Public Style *\\/\n    div[${CT.POPO}] {display:none}\n    div[${CT.TARGET}] {width:100%;height:100%;}\n    div[${CT.ROLE}], div[${CT.ROLE}]:after,div[${CT.ROLE}]:before{box-sizing: border-box;}\n    div[data-popo-role=${CT.PANE}]{transform-origin: 0 0;-ms-transform-origin: 0 0;-webkit-transform-origin: 0 0;}\n    div[data-popo-role=${CT.GRID_L_C_R}]{zoom:1;position:relative;}\n    div[data-popo-role=${CT.GRID_L_C_R}]:after{content:'';display:block;clear:both;height:0;}\n    div[data-popo-role=${CT.GRID_LEFT}],div[data-popo-role=${CT.GRID_CENTER}],div[data-popo-role=${CT.GRID_RIGHT}]{float:left;position:relative;}\n    div[data-popo-role=${CT.GRID_FOOT}],div[data-popo-role=${CT.GRID_HEAD}] {position:relative;}\n    .${CT.INFO}, .${CT.EXT_PANE}{position:absolute;z-index:100;box-sizing:border-box;}\n    .${CT.EXT_PANE} *{box-sizing:border-box;}\n    .${CT.EXT_PANE}{border:2px solid rgba(0,0,0,0.2);border-radius: 2px;overflow:hidden;}\n    .${CT.EXT_PANE} a, .${CT.EXT_PANE} span{font: bold 18px 'Lucida Console', Monaco, monospace;width:30px;height:30px;text-align:center;display:block;border-bottom:1px solid #bbb;line-height:30px;color:#333;background-color:#ffffff;text-decoration:none;outline:none;}\n    .${CT.EXT_PANE} a:hover{background-color:#f2f2f2;}\n    .${CT.EXT_PANE} span{font-size:11px;}\n    .${CT.NAME}-grab {cursor:-webkit-grab;cursor:-moz-grab;cursor:grab;}\n    .${CT.NAME}-grabbing {cursor:-webkit-grabbing;cursor:-moz-grabbing;cursor:grabbing;}\n    `;\n\n    addHStyle(css);\n}\n/*eslint-enable */\n\ncreatePublicStyle();\n","import { stamp, splitWords } from '../utils/util';\nimport CT from '../constant/constant';\nimport Browser from '../utils/browser';\n\n/*eslint-disable*/\nconst eventsKey = CT.EVENT,\n    wheelPxFactor = (Browser.win && Browser.chrome) ? (2 * window.devicePixelRatio)\n        : (Browser.gecko ? window.devicePixelRatio : 1);\n/*eslint-enable*/\n\nfunction addOne(obj, type, fn, context) {\n    if (!obj) return null;\n    function handler(e) {\n        return fn.call(context || obj, e || window.event);\n    }\n\n    const id = type + stamp(fn) + (context ? `{_${stamp(context)}}` : '');\n\n    if (obj[eventsKey] && obj[eventsKey][id]) {\n        return this;\n    }\n\n    if ('addEventListener' in obj) {\n        obj.addEventListener(type, handler, false);\n    } else if ('attachEvent' in obj) {\n        obj.attachEvent(`on{$type}`, handler);\n    }\n\n    obj[eventsKey] = obj[eventsKey] || {};\n    obj[eventsKey][id] = handler;\n\n    return null;\n}\n\nfunction removeOne(obj, type, fn, context) {\n    if (!obj) return null;\n    const id = type + stamp(fn) + (context ? `{_${stamp(context)}}` : ''),\n        handler = obj[eventsKey] && obj[eventsKey][id];\n\n    if (!handler) {\n        return this;\n    }\n\n    if ('removeEventListener' in obj) {\n        obj.removeEventListener(type, handler, false);\n    } else if ('detachEvent' in obj) {\n        obj.detachEvent(`on${type}`, handler);\n    }\n    obj[eventsKey][id] = null;\n\n    return null;\n}\n\nexport function stopPropagation(e) {\n    if (e.stopPropagation) {\n        e.stopPropagation();\n    } else if (e.originalEvent) {\n        e.originalEvent._stopped = true;\n    } else {\n        e.cancelBubble = true;\n    }\n\n    return this;\n}\n\nexport function preventDefault(e) {\n    if (e.preventDefault) {\n        e.preventDefault();\n    } else {\n        e.returnValue = false;\n    }\n\n    return this;\n}\n\nexport function stop(e) {\n    preventDefault(e);\n    stopPropagation(e);\n\n    return this;\n}\n\nexport function on(obj, types, fn, context) {\n    if (obj && types) {\n        types = splitWords(types);\n        for (let i = 0, len = types.length; i < len; i++) {\n            addOne(obj, types[i], fn, context);\n        }\n    }\n\n    return this;\n}\n\nexport function off(obj, types, fn, context) {\n    if (obj) {\n        if (types) {\n            types = splitWords(types);\n            for (let i = 0, len = types.length; i < len; i++) {\n                removeOne(obj, types[i], fn, context);\n            }\n        } else {\n            for (const j in obj[eventsKey]) {\n                removeOne(obj, j, obj[eventsKey][j]);\n            }\n            delete obj[eventsKey];\n        }\n    }\n}\n\n/*eslint-disable */\nexport function getWheelDelta(e) {\n    return (Browser.edge) ? e.wheelDeltaY / 2 // Don't trust window-geometry-based delta\n        : (e.deltaY && e.deltaMode === 0) ? -e.deltaY / wheelPxFactor // Pixels\n            : (e.deltaY && e.deltaMode === 1) ? -e.deltaY * 20 // Lines\n                : (e.deltaY && e.deltaMode === 2) ? -e.deltaY * 60 // Pages\n                    : (e.deltaX || e.deltaZ) ? 0\n                        : e.wheelDelta ? (e.wheelDeltaY || e.wheelDelta) / 2 // Legacy IE pixels\n                            : (e.detail && Math.abs(e.detail) < 32765) ? -e.detail * 20 // Legacy Moz lines\n                                : e.detail ? e.detail / -32765 * 60 // Legacy Moz pages\n                                    : 0;\n}\n/*eslint-enable */\n","import {\n    isNumber, isArray, legalNumber, trim, isObject, isString, formatNum,\n} from '../../utils/util';\nimport { getRect, setStyle } from '../../dom/dom';\nimport CT from '../../constant/constant';\nimport ERROR_MSG from '../../constant/error';\nimport Vnode from '../../dom/vdom/vnode';\n\nfunction sumArrFirst(arr) {\n    let sum = 0;\n\n    if (isArray(arr)) {\n        arr.forEach((a) => {\n            if (isNumber(a)) {\n                sum += a;\n            }\n            if (isArray(a) && isNumber(a[0])) {\n                sum += a[0];\n            }\n        });\n    }\n\n    return sum;\n}\n\nfunction sumItem(o) {\n    const sum = sumArr(o);\n\n    return sum <= 0 ? sumArrFirst(o) : sum;\n}\n\nfunction sumArr(arr) {\n    let sum = 0;\n\n    if (isArray(arr)) {\n        for (let i = 0, len = arr.length; i < len; i++) {\n            if (isNumber(arr[i])) {\n                sum += arr[i];\n            } else {\n                return -1;\n            }\n        }\n    }\n\n    return sum;\n}\n\nexport function validateAllLy(ly, rows, cols, startType) {\n    let great = true;\n    const firstCount = startType === 'row' ? rows : cols;\n\n    function validateCore(arr, type) {\n        // const count = type == 'row' ? (startType === 'row' ? cols : rows) : (startType === 'row' ? rows : cols);\n        const count = type === 'row' ? cols : rows;\n\n        if (!isArray(arr) && !isArray(arr[1])) return;\n        if (sumItem(arr[1]) > count) {\n            great = false;\n        }\n        if (isArray(arr[1])) {\n            arr[1].forEach((a) => {\n                if (isArray(a)) {\n                    validateCore(a, type === 'row' ? 'col' : 'row');\n                }\n            });\n        }\n    }\n\n    if (sumArrFirst(ly) > firstCount) {\n        great = false;\n    } else {\n        for (let i = 0, len = ly.length; i < len; i++) {\n            validateCore(ly[i], startType);\n        }\n    }\n\n    return great;\n}\n\nexport function initSize(rows, cols) {\n    if (!rows || !cols) return null;\n    const unitRow = (100 / rows),\n        unitCol = 100 / cols,\n        sizes = {};\n\n    for (let i = 1; i <= rows; i++) {\n        sizes[`${CT.SINGLE_ROW}-${i}`] = (unitRow * i).toFixed(5);\n    }\n    for (let i = 1; i <= cols; i++) {\n        sizes[`${CT.COL}-${i}`] = (unitCol * i).toFixed(5);\n    }\n\n    return sizes;\n}\n\n/**\n * Validate layout number\n * @param {Number} num number\n * @param {Number} end end\n * @param {Number} cols cols\n * @param {Number} rows rows\n * @return {Boolean} validate result\n */\nfunction validateLayoutNumber(num, end, cols, rows) {\n    return isNumber(num) && num >= 1 && num <= (end || Math.max(cols, rows));\n}\n\n/**\n * Get layout wrap count\n * @param {Array} layouts layout\n * @param {Number} cols cols\n * @param {Number} rows rows\n * @return {Number} layout wrap count\n */\nexport function getLayoutWrapCount(layouts, cols, rows) {\n    let count = 0;\n\n    for (let i = 0, len = layouts.length; i < len; i++) {\n        const start = layouts[i][0];\n\n        if (!validateLayoutNumber(start, null, cols, rows)) {\n            return 0;\n        }\n        count += start;\n    }\n\n    return count;\n}\n\n/**\n * Validate layout.\n * @param {Array} layouts layout array\n * @param {Number} cols column count\n * @param {Number} rows row count\n * @return {Boolean} valite layout result\n */\nexport function validateLayout(layouts, cols, rows) {\n    if (!layouts || !layouts.length) return false;\n    const count = getLayoutWrapCount(layouts, cols, rows);\n\n    if (!count) {\n        throw new Error(ERROR_MSG.LY_INVALID);\n    }\n\n    return true;\n}\n\nexport function getRowClassName(row, rows) {\n    return row < 0 ? `${CT.SINGLE_ROW}-${rows}` : `${CT.SINGLE_ROW}-${row}`;\n}\n\n/*eslint-disable */\nexport function getColClassName(col, hasRow) {\n    return col < 0 ? (hasRow ? ` ${CT.ROW}` : '') : (`${CT.COL}-${col}${(hasRow ? ` ${CT.ROW}` : '')}`);\n}\n/*eslint-enable*/\n\nexport function generateEvLy(rows, cols, rowNumber, colNumber) {\n    rowNumber = Math.floor(rows / legalNumber(rowNumber, 1, rows)) || 1;\n    colNumber = Math.floor(cols / legalNumber(colNumber, 1, cols)) || 1;\n\n    const result = new Array(Math.floor(rows / rowNumber)),\n        colsLength = Math.floor(cols / colNumber);\n\n    for (let i = 0; i < result.length; i++) {\n        result[i] = [rowNumber, []];\n        for (let j = 0; j < colsLength; j++) {\n            result[i][1].push(colNumber);\n        }\n    }\n\n    return result;\n}\n\nexport function newVNode(parent, classNames, setId, type) {\n    const node = new Vnode().addClassName(classNames).insertTo(parent);\n\n    node.type = type;\n\n    if (setId) {\n        node.setRole(CT.PANEL);\n        // .addClassName(CT.PANEL);\n    }\n\n    return node;\n}\n\nexport function removeUnused(vc, panels) {\n    function selectPanel(vnode) {\n        const nodes = vnode.children;\n\n        nodes.forEach((node) => {\n            if (node.role === CT.PANEL) {\n                panels.push(node);\n                node.setId(panels.length);\n            }\n            if (node.children.length > 0) {\n                selectPanel(node);\n            }\n        });\n    }\n\n    selectPanel(vc);\n}\n\nexport function newLy(layout, type, vc, rows, cols) {\n    type = type || 'row';\n    const parent = layout[0],\n        childrens = layout[1];\n\n    let vparentNode = null,\n        classname = '';\n\n    if (validateLayoutNumber(parent, null, cols, rows)) {\n        classname = type === 'col' ? getColClassName(parent, true) : getRowClassName(parent, rows);\n        vparentNode = newVNode(vc, classname, false, type === 'col' ? 'col' : 'row', parent);\n    }\n    if (!vparentNode) return;\n\n    if (validateLayoutNumber(childrens, null, cols, rows)) {\n        newVNode(vparentNode, classname, true, type);\n    } else if (isArray(childrens)) {\n        childrens.forEach((c) => {\n            if (validateLayoutNumber(c, null, cols, rows)) {\n                classname = type === 'col' ? getRowClassName(c, rows) : getColClassName(c, true);\n                newVNode(vparentNode, classname, true, type === 'col' ? 'row' : 'col', c);\n            } else if (isArray(c)) {\n                newLy(c, type === 'col' ? 'row' : 'col', vparentNode, rows, cols);\n            }\n        });\n    } else if (!childrens) {\n        classname = type === 'col' ? getColClassName(-1, true) : getRowClassName(-1, rows);\n        newVNode(vparentNode, classname, true, type === 'col' ? 'row' : 'col', -1);\n    }\n}\n\nexport function updateVnodeSize(vc, sizes, options, container) {\n    if (!vc || !sizes || !options) return;\n\n    const keys = Object.keys(sizes).join(','),\n        gutter = options.gutter,\n        freeLy = options.freeLy;\n\n    let fixedHeight = options.fixedHeight || 0,\n        fixedWidth = options.fixedWidth || 0;\n\n    if (fixedHeight > 0) {\n        fixedHeight = legalNumber(fixedHeight, 0.01);\n    }\n    if (fixedWidth > 0) {\n        fixedWidth = legalNumber(fixedWidth, 0.01);\n    }\n\n    function setSize(vnode) {\n        const nodes = vnode.children;\n\n        nodes.forEach((node) => {\n            node.classNames.split(' ').forEach((cls) => {\n                cls = trim(cls);\n                if (keys.indexOf(cls) >= 0) {\n                    if (cls.indexOf('-col-') >= 0) {\n                        node.setWidth(sizes[cls]);\n\n                        return;\n                    }\n                    if (cls.indexOf('-row-') >= 0) {\n                        node.setHeight(sizes[cls]);\n\n                        return;\n                    }\n                }\n            });\n            if (node.children.length > 0) {\n                setSize(node);\n            }\n        });\n    }\n    setSize(vc);\n\n    function updateFixedSize(node) {\n        if (fixedHeight > 0 && !fixedWidth) {\n            node.height = fixedHeight > 1 ? fixedHeight : ((node.width * fixedHeight) + (gutter * (1 - fixedHeight)));\n        }\n        if (fixedWidth > 0 && !fixedHeight) {\n            node.width = fixedWidth > 1 ? fixedWidth : ((node.height * fixedWidth) + (gutter * (1 - fixedWidth)));\n        }\n        if (fixedHeight > 1 && fixedWidth > 1) {\n            node.height = fixedHeight;\n            node.width = fixedWidth;\n        }\n    }\n\n    function updateRealsize(vnode) {\n        const nodes = vnode.children;\n\n        nodes.forEach((node) => {\n            if (node.width !== 0) {\n                node.width = Number((vnode.width * node.width / 100));\n            }\n            if (node.height !== 0) {\n                node.height = (freeLy && freeLy.col === 1) ? vnode.height : Number((vnode.height * node.height / 100));\n            }\n            if (node.width === 0 && vnode.width !== 0) {\n                node.width = Number(vnode.width);\n            }\n            if (node.height === 0 && vnode.height !== 0) {\n                node.height = Number(vnode.height);\n            }\n            updateFixedSize(node);\n            if (node.children.length > 0) {\n                updateRealsize(node);\n            }\n        });\n    }\n    /*eslint-disable */\n    const padding = options.padding,\n        paddingLeft = padding.left + padding.right,\n        paddingTop = padding.top + padding.bottom;\n\n    let width = options.width,\n        height = options.height;\n    /*eslint-enable */\n\n    if ((!width || !height) && container) {\n        const target = container.parentNode || container,\n            ch = target.clientHeight,\n            cw = target.clientWidth,\n            rect = getRect(target),\n            th = ch / rect.height > 1 ? ch : rect.height,\n            tw = cw / rect.width > 1 ? cw : rect.width;\n\n        if (width === 0) {\n            container._origionWidth = width = tw;\n        }\n        if (height === 0) {\n            container._origionHeight = height = th;\n        }\n    }   \n\n    setStyle(container, {\n        width: `${width}px`,\n        // height: `${height}px`,\n    });\n    // container.setWidth(width).setHeight(height);\n\n    width -= paddingLeft;\n    height -= paddingTop;\n\n    vc.children.forEach((node) => {\n        if (node.width !== 0) {\n            node.width = width * Number(node.width) / 100;\n        }\n        if (node.height !== 0) {\n            node.height = height * Number(node.height) / 100;\n        }\n        if (node.width === 0) {\n            node.width = width;\n        }\n        if (node.height === 0) {\n            node.height = height;\n        }\n\n        updateRealsize(node);\n        const child = node.children[0];\n\n        if (child) {\n            if (fixedHeight > 0) {\n                node.height = child.height;\n            }\n            if (fixedWidth > 0) {\n                node.width = child.width;\n            }\n        }\n    });\n\n    vc.setWidth(width).setHeight(height);\n    if (fixedHeight > 0) {\n        if (fixedHeight <= 1) {\n            fixedHeight = vc.children[0].height;\n        }\n        const fixedTotalHeight = fixedHeight * options.layout.length;\n\n        vc.setHeight(fixedTotalHeight);\n        container._origionHeight = fixedTotalHeight;\n    }\n\n    if (fixedWidth > 0) {\n        if (fixedWidth <= 1) {\n            fixedWidth = vc.children[0].width;\n        }\n        let length = 0;\n\n        if (options.layoutStartType === 'row') {\n            length = options.layout[0][1].length;\n        } else {\n            length = options.layout.length;\n        }\n\n        const fixedTotalWidth = fixedWidth * length;\n\n        vc.setWidth(fixedTotalWidth);\n        container._origionWidth = fixedTotalWidth;\n    }\n}\n\nfunction updateAbs(vc, o, panels) {\n    if (!vc || !o || !panels) return;\n    let _step = 0;\n\n    vc.children.forEach((node) => {\n        if (node.type === 'row') {\n            node.left = 0;\n            node.top = _step;\n            _step += node.height;\n        }\n        if (node.type === 'col') {\n            node.top = 0;\n            node.left = _step;\n            _step += node.width;\n        }\n    });\n\n    _step = 0;\n    panels.forEach((node) => {\n        if (node.type === 'row') {\n            node.left = 0;\n            node.top = _step;\n            _step += node.height;\n        }\n        if (node.type === 'col') {\n            node.top = 0;\n            node.left = _step;\n            _step += node.width;\n        }\n    });\n\n    function setAbs(vnode) {\n        const nodes = vnode.children;\n        let step = vnode.type === 'row' ? vnode.left : vnode.top;\n\n        nodes.forEach((node) => {\n            if (node.type === 'row' && vnode.type === 'col') {\n                node.left = vnode.left;\n                node.top = step;\n                step += node.height;\n            }\n            if (node.type === 'col' && vnode.type === 'row') {\n                node.top = vnode.top;\n                node.left = step;\n                step += node.width;\n            }\n            if (node.children.length > 0) {\n                setAbs(node);\n            }\n        });\n    }\n\n    vc.children.forEach((node) => {\n        setAbs(node);\n    });\n\n    const gutter = o.gutter;\n\n    panels.forEach((panel) => {\n        panel.setWidth(panel.width - gutter)\n            .setHeight(panel.height - gutter)\n            .setTop(formatNum((panel.top + (gutter * 0.5)), 5))\n            .setLeft(formatNum((panel.left + (gutter * 0.5)), 5))\n            .clearClassName()\n            .setRole(CT.PANEL)\n            .setStyle({\n                position: 'absolute',\n                zIndex: CT.PANEL_DEFAULT_ZINDEX,\n            });\n        panel.parentNode = null;\n    });\n\n    vc.children = panels;\n    vc.children.forEach((node) => {\n        node.parentNode = vc;\n    });\n    panels = null;\n}\n\nexport function initLayoutSet(o) {\n    const ly = o.layout,\n        gutter = o.gutter,\n        rows = legalNumber(o.rows, CT.MIN_LY_COUNT),\n        cols = legalNumber(o.cols, CT.MIN_LY_COUNT);\n    let startType = o.layoutStartType,\n        _ly = ly;\n\n    if (isString(ly) && ly.toLocaleLowerCase() === 'whole') {\n        _ly = [[rows]];\n    }\n\n    if (isArray(ly)) {\n        if (ly.length === 0) {\n            _ly = [[rows]];\n        }\n        _ly = ly.map((n) => {\n            if (isNumber(n)) { n = [n]; }\n\n            return n;\n        });\n    }\n\n    if (isObject(ly)) {\n        let fh = legalNumber(ly.height, 0),\n            fw = legalNumber(ly.width, 0);\n\n        _ly = generateEvLy(rows, cols, ly.rows, ly.cols);\n\n        if (fh || fw) {\n            if (fh > 1 && fw > 0 && fw <= 1) {\n                fw = fh * fw;\n            }\n            if (fh > 0 && fh <= 1 && fw > 1) {\n                fh = fw * fh;\n            }\n            if (fw > 1) {\n                fw += gutter;\n            }\n            if (fh > 1) {\n                fh += gutter;\n            }\n            if (fh > 0 && fh <= 1 && fw > 0 && fw <= 1) {\n                throw new Error(ERROR_MSG.LY_FIXED_LESS);\n            }\n        }\n\n        o.fixedHeight = fh;\n        o.fixedWidth = fw;\n        o.freeLy = {\n            col: ly.cols || o.cols,\n            row: ly.rows || o.rows,\n            fh,\n            fw,\n        };\n        o.layoutStartType = startType = 'row';\n    }\n\n    if (_ly && !validateAllLy(_ly, rows, cols, startType)) {\n        throw new Error(ERROR_MSG.LY_INVALID);\n    }\n\n    o.layout = _ly;\n\n    return true;\n}\n\nexport function initLayout(o, vc) {\n    if (!o || !vc || !o.layout) return false;\n    const lys = o.layout,\n        cols = o.cols,\n        rows = o.rows,\n        type = o.layoutStartType;\n\n    if (!validateLayout(lys, cols, rows)) return false;\n\n    lys.forEach((ly) => { newLy(ly, type, vc, rows, cols); });\n\n    return true;\n}\n\nexport function updateLayout(vc, c, sizes, options, panels) {\n    updateVnodeSize(vc, sizes, options, c);\n    removeUnused(vc, panels);\n    updateAbs(vc, options, panels);\n}\n","import {\n    isNumber, isArray, contain, unique, getCssSize, formatMargin2, isPercentage, translatePercentage,\n} from '../../utils/util';\nimport { getTargetDataId, } from '../../dom/dom';\nimport CT from '../../constant/constant';\nimport Vnode from '../../dom/vdom/vnode';\n\n/**\n * Generate Panel layout\n * @param {Object} layout layoutOptions\n * @param {Number} scale fontscale\n * @return {Object} layout size\n */\nfunction genPanelLy({ gutter = 0, headHeight = 0, footHeight = 0, rightWidth = 0, leftWidth = 0 }, scale = 1) {\n    gutter = formatMargin2(gutter, scale);\n    headHeight = getCssSize(headHeight, scale);\n    footHeight = getCssSize(footHeight, scale);\n    rightWidth = getCssSize(rightWidth, scale);\n    leftWidth = getCssSize(leftWidth, scale);\n\n    const containerHeight = `calc(100% - ${headHeight} - ${footHeight} - ${gutter.top} - ${gutter.bottom})`,\n        centerWidth = `calc(100% - ${rightWidth} - ${leftWidth} - ${gutter.left} - ${gutter.right})`;\n\n    return {\n        headHeight,\n        footHeight,\n        rightWidth,\n        leftWidth,\n        containerHeight,\n        centerWidth,\n        gutter,\n    };\n}\n\nfunction addPanel(panel, layout, fontScale) {\n    const { headHeight, footHeight, rightWidth, leftWidth,\n        containerHeight, centerWidth, gutter } = genPanelLy(layout, fontScale);\n    let containerNode = null;\n\n    // head\n    if (headHeight !== '0px' && headHeight !== '0%') {\n        new Vnode().setRole(CT.GRID_HEAD)\n            .setHeight(headHeight)\n            .insertTo(panel);\n    }\n\n    // center\\left\\right container\n    if (headHeight !== '100%' && footHeight !== '100%') {\n        containerNode = new Vnode().setRole(CT.GRID_L_C_R)\n            .setHeight(containerHeight)\n            .setStyle({ marginBottom: gutter.bottom, marginTop: gutter.top })\n            .insertTo(panel);\n    }\n\n    // foot\n    if (footHeight !== '0px' && footHeight !== '0%') {\n        new Vnode().setRole(CT.GRID_FOOT).setHeight(footHeight).insertTo(panel);\n    }\n\n    // left\n    if (leftWidth !== '0px' && leftWidth !== '0%') {\n        const left = new Vnode().setRole(CT.GRID_LEFT)\n            .setWidth(leftWidth);\n\n        if (containerNode) {\n            left.insertTo(containerNode);\n        }\n    }\n\n    // center\n    if (containerNode) {\n        new Vnode().setRole(CT.GRID_CENTER)\n            .setWidth(centerWidth)\n            .setStyle({\n                marginLeft: gutter.left,\n                marginRight: gutter.right,\n            })\n            .insertTo(containerNode);\n    }\n\n    // right\n    if (rightWidth !== '0px' && rightWidth !== '0%') {\n        const right = new Vnode().setRole(CT.GRID_RIGHT)\n            .setWidth(rightWidth);\n\n        if (containerNode) {\n            right.insertTo(containerNode);\n        }\n    }\n\n    return panel;\n}\n\nexport function addLayoutToPanel(panel, layout, fontScale) {\n    if (!panel || !layout) return;\n    if (panel.queryByRole(CT.PANEL_CONTAINER)) {\n        return;\n    }\n\n    const panelContainer = new Vnode()\n        .setStyle({ position: 'relative' })\n        .setRole(CT.PANEL_CONTAINER);\n\n    addPanel(panelContainer, layout, fontScale || 1).insertTo(panel);\n}\n\nexport function addPanels(vc, o) {\n    if (!vc || !o.panel || !o.panel.enable) return;\n    const df = o.panel.default,\n        custom = o.panel.custom,\n        customIds = [],\n        fullId = o.fullId,\n        fullZIndex = o.fullZIndex;\n\n    if (custom && isArray(custom)) {\n        custom.forEach((c) => {\n            let panels = c.panels;\n\n            if (isNumber(panels)) {\n                panels = [panels];\n            }\n\n            if (isArray(panels)) {\n                const customVnodes = [];\n\n                c.panels = panels = unique(panels);\n                panels.forEach((id) => {\n                    customIds.push(id);\n                    const _vn = vc.getChild(id);\n\n                    if (_vn) {\n                        customVnodes.push(_vn);\n                    }\n                });\n\n                customVnodes.forEach((vnode) => {\n                    let zIndex = c.zIndex;\n\n                    if (vnode.getId() === fullId) {\n                        zIndex = fullZIndex;\n                    }\n                    addLayoutToPanel(vnode, c, o.fontScale);\n                    vnode.setStyle({ zIndex }).update();\n                });\n            }\n        });\n    }\n\n    vc.children.forEach((node) => {\n        if (contain(customIds, node[CT.COMPONENT_ID_KEY]) < 0) {\n            let zIndex = df.zIndex;\n\n            if (node.getId() === fullId) {\n                zIndex = fullZIndex;\n            }\n            addLayoutToPanel(node, df, o.fontScale);\n            node.setStyle({ zIndex }).update();\n        }\n    });\n}","import Vnode from '../../dom/vdom/vnode';\nimport SVG from '../../dom/vdom//vsvg';\nimport CT from '../../constant/constant';\nimport { css, create, removeByClass, query } from '../../dom/dom';\nimport { isNumber, isArray, isString, isDOM, merge } from '../../utils/util';\nimport { getRealIds, getAllIds } from './popo';\n\nfunction n2px(fz) {\n    if (isNumber(fz)) return `${fz}px`;\n    if (isString(fz)) {\n        if (fz.indexOf('px') < 0 || fz.indexOf('em') > 0) {\n            return fz;\n        } else if (!isNaN(Number(fz))) {\n            return `${fz}px`;\n        }\n    }\n\n    return fz;\n}\n\nfunction px2n(str) {\n    if (isString(str)) {\n        const i = str.indexOf('px');\n\n        if (i >= 0) {\n            return Number(str.substring(0, i));\n        }\n    }\n\n    if (isNumber(str)) {\n        return str;\n    }\n\n    return 0;\n}\n\nfunction _addGGL(panel, o) {\n    if (!panel || !isDOM(panel.realDom) || !o || !o.show) return;\n    removeByClass(CT.PANEL_GUIDELINES, panel.realDom);\n    const ggl = query(panel.realDom, `.${CT.GUIDELINES}`),\n        width = panel.width,\n        height = panel.height,\n        zIndex = o.zIndex,\n        size = o.size || 15,\n        color = o.color,\n        lineSize = o.lineSize,\n        lines = new SVG(),\n        svg = create('div', CT.PANEL_GUIDELINES, {\n            zIndex,\n            height: `${height}px`,\n            width: `${width}px`,\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            overflow: 'hidden',\n            userSelect: 'none',\n        }, panel.realDom);\n\n    if (isDOM(ggl)) {\n        panel.realDom.removeChild(ggl);\n    }\n\n    let rows = Math.ceil(height / size),\n        cols = Math.ceil(width / size),\n        points = '',\n        points2 = '';\n\n    for (let i = 1; i <= rows; i++) {\n        const y = size * i;\n\n        points += `M0 ${y} L${width} ${y} `;\n    }\n    for (let i = 1; i <= cols; i++) {\n        const x = size * i;\n\n        points += `M${x} 0 L${x} ${height} `;\n    }\n\n    rows = Math.ceil(height / size / 4);\n    cols = Math.ceil(width / size / 4);\n    for (let i = 1; i <= rows; i++) {\n        const y = size * i * 4;\n\n        points2 += `M0 ${y} L${width} ${y} `;\n    }\n    for (let i = 1; i <= cols; i++) {\n        const x = size * i * 4;\n\n        points2 += `M${x} 0 L${x} ${height} `;\n    }\n\n    lines.create('path', { d: points, stroke: color, strokeWidth: lineSize });\n    lines.create('path', { d: points2, stroke: color, strokeWidth: lineSize * 1.5 });\n    svg.appendChild(lines.createElement());\n}\n\nfunction addPanelGuidelines(vc, o) {\n    if (!vc || !o || !o.dev || !o.dev.enable || !o.dev.panelGuideline.show) return;\n    const gg = o.dev.panelGuideline,\n        options = merge({\n            color: 'rgba(0,0,0,.25)',\n            width: 1,\n            size: 10,\n            zIndex: 0,\n        }, gg || {});\n\n    let ids = gg.ids;\n\n    if (ids === 'all') {\n        ids = getAllIds(vc);\n    }\n    if (isNumber(ids)) {\n        ids = [ids];\n    }\n    if (isArray(ids)) {\n        ids.forEach((id) => {\n            id = getRealIds(vc, id, o.alias);\n            if (id > 0) {\n                const node = vc.getChild(id);\n\n                if (node && node.realDom) {\n                    _addGGL(node, options);\n                }\n            }\n        });\n    }\n}\n\nfunction createPanelInfo(panel, size, id, position, color, fontSize) {\n    fontSize = n2px(fontSize);\n    if (panel && panel.realDom) {\n        const width = Math.round(panel.width),\n            height = Math.round(panel.height),\n            left = Math.round(panel.left),\n            top = Math.round(panel.top);\n\n        if (size || id || position) {\n            let info = '';\n\n            if (id) {\n                info += panel[CT.COMPONENT_ID_KEY];\n            }\n            if (size) {\n                info += `${(id ? ' - ' : '')} W${width} H${height}`;\n            }\n            if (position) {\n                info += `${(id || size) ? ' - ' : ''} L${left} T${top}`;\n            }\n\n            return new Vnode('span')\n                .addClassName(CT.INFO)\n                .setTop(panel.top + 5)\n                .setLeft(panel.left + 5)\n                .setWidth('auto')\n                .setHeight('auto')\n                .setStyle({ color, fontSize })\n                .setHtml(info);\n        }\n    }\n\n    return null;\n}\n\nfunction createDebugInfo(vc, dev) {\n    if (!vc || !dev || !dev.enable || !dev.panel.show) return;\n    const o = dev.panel,\n        id = o.id,\n        size = o.size,\n        position = o.position,\n        background = o.background,\n        fontSize = n2px(o.fontSize),\n        fontColor = o.fontColor;\n\n    if (vc.realDom && (id || size || position || background)) {\n        for (let i = 0, len = vc.children.length; i < len; i++) {\n            if (vc.children[i].realDom && background && isString(background)) {\n                css(vc.children[i].realDom, { background });\n            }\n            if (vc.children[i].isWidget) continue;\n            const span = createPanelInfo(vc.children[i], size, id, position, fontColor, fontSize);\n\n            if (span) {\n                vc.realDom.appendChild(span.createElement());\n            }\n        }\n    }\n}\n\nfunction createSVGText(svg, text, x, y, fontSize, fill) {\n    if (svg) {\n        svg.create('text', { x, y, fontSize, fill }).setHtml(text);\n    }\n}\n\nexport function addGuidelines(c, vc, o) {\n    if (!c || !vc || !o || !o.dev.guideline.show) return;\n    removeByClass(CT.GUIDELINES, c);\n    const gl = o.dev.guideline,\n        padding = o.padding,\n        width = vc.width + padding.left + padding.right,\n        height = vc.height + padding.top + padding.bottom,\n        identifier = gl.identifier,\n        fontSize = gl.fontSize,\n        fontColor = gl.fontColor,\n        zIndex = gl.zIndex,\n        rows = o.rows,\n        cols = o.cols,\n        unitRowHeight = (100 / rows).toFixed(5) * height / 100,\n        unitColWidth = (100 / cols).toFixed(5) * width / 100,\n        lines = new SVG(),\n        svg = create('div', CT.GUIDELINES, {\n            zIndex,\n            height: `${height}px`,\n            width: `${width}px`,\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            overflow: 'hidden',\n            userSelect: 'none',\n        }, c),\n        position = c.style.position;\n\n    if (position === '' || position === 'static') {\n        css(c, {\n            position: 'relative',\n        });\n    }\n\n    let points = '';\n\n    for (let i = 0; i <= rows; i++) {\n        const y = unitRowHeight * i;\n\n        points += `M0 ${y} L${width} ${y} `;\n        if (identifier) {\n            createSVGText(lines, i, 5, y - unitRowHeight + px2n(fontSize) + 5, fontSize, fontColor);\n        }\n    }\n    for (let i = 0; i <= cols; i++) {\n        const x = unitColWidth * i;\n\n        points += `M${x} 0 L${x} ${height} `;\n        if (identifier && i !== 1) {\n            createSVGText(lines, i, x - unitColWidth + 5, px2n(fontSize) + 5, fontSize, fontColor);\n        }\n    }\n\n    lines.create('path', { d: points, stroke: gl.color, strokeWidth: gl.lineSize });\n    svg.appendChild(lines.createElement());\n}\n\nexport function addSplitLine(c, vc, o) {\n    if (!c || !vc || !o || !o.dev.splitline.show) return;\n    removeByClass(CT.SPLITLINES, c);\n    const sl = o.dev.splitline,\n        fontSize = n2px(sl.fontSize),\n        fontColor = sl.fontColor,\n        padding = o.padding,\n        identifier = sl.identifier,\n        width = vc.width + padding.left + padding.right,\n        height = vc.height + padding.top + padding.bottom,\n        unitRowHeight = sl.height,\n        unitColWidth = sl.width,\n        zIndex = sl.zIndex,\n        rows = Math.ceil(height / unitRowHeight),\n        cols = Math.ceil(width / unitColWidth),\n        svg = create('div', CT.SPLITLINES, {\n            zIndex,\n            height: `${height}px`,\n            width: `${width}px`,\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            overflow: 'hidden',\n            userSelect: 'none',\n        }, c),\n        lines = new SVG(),\n        position = c.style.position,\n        infoY = [],\n        infoX = [];\n\n    if (position === '' || position === 'static') {\n        css(c, { position: 'relative' });\n    }\n\n    let points = '';\n\n    for (let i = 0; i <= rows; i++) {\n        const y = unitRowHeight * i;\n\n        points += `M0 ${y} L${width} ${y} `;\n        infoY.push(y);\n    }\n    for (let i = 0; i <= cols; i++) {\n        const x = unitColWidth * i;\n\n        points += `M${x} 0 L${x} ${height} `;\n        infoX.push(x);\n    }\n\n    if (identifier) {\n        infoX.forEach((x) => {\n            infoY.forEach((y) => {\n                createSVGText(lines, `${x}, ${y}`, x + 10, y + 10 + px2n(fontSize), fontSize, fontColor);\n            });\n        });\n    }\n\n    lines.create('path', { d: points, stroke: sl.color, strokeWidth: sl.lineSize });\n    svg.appendChild(lines.createElement());\n}\n\nexport function loadDev(c, vc, o) {\n    if (!vc || !c || !o || !o.dev || !o.dev.enable) return false;\n    removeByClass(CT.INFO, c);\n    createDebugInfo(vc, o.dev);\n    addGuidelines(c, vc, o);\n    addSplitLine(c, vc, o);\n    addPanelGuidelines(vc, o);\n\n    return true;\n}\n","import Vnode from '../../dom/vdom/vnode';\nimport CT from '../../constant/constant';\nimport { updateLayout, initLayout } from './layout';\nimport { addLayoutToPanel } from './panel';\nimport {\n    css, addClass, setClass, hasClass, query, eachChild,\n    removeClass, getPureStyle, getRect, attr,\n} from '../../dom/dom';\nimport {\n    isNumber, isArray, isString, isDOM, isObject, contain, isEmptyObject, merge,\n    bind, multiplyBy, isFunction, formatNum, cloneJsonObject,\n} from '../../utils/util';\nimport { loadDev } from './dev';\nimport defaultPanel from '../options/panel';\nimport defaultStyle from '../options/style';\n\nexport function createPane(o) {\n    const pd = o.padding,\n        str = `${pd.top}px ${pd.right}px ${pd.bottom}px ${pd.left}px`;\n\n    return new Vnode()\n        .setRole(CT.PANE)\n        .setHeight('auto')\n        .setStyle({\n            padding: str,\n        })\n        .createElement();\n}\n\nexport function createVc() {\n    return new Vnode()\n        .setRole(CT.CONTAINER)\n        .setStyle({ position: 'relative' });\n}\n\nexport function vcToDom(vc) {\n    return vc && vc.createElement();\n}\n\nexport function getAllIds(vc) {\n    return vc ? vc.children.map((node) => node.getId()) : [];\n}\n\nexport function stampInner(c) {\n    if (isDOM(c)) {\n        [CT.ZOOMPANE, CT.ZOOMCONTAINER].forEach((role) => {\n            if (attr(c, CT.ROLE) === role) {\n                /*eslint-disable */\n                c._popo_inner = true;\n                /*eslint-enable */\n\n                return;\n            }\n        });\n    }\n}\n\nexport function addExtend(vc, padding, options, scale, createPanel) {\n    if (!vc || !padding || !options) return null;\n    const { left, top, right, bottom } = padding,\n        width = vc.width + left + right,\n        height = vc.height + top + bottom;\n\n    if (isObject(options)) {\n        const panelOption = merge(defaultPanel, options),\n            { position, size, id, zIndex, layout, style, isWidget, className } = panelOption,\n            node = new Vnode()\n                .setRole(CT.PANEL)\n                .setHeight(multiplyBy(size.height || 0, height))\n                .setWidth(multiplyBy(size.width || 0, width))\n                .setTop(multiplyBy(position.top || 0, height) - top)\n                .setLeft(multiplyBy(position.left || 0, width) - left)\n                .setStyle({\n                    position: 'absolute',\n                    zIndex,\n                });\n\n        if (id) { node.id = id; }\n\n        node[CT.COMPONENT_ID_KEY] = vc.getNewId();\n        node.isExtend = true;\n        node.isWidget = isWidget;\n        if (isWidget && className) {\n            node.addClassName(className);\n        }\n        node.extendInfo = {\n            position: {\n                left: node.left / (position.responsive ? width : 1),\n                top: node.top / (position.responsive ? height : 1),\n            },\n            size: {\n                width: node.width / (size.responsive ? width : 1),\n                height: node.height / (size.responsive ? height : 1),\n            },\n            zIndex,\n        };\n\n        if (layout && isObject(layout) && createPanel) {\n            addLayoutToPanel(node, layout, scale);\n        }\n        if (style && !isWidget) {\n            const _style = merge(defaultStyle.default, style);\n\n            _setStyle(node, _style.panel, false, true);\n            for (const key in style) {\n                const son = node.queryByRole(key);\n\n                if (son && _style[key]) {\n                    _setStyle(son, _style[key], false, true);\n                }\n            }\n        }\n        vc.addNode(node);\n\n        return node;\n    }\n\n    return null;\n}\n\nexport function loadExtends(vc, exts, o, createPanel) {\n    if (!vc || !o) return;\n    let ext = exts;\n\n    if (ext && isObject(ext)) {\n        ext = [ext];\n    }\n    if (ext && isArray(ext)) {\n        ext.forEach((e) => {\n            addExtend(vc, o.padding, e, o.fontScale, createPanel);\n        });\n    }\n}\n\nexport function updateExtends(vc, o) {\n    if (!vc || !o) return;\n    const exts = vc.children.filter((n) => n.isExtend === true),\n        { left, top, right, bottom } = o.padding,\n        width = vc.width + left + right,\n        height = vc.height + top + bottom;\n\n    exts.forEach((panel) => {\n        if (isObject(panel.extendInfo)) {\n            const { size, position } = panel.extendInfo,\n                panelWidth = multiplyBy(size.width || 0, width),\n                panelHeight = multiplyBy(size.height || 0, height);\n\n            panel.setHeight(panel._oldHeight !== undefined ? panel.height : panelHeight)\n                .setWidth(panel._oldWidth !== undefined ? panel.width : panelWidth)\n                .setTop(multiplyBy(panel._oldTop !== undefined ? panel.top : position.top || 0, height))\n                .setLeft(multiplyBy(panel._oldLeft !== undefined ? panel.left : position.left || 0, width))\n                .update();\n        }\n    });\n}\n\nexport function getIdByAlias(alias, key) {\n    if (isArray(alias) && key) {\n        const _alias = alias.slice(0),\n            result = _alias.filter((a) => a && a.name === key);\n\n        if (result.length === 1) {\n            return result[0].id || -1;\n        }\n        if (result.length > 1) {\n            return result.map((r) => r.id || -1)[0];\n        }\n    }\n\n    return -1;\n}\n\nexport function getAliasById(alias, id) {\n    if (isArray(alias) && id) {\n        const result = isArray(alias) && id && alias.slice(0).filter((a) => a && a.id === id)[0];\n\n        if (isObject(result)) {\n            return result.name;\n        }\n    }\n\n    return null;\n}\n\nfunction getId(id, alias) {\n    if (!isNaN(Number(id))) {\n        return Number(id);\n    } else if (alias && isString(id)) {\n        return getIdByAlias(alias, id);\n    }\n\n    return -1;\n}\n\nexport function getRealIds(vc, id, alias) {\n    if (!vc || id === null || id === undefined) return -1;\n    const length = vc.children.length;\n\n    if (id === 'all') {\n        return getAllIds(vc);\n    }\n    if (!isArray(id)) {\n        id = getId(id, alias);\n\n        return id < 0 ? -1 : id;\n    }\n\n    return id.map((_id) => {\n        _id = getId(_id, alias);\n\n        return _id < 0 ? -1 : _id;\n    });\n}\n\nfunction getNode(panel, type) {\n    if (panel) {\n        type = type || CT.GRID_CENTER;\n\n        /*eslint-disable */\n        if (contain([CT.PANEL, CT.GRID_HEAD, CT.GRID_CENTER, CT.GRID_LEFT, CT.GRID_RIGHT, CT.GRID_L_C_R,\n        CT.PANEL_CONTAINER, CT.GRID_FOOT], type) < 0) {\n            return null;\n        }\n        /*eslint-enable */\n\n        return type === CT.PANEL ? panel : panel.queryByRole(type);\n    }\n\n    return null;\n}\n\nexport function getNodesByPanel(panel) {\n    if (panel) {\n        return {\n            panel,\n            head: getNode(panel, CT.GRID_HEAD),\n            left: getNode(panel, CT.GRID_LEFT),\n            right: getNode(panel, CT.GRID_RIGHT),\n            center: getNode(panel, CT.GRID_CENTER),\n            panelContainer: getNode(panel, CT.PANEL_CONTAINER),\n            lcr: getNode(panel, CT.GRID_L_C_R),\n            foot: getNode(panel, CT.GRID_FOOT),\n        };\n    }\n\n    return null;\n}\n\nexport function getRealNodesByPanel(panel, id, options) {\n    if (panel) {\n        const nodes = getNodesByPanel(panel);\n\n        if (isObject(nodes)) {\n            const { head, foot, left, right, center, lcr, panelContainer } = nodes;\n            const elements = {\n                panel: panel.realDom,\n                panelContainer: panelContainer && panelContainer.realDom,\n                lcr: lcr && lcr.realDom,\n                head: head && head.realDom,\n                foot: foot && foot.realDom,\n                left: left && left.realDom,\n                center: center && center.realDom,\n                right: right && right.realDom,\n                id: id || panel.getId(),\n                isExtend: panel.isExtend,\n                alias: getAliasById(options.alias, id),\n                size: {\n                    width: formatNum(panel.width, 5),\n                    height: formatNum(panel.height, 5),\n                },\n                position: {\n                    top: formatNum(panel.top, 5),\n                    left: formatNum(panel.left, 5),\n                    zIndex: panel.styles.zIndex,\n                },\n            };\n\n            return elements;\n        }\n    }\n\n    return null;\n}\n\nexport function getRealdomsById(vc, id, o) {\n    const realId = getId(id, o.alias),\n        panel = vc.getChild(realId);\n\n    return getRealNodesByPanel(panel, realId, o);\n}\n\nexport function getNodeById(vc, id, type) {\n    if (!vc || !id || id <= 0) return null;\n    const panel = vc.getChild(id);\n\n    if (panel) {\n        return getNode(panel, type || CT.GRID_CENTER);\n    }\n\n    return null;\n}\n\nexport function validateType(type) {\n    return !isString(type) ? 'panel' : (type || 'panel').toLowerCase();\n}\n\nexport function setHide(ids, vcontainer, o, showIds) {\n    if (!ids || !vcontainer) return;\n    const type = showIds ? o.hideType : (o.hideType || 'panel');\n\n    if (isNumber(ids)) {\n        ids = [ids];\n    }\n    if (isArray(ids)) {\n        ids.forEach((id) => {\n            const node = getNodeById(vcontainer, getRealIds(vcontainer, id, o.alias), type);\n\n            if (node) {\n                if (node.realDom) {\n                    css(node.realDom, {\n                        display: 'none',\n                    });\n                } else {\n                    node.setStyle({\n                        display: 'none',\n                    });\n                }\n            }\n        });\n    }\n}\n\nexport function createZoomContainer(c, options) {\n    if (!c || !options || hasClass(c, CT.ZOOMCONTAINER)) return null;\n    const z = options.zoom,\n        zoomContainer = new Vnode()\n            .setRole(CT.ZOOMCONTAINER),\n        zoomPane = new Vnode()\n            .setRole(CT.ZOOMPANE)\n            .addNode(zoomContainer)\n            .createElement();\n\n    c.appendChild(zoomPane);\n\n    if (z.enable && z.control) {\n        const zoomControl = new Vnode()\n            .addClassName(CT.EXT_PANE)\n            .setRole(CT.EXT_PANE)\n            .setWidth(34)\n            .setHeight(94)\n            .setHtml(`\n            <a class=\\'${CT.ZOOMIN}\\' href=\\'javascript:;\\' title=\\'Zoom in\\'>+</a>\n            <span class='${CT.ZOOMINFO}' title=\\'Current Scale\\'></span>\n            <a class=\\'${CT.ZOOMOUT}\\' href=\\'javascript:;\\' title=\\'Zoom out\\'>-</a>`)\n            .createElement(),\n            size = '10px';\n\n        switch (z.position) {\n            case 'leftTop':\n                css(zoomControl, { top: size, left: size });\n                break;\n            case 'leftBottom':\n                css(zoomControl, { bottom: size, left: size });\n                break;\n            case 'rightBottom':\n                css(zoomControl, { bottom: size, right: size });\n                break;\n            default:\n                css(zoomControl, { right: size, top: size });\n                break;\n        }\n\n        c.appendChild(zoomControl);\n    }\n\n    return zoomContainer.realDom;\n}\n\nexport function getComponent(vcontainer, id, classname) {\n    if (isNumber(id) && id > 0) {\n        const node = vcontainer.getChild(id);\n\n        if (node && isDOM(node.realDom)) {\n            return node.realDom.querySelector(`.${classname}`);\n        }\n    }\n\n    return null;\n}\n\nexport function isInPoPo(c) {\n    return c && c._popo_inner;\n}\n\nfunction veach(vcontainer, fn, ids, context) {\n    if (!vcontainer) return;\n    if (!ids || ids === 'all') {\n        ids = getAllIds(vcontainer);\n    }\n    if (isNumber(ids)) {\n        ids = [ids];\n    }\n    if (isArray(ids) && ids.length > 0) {\n        ids.forEach((id) => {\n            const panel = vcontainer.getChild(id);\n\n            if (panel) {\n                if (context) {\n                    fn = bind(fn, context);\n                }\n                if (fn(getNodesByPanel(panel)) === false) {\n                    return;\n                }\n            }\n        });\n    }\n}\n\nexport function updateHideIds(showIds, all) {\n    let ids = showIds || [];\n\n    if (isNumber(ids)) {\n        ids = [ids];\n    }\n    if (ids.length > 0) {\n        let done = false;\n\n        ids.forEach((id) => {\n            const index = contain(all, id);\n\n            if (index >= 0) {\n                all.splice(index, 1);\n                done = true;\n            }\n        });\n        if (done) {\n            return all;\n        }\n    }\n\n    return null;\n}\n\nexport function _each(vcontainer, options, fn, ids, context) {\n    if (!vcontainer || !options || !isFunction(fn)) return;\n    if (ids === 'all') {\n        ids = getAllIds(vcontainer);\n    }\n    if (isNumber(ids)) {\n        ids = [ids];\n    }\n\n    if (isArray(ids) && ids.length > 0) {\n        ids.forEach((id) => {\n            id = getId(id, options.alias);\n            if (id > 0) {\n                const panel = vcontainer.getChild(id);\n\n                if (panel && isDOM(panel.realDom)) {\n                    const elements = getRealNodesByPanel(panel, id, options);\n\n                    if (context) {\n                        fn = bind(fn, context);\n                    }\n                    if (fn(elements) === false) {\n                        return;\n                    }\n                }\n            }\n        });\n    }\n}\n\nexport function _full(vc, id, zIndex) {\n    if (id > 0 && vc) {\n        const node = vc.getChild(id);\n\n        if (node) {\n            node.oldSize = {\n                zIndex: node.styles.zIndex,\n                width: node.width,\n                height: node.height,\n                top: node.top,\n                left: node.left,\n            };\n            node.setWidth(vc.width)\n                .setHeight(vc.height)\n                .setTop(0)\n                .setLeft(0)\n                .setStyle({ zIndex })\n                .update();\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function _unFull(vcontainer, id) {\n    if (isNumber(id) && id > 0) {\n        const node = vcontainer.getChild(id);\n\n        if (node && node.oldSize && node.realDom) {\n            node.setStyle({\n                zIndex: node.oldSize.zIndex || 1,\n            });\n            node.width = node.oldSize.width;\n            node.height = node.oldSize.height;\n            node.top = node.oldSize.top;\n            node.left = node.oldSize.left;\n            node.update();\n            node.oldSize = null;\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function _removeStyle(node, option) {\n    if (!node || !option) return;\n\n    let _class = '',\n        _css = null;\n\n    if (isString(option)) {\n        _class = option;\n    }\n    if (isObject(option) && !isEmptyObject(option)) {\n        if (option.classname && isString(option.classname)) {\n            _class = option.classname;\n        }\n        if (isObject(option.css) && !isEmptyObject(option.css)) {\n            _css = cloneJsonObject(option.css);\n        }\n        if (!option.classname && !option.css) {\n            _css = cloneJsonObject(option);\n        }\n    }\n    if (_class) {\n        if (isDOM(node)) {\n            removeClass(node, _class);\n        } else {\n            node.removeClassName(_class);\n            if (node.realDom) {\n                removeClass(node.realDom, _class);\n            }\n        }\n    }\n    if (_css) {\n        for (const key in _css) {\n            _css[key] = '';\n        }\n        if (isDOM(node)) {\n            css(node, _css);\n        } else {\n            node.setStyle(_css);\n            if (node.realDom) {\n                css(node.realDom, _css);\n            }\n        }\n    }\n    if (!isDOM(node) && node.update) {\n        node.update();\n    }\n}\n\nexport function removeStyle(c, vc, o, style) {\n    if (isObject(style)) {\n        const { container, custom } = style,\n            df = style.default;\n\n        if (container) {\n            _removeStyle(c, container);\n        }\n        if (isObject(df)) {\n            vc.children.forEach((panel) => {\n                for (const key in df) {\n                    const target = getNodesByPanel(panel)[key];\n\n                    if (target) {\n                        _removeStyle(target, df[key]);\n                    }\n                }\n            });\n        }\n        (isArray(custom) ? custom : [custom]).forEach((com) => {\n            if (isObject(com) && com.panels) {\n                veach(vc, (elements) => {\n                    for (const key in com) {\n                        if (com[key] && elements[key]) {\n                            _removeStyle(elements[key], com[key]);\n                        }\n                    }\n                }, getRealIds(vc, com.panels, o.alias));\n            }\n        });\n\n        vc.update();\n    }\n}\n\nexport function _setStyle(node, option, isUpdate, overwrite) {\n    if (!node || !option) return;\n\n    let _class = '',\n        _css = null;\n\n    if (isString(option)) {\n        _class = option;\n    }\n    if (isObject(option) && !isEmptyObject(option)) {\n        if (option.classname && isString(option.classname)) {\n            _class = option.classname;\n        }\n        if (isObject(option.css) && !isEmptyObject(option.css)) {\n            _css = option.css;\n        }\n        if (!option.classname && !option.css) {\n            _css = option;\n        }\n    }\n    if (_class) {\n        if (isDOM(node)) {\n            if (isUpdate) {\n                if (overwrite) {\n                    setClass(node, _class);\n                } else {\n                    addClass(node, _class);\n                }\n            }\n        } else {\n            if (overwrite) {\n                node.setClassName(_class);\n            } else {\n                node.addClassName(_class);\n            }\n            if (isUpdate && node.realDom) {\n                if (overwrite) {\n                    setClass(node.realDom, _class);\n                } else {\n                    addClass(node.realDom, _class);\n                }\n            }\n        }\n    }\n    if (_css) {\n        if (isDOM(node)) {\n            if (isUpdate) {\n                css(node, _css);\n            }\n        } else {\n            node.setStyle(_css);\n            if (isUpdate && node.realDom) {\n                css(node.realDom, _css);\n            }\n        }\n    }\n    if (!isDOM(node) && node.update) {\n        node.update();\n    }\n}\n\nexport function _initStyle(c, vc, zoom, zoomParent, o, p, styleOption, update) {\n    if (!vc || !o) return;\n    const style = styleOption || {},\n        { custom, inner, zoomContainer, zoomPane, pane, container } = style,\n        df = style.default;\n\n    if (container && update) {\n        _setStyle(c, container, true);\n    }\n\n    if (inner) {\n        _setStyle(vc, inner);\n    }\n    if (zoomContainer) {\n        _setStyle(zoom, zoomContainer, true);\n    }\n    if (zoomPane) {\n        _setStyle(zoomParent, zoomPane, true);\n    }\n    if (pane) {\n        _setStyle(p, pane, true);\n    }\n    if (isObject(df)) {\n        vc.children.forEach((panel) => {\n            if (!panel.isWidget) {\n                for (const key in df) {\n                    _setStyle(getNodesByPanel(panel)[key], df[key], true);\n                }\n            }\n        });\n    }\n    if (custom) {\n        (isArray(custom) ? custom : [custom]).forEach((com) => {\n            if (isObject(com) && com.panels) {\n                veach(vc, (elements) => {\n                    for (const key in com) {\n                        if (com[key] && elements[key] && !(elements[key].isExtend)) {\n                            _setStyle(elements[key], com[key], true, true);\n                        }\n                    }\n                }, getRealIds(vc, com.panels, o.alias));\n            }\n        });\n    }\n}\n\nexport function updateStyle(c, vc, zoom, zoomParent, o, styleOption, isExtend) {\n    if (!vc || !o) return;\n    const style = styleOption || {},\n        { container, custom, inner, zoomContainer, zoomPane } = style,\n        df = style.default;\n\n    if (container) {\n        _setStyle(c, container, true);\n    }\n\n    if (inner) {\n        _setStyle(vc, inner, true);\n    }\n\n    if (zoomContainer) {\n        _setStyle(zoom, zoomContainer, true);\n    }\n\n    if (zoomPane) {\n        _setStyle(zoomParent, zoomPane, true);\n    }\n    if (isObject(df)) {\n        vc.children.forEach((panel) => {\n            for (const key in df) {\n                _setStyle(getNodesByPanel(panel)[key], df[key], true);\n            }\n        });\n    }\n    if (custom) {\n        (isArray(custom) ? custom : [custom]).forEach((com) => {\n            if (isObject(com) && com.panels) {\n                veach(vc, (elements) => {\n                    for (const key in com) {\n                        if (com[key] && elements[key]) {\n                            _setStyle(elements[key], com[key], true, false);\n                        }\n                    }\n                }, getRealIds(vc, com.panels, o.alias));\n            }\n        });\n    }\n}\n\nexport function removeGuidelines(container) {\n    if (isDOM(container)) {\n        const gd = container.querySelector(`.${CT.GUIDELINES}`);\n\n        if (isDOM(gd)) {\n            gd.parentNode.removeChild(gd);\n        }\n    }\n}\n\n/*eslint-disable */\nfunction getNewSize(old, percent, vsize, vvsize, totalSize) {\n    return old !== undefined ? (percent !== null ? percent * totalSize : vsize) : vvsize;\n}\n/*eslint-enable*/\n\nfunction setNodeLayout(vnode, vvnode, size, fullId, fullzIndex) {\n    if ((vvnode.width !== undefined || vvnode.width !== null) && !vnode.isExtend) {\n        const { _oldWidth, _oldHeight, _oldTop, _oldLeft,\n            width, height, top, left,\n            percentWidth, percentHeight, percentLeft, percentTop } = vnode;\n\n        vnode\n            .setHeight(getNewSize(_oldHeight, percentHeight, height, vvnode.height, size.height))\n            .setWidth(getNewSize(_oldWidth, percentWidth, width, vvnode.width, size.width))\n            .setTop(getNewSize(_oldTop, percentTop, top, vvnode.top, size.height))\n            .setLeft(getNewSize(_oldLeft, percentLeft, left, vvnode.left, size.width));\n    }\n\n    if (vvnode.oldSize) {\n        vnode.oldSize = vvnode.oldSize;\n        vnode.setStyle({\n            zIndex: vvnode.styles.zIndex || CT.PANEL_DEFAULT_ZINDEX,\n        });\n    }\n    if (fullId > 0 && vnode.getId() === fullId) {\n        vnode.setLeft(0).setTop(0).setStyle({\n            zIndex: fullzIndex,\n        });\n    }\n}\n\nfunction updateOldVc(vnode, vvnode, size, o, fullId, fullzIndex) {\n    setNodeLayout(vnode, vvnode, size, fullId, fullzIndex);\n    vnode.children.forEach((vn) => {\n        vvnode.children.forEach((vvn) => {\n            if (vn.getId() === vvn.getId() && vnode.getRole() !== CT.PANEL) {\n                setNodeLayout(vn, vvn, size, fullId, fullzIndex);\n            }\n        });\n    });\n}\n\nfunction _setOverflow(vc, ids, type) {\n    if (!vc || !ids || !type) return;\n    if (isNumber(ids)) {\n        ids = [ids];\n    }\n    if (isArray(ids)) {\n        ids.forEach((id) => {\n            const panel = getNodeById(vc, id, 'wrap');\n            let style = null;\n\n            if (panel) {\n                if (type === 'auto' || type === 'visible') {\n                    style = { overflow: type };\n                }\n                if (type === 'overflowX' || type === 'overflowY') {\n                    style[type] = 'auto';\n                }\n\n                panel.setStyle(style).update();\n            }\n        });\n    }\n}\n\nexport function setOverflows(vc, o) {\n    if (!vc || !o || !o.panelOverflow) return;\n    const overflow = o.panelOverflow;\n\n    if (overflow) {\n        for (const key in overflow) {\n            if (overflow[key] === 'all') {\n                overflow[key] = getAllIds(vc);\n            }\n            if (isNumber(overflow[key]) || isArray(overflow[key])) {\n                _setOverflow(vc, overflow[key], key);\n            }\n        }\n    }\n}\n\nexport function updateContainerSize(vc, o) {\n    const { left, right, bottom, top } = o.padding;\n\n    return {\n        width: vc.width + left + right,\n        height: vc.height + top + bottom,\n    };\n}\n\nexport function updateVCC(vc, c, sizes, o, fullId, zIndex) {\n    if (!vc || !isDOM(c) || !sizes || !o) return;\n\n    const vcc = createVc(),\n        panels = [],\n        ids = [];\n\n    initLayout(o, vcc);\n\n    updateLayout(vcc, c, sizes, o, panels, ids);\n\n    loadExtends(vcc, o, false);\n\n    if (fullId) {\n        _full(vcc, fullId, zIndex || 0);\n    }\n\n    updateOldVc(vc, vcc, updateContainerSize(vcc, o), o, fullId, zIndex);\n\n    updateExtends(vc, o);\n\n    vc.update();\n\n    if (o.dev.enable) {\n        loadDev(c, vc, o);\n    }\n\n    setLineheight(vc, o.lineHeight);\n}\n\nfunction _setNodeLineHeight(target) {\n    if (target && target.realDom) {\n        const { realDom } = target,\n            height = getPureStyle(realDom, 'height') || realDom.clientHeight,\n            pt = getPureStyle(realDom, 'padding-top'),\n            pb = getPureStyle(realDom, 'padding-bottom'),\n            bt = getPureStyle(realDom, 'border-top-width'),\n            bb = getPureStyle(realDom, 'border-bottom-width');\n\n        target.setStyle({ lineHeight: `${height - pt - pb - bt - bb}px` }).update();\n    }\n}\n\nexport function setLineheight(vc, option) {\n    if (!vc || !option) return;\n    const op = isObject(option) ? [option] : option;\n\n    if (isArray(op)) {\n        op.forEach((o) => {\n            let panels = o.panels;\n            const type = o.type || 'head';\n\n            if (isNumber(panels)) {\n                panels = [panels];\n            }\n            if (isString(panels) && panels === 'all') {\n                panels = getAllIds(vc);\n            }\n            if (isArray(panels)) {\n                veach(vc, (nodes) => {\n                    (isArray(type) ? type : [type]).forEach((t) => {\n                        if (isString(t) && nodes) {\n                            if (t === 'all') {\n                                ['head', 'center', 'right', 'foot', 'left'].forEach((_t) => {\n                                    _setNodeLineHeight(nodes[_t]);\n                                });\n                            } else {\n                                _setNodeLineHeight(nodes[t]);\n                            }\n                        }\n                    });\n                }, panels);\n            }\n        });\n    }\n}\n\nfunction insertTplDomToVc(target, vnode, type) {\n    if (isDOM(target) && attr(target, CT.TARGET) === type && vnode && vnode.realDom) {\n        vnode.realDom.appendChild(target);\n    }\n}\n\nexport function loadTemplate(c, vc, o) {\n    if (!isDOM(c) || !vc || !isDOM(vc.realDom) || !o) return;\n    const { env } = o;\n    eachChild(c, (node) => {\n        if (isDOM(node) && node.hasAttribute(CT.POPO)) {\n            const id = getRealIds(vc, node.getAttribute(CT.POPO), o.alias),\n                panel = getNodeById(vc, id, 'panel'),\n                title = node.getAttribute('title'),\n                cls = node.getAttribute('class');\n\n            if (panel && panel.realDom) {\n                const els = getNodesByPanel(panel);\n\n                addClass(panel.realDom, cls);\n\n                const children = node.childNodes;\n                for (let i = 0, len = children.length; i < len; i++) {\n                    const target = children[env === 'vue' ? 0 : i];\n                    const __t = attr(target, CT.TARGET);\n                    if (__t && els[__t]) {\n                        insertTplDomToVc(target, els[__t], __t);\n                    }\n                }\n\n                if (!query(node, `[${CT.TARGET}=head]`) && title && els.head\n                    && els.head.realDom && !els.head.realDom.hasChildNodes()) {\n                    els.head.realDom.innerHTML = title;\n                }\n            }\n        }\n    });\n}\n\nexport function restorePanelTemplate(panel, c, vc, o) {\n    if (!panel || !isDOM(panel.realDom) || !isDOM(c) || !vc || !o) return;\n    eachChild(c, (node) => {\n        if (isDOM(node) && node.hasAttribute(CT.POPO)) {\n            const id = getRealIds(vc, node.getAttribute(CT.POPO), o.alias);\n\n            if (panel.getId() === id) {\n                const nodes = getNodesByPanel(panel);\n\n                for (const type in nodes) {\n                    if (nodes[type] && nodes[type].realDom) {\n                        const target = nodes[type].realDom.firstChild;\n\n                        if (isDOM(target) && type === target.getAttribute(CT.TARGET)) {\n                            node.appendChild(target);\n                        }\n                    }\n                }\n\n                return false;\n            }\n        }\n\n        return true;\n    });\n}\n\nexport function restoreTemplate(c, vc, o) {\n    if (!isDOM(c) || !vc || !isDOM(vc.realDom) || !o) return;\n    eachChild(c, (node) => {\n        if (isDOM(node) && node.hasAttribute(CT.POPO)) {\n            const id = getRealIds(vc, node.getAttribute(CT.POPO), o.alias),\n                panel = getNodeById(vc, id, 'panel');\n\n            if (panel && panel.realDom) {\n                const nodes = getNodesByPanel(panel);\n\n                for (const type in nodes) {\n                    if (nodes[type] && nodes[type].realDom) {\n                        const target = nodes[type].realDom.firstChild;\n\n                        if (isDOM(target) && type === target.getAttribute(CT.TPL)) {\n                            target.removeAttribute(CT.TPL);\n                            addClass(target, type);\n                            node.appendChild(target);\n                        }\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport function getScrollPane(o, c, init) {\n    /*eslint-disable */\n    const target = o.zoom.enable ? c.parentNode.parentNode : c.parentNode;\n    /*eslint-enable */\n\n    if (init && isDOM(target)) {\n        target.scrollLeft = 0;\n        target.scrollTop = 0;\n    }\n\n    return target;\n}\n\nexport function focusOn(vc, c, o, id, offsetX, offsetY) {\n    if (!vc || !c || !o || !id < 0) return;\n\n    const panel = getNodeById(vc, getId(id, o.alias), 'panel');\n\n    if (panel) {\n        const pane = getScrollPane(o, c, true),\n            scale = o.zoom.enable ? o.zoom.scale : 1;\n\n        if (pane && isDOM(pane)) {\n            pane.scrollLeft = (panel.left + offsetX) * scale;\n            pane.scrollTop = (panel.top + offsetY) * scale;\n        }\n    }\n}\n\nexport function zoomUpdate(vc, c, scale) {\n    if (!vc || !c || !scale) return;\n    const rect = getRect(c.parentNode.parentNode),\n        width = (c._origionWidth || vc.width),\n        height = (c._origionHeight || vc.height);\n\n    let top = (rect.height - (height * scale)) / 2,\n        left = (rect.width - (width * scale)) / 2;\n\n    if (top < 0 || scale === 1) top = 0;\n    if (left < 0 || scale === 1) left = 0;\n\n    css(c.parentNode, {\n        paddingTop: `${top}px`,\n        paddingLeft: `${left}px`,\n    });\n}\n\nexport function togglePoPo(c, show) {\n    const display = show ? '' : 'none';\n\n    eachChild(c, (node) => {\n        if (isDOM(node) && node.getAttribute(CT.POPO)) {\n            css(node, { display });\n        }\n    });\n}","const NM = 'popo';\n\n/**\n * Enum for system constant\n * @enum\n * @readonly\n */\nexport default {\n\n    /**\n     * @const\n     * @type {Number}\n     * @default\n     */\n    MIN_LY_COUNT: 1,\n\n    /**\n     * Grids system column count\n     * @const\n     * @type {Number}\n     * @default\n     */\n    COLS: 24,\n\n    /**\n     * Grids system row count\n     * @const\n     * @type {Number}\n     * @default\n     */\n    ROWS: 12,\n\n    /**\n     * Panel default zIndex\n     * @const\n     * @type {Number}\n     * @default\n     */\n    PANEL_DEFAULT_ZINDEX: 1,\n\n    NAME: NM,\n\n    POPO: `data-${NM}`,\n\n    ROLE: `data-${NM}-role`,\n\n    TARGET: `data-${NM}-target`,\n\n    COMPONENT_ID_KEY: `data-${NM}-id`,\n\n    EXT_PANE: `${NM}-ext-pane`,\n\n    PANE: `pane`,\n\n    CONTAINER: `container`,\n\n    PANEL: `panel`,\n\n    PANEL_CONTAINER: `panel-container`,\n\n    WRAP: `wrap`,\n\n    GRID_L_C_R: 'lcr',\n\n    GRID_HEAD: `head`,\n\n    GRID_CENTER: `center`,\n\n    GRID_LEFT: `left`,\n\n    GRID_RIGHT: `right`,\n\n    GRID_FOOT: `foot`,\n\n    SINGLE_ROW: `${NM}-s-row`,\n\n    ROW: `${NM}-row`,\n\n    COL: `${NM}-col`,\n\n    INFO: `${NM}-dev-info`,\n\n    GUIDELINES: `${NM}-guideline`,\n\n    PANEL_GUIDELINES: `${NM}-panel-guideline`,\n\n    SPLITLINES: `${NM}-splitline`,\n\n    ZOOMPANE: `zoom-pane`,\n\n    ZOOMCONTAINER: `zoom-container`,\n\n    ATTRIBUTTION: `${NM}-attribution`,\n\n    ZOOMIN: `${NM}-ct-zoom-in`,\n\n    ZOOMOUT: `${NM}-ct-zoom-out`,\n\n    ZOOMINFO: `${NM}-ct-zoom-info`,\n\n    TPL: `data-${NM}-tpl`,\n\n    DRAW_ID_KEY: `${NM}-ts`,\n\n    LINE: 'l',\n\n    PATH: 'p',\n\n    CIRCLE: 'c',\n\n    FILTER: 'f',\n\n    MARKER: 'm',\n\n    LINER_GRADIENT: 'lg',\n\n    RADIAL_GRADIENT: 'rg',\n\n    BORDER: 'b',\n\n    EVENT: `_${NM}_event`,\n\n};\n","const ua = navigator.userAgent.toLowerCase(),\n    doc = document.documentElement,\n    width = window.innerWidth || doc.clientWidth || document.body.clientWidth,\n    height = window.innerHeight || doc.clientHeight || document.body.clientHeight,\n    ie = 'ActiveXObject' in window,\n    webkit = ua.indexOf('webkit') !== -1,\n    mobile = typeof orientation !== 'undefined' || ua.indexOf('mobile') !== -1;\n\nexport default {\n\n    ie,\n\n    width,\n\n    height,\n\n    aspectRatio: width / height,\n\n    webkit,\n\n    mobile,\n\n};\n","export default {\n\n    POPO_EXSIT: 'The target container has been initialized by popo.',\n\n    CONTAINER_ERR: 'The target container was not found',\n\n    LY_INVALID: 'Layout array is invalid.',\n\n    LY_FIXED_LESS: 'Fixed height and fixed width shall not be less than 1 at the same time.',\n\n};\n","import {\n    isNumber, isString, isDOM, isObject, contain, isEmptyObject, getObjectFromArray,\n    removeObjectFromArray, stamp, splitWords, mixin, formatNum, unique,\n} from '../../utils/util';\nimport { css, attr } from '../dom';\nimport CT from '../../constant/constant';\n\n/**\n * @class VNode\n * @ignore\n */\nexport default class VNode {\n\n    /**\n     * @constructor\n     * @param {String} nodeName node TagName\n     */\n    constructor(nodeName) {\n        this.nodeName = nodeName || 'div';\n        this.width = 0;\n        this.height = 0;\n        this.classNames = '';\n        this.children = [];\n        this.styles = {};\n        this.parentNode = null;\n        this.html = '';\n        this.role = '';\n        this.isExtend = false;\n        stamp(this);\n    }\n\n    /**\n     * Add class\n     * @param {String} name classname\n     * @return {VNode} current vnode instance\n     */\n    addClassName(name) {\n        if (isString(name)) {\n            if (this.classNames === '') {\n                this.classNames = name;\n\n                return this;\n            }\n            const cns = splitWords(this.classNames);\n\n            splitWords(name).forEach((n) => {\n                const inner = contain(cns, n);\n\n                if (inner < 0) {\n                    this.classNames += ` ${n}`;\n                }\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * remove class name\n     * @param {String} name classname\n     * @return {VNode} current vnode instance\n     */\n    removeClassName(name) {\n        if (isString(name)) {\n            const cns = splitWords(this.classNames),\n                inner = contain(cns, name);\n\n            if (inner >= 0) {\n                cns[inner] = '';\n                this.classNames = cns.join(' ');\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Clear node class\n     * @return {VNode} current vnode instance\n     */\n    clearClassName() {\n        this.classNames = '';\n\n        return this;\n    }\n\n    /**\n     * Clear current class and set new class\n     * @param {String} classname classname\n     * @return {VNode} current vnode instance\n     */\n    setClassName(classname) {\n        if (classname && isString(classname)) {\n            this.classNames = classname;\n        }\n\n        return this;\n    }\n\n    /**\n     * Get child\n     * @param {Number|String} id id\n     * @return {VNode} vnode\n     */\n    getChild(id) {\n        if (!isNumber(id)) {\n            id = Number(id);\n        }\n        if (!isNaN(id) && id > 0) {\n            return getObjectFromArray(this.children, CT.COMPONENT_ID_KEY, id);\n        }\n\n        return null;\n    }\n\n    /**\n     * Set node role\n     * @param {String} role node role.\n     * @return {VNode} vnode\n     */\n    setRole(role) {\n        this.role = role;\n\n        return this;\n    }\n\n    /**\n     * Get node role\n     * @return {String} role\n     */\n    getRole() {\n        return this.role;\n    }\n\n    /**\n     * Query child by role\n     * @param {String} role node role\n     * @return {VNode} node\n     */\n    queryByRole(role) {\n        let result = null;\n\n        function _query(vnode) {\n            if (vnode && vnode.children.length > 0) {\n                vnode.children.forEach((node) => {\n                    if (node.role === role) {\n                        result = node;\n\n                        return;\n                    }\n                    _query(node);\n                });\n            }\n\n            return result;\n        }\n\n        return _query(this);\n    }\n\n    /**\n     * Set node id\n     * @param {String} id id\n     * @return {VNode} current vnode instance\n     */\n    setId(id) {\n        this[CT.COMPONENT_ID_KEY] = id;\n\n        return this;\n    }\n\n    /**\n     * Get vnode id\n     * @return {Number} id\n     */\n    getId() {\n        return this[CT.COMPONENT_ID_KEY];\n    }\n\n    /**\n     * Set width\n     * @param {Number} width width\n     * @return {VNode} current vnode instance\n     */\n    setWidth(width) {\n        this.width = width;\n\n        return this;\n    }\n\n    /**\n     * Set Height\n     * @param {Number} height height\n     * @return {VNode} current vnode instance\n     */\n    setHeight(height) {\n        this.height = height;\n\n        return this;\n    }\n\n    /**\n     * Get node width\n     * @return {Number} width\n     */\n    getWidth() {\n        return this.width;\n    }\n\n    /**\n     * Get node height\n     * @return {Number} height\n     */\n    getHeight() {\n        return this.height;\n    }\n\n    /**\n     * Set margin\n     * @param {Number} margin margin\n     * @return {VNode} current vnode instance\n     */\n    setMargin(margin) {\n        this.margin = margin;\n\n        return this;\n    }\n\n    /**\n     * Get margin\n     * @return {Number} margin\n     */\n    getMargin() {\n        return this.margin;\n    }\n\n    /**\n     * Get px size\n     * @ignore\n     * @param {Number|String} size size\n     * @return {String} size\n     */\n    _getSize(size) {\n        return isNumber(size) ? `${formatNum(size, 5)}px` : size;\n    }\n\n    /**\n     * Set styles\n     * @param {Object} styles styles\n     * @return {VNode} current vnode instance\n     */\n    setStyle(styles) {\n        mixin(this.styles, styles);\n\n        return this;\n    }\n\n    /**\n     * Set top\n     * @param {Number} top top\n     * @return {VNode} current vnode instance\n     */\n    setTop(top) {\n        this.top = top;\n\n        return this;\n    }\n\n    /**\n     * Get top\n     * @return {Number} top\n     */\n    getTop() {\n        return this.top;\n    }\n\n    /**\n     * Set left\n     * @param {Number} left left\n     * @return {VNode} current vnode instance\n     */\n    setLeft(left) {\n        this.left = left;\n\n        return this;\n    }\n\n    /**\n     * Get left\n     * @return {Number} left\n     */\n    getLeft() {\n        return this.left;\n    }\n\n    /**\n     * Insert to parent vnode\n     * @param {VNode} parent parent vnode\n     * @return {VNode} current vnode instance\n     */\n    insertTo(parent) {\n        if (parent && parent.children) {\n            parent.children.push(this);\n            this.parentNode = parent;\n        }\n\n        return this;\n    }\n\n    /**\n     * Add child vnode\n     * @param {VNode} son child vnode\n     * @return {VNode} current vnode instance\n     */\n    addNode(son) {\n        if (son) {\n            this.children.push(son);\n            son.parentNode = this;\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove child\n     * @param {VNode} node child vnode\n     */\n    removeNode(node) {\n        if (isObject(node)) {\n            if (node && node._popo_id && this.children.length > 0) {\n                removeObjectFromArray(this.children, '_popo_id', node._popo_id);\n            }\n        }\n    }\n\n    /**\n     * Remove All Child\n     */\n    clear() {\n        if (this.children && this.children.length > 0) {\n            this.children.forEach((node) => {\n                node.remove();\n            });\n            this.children = [];\n        }\n    }\n\n    /**\n     * Remove instance\n     */\n    remove() {\n        const that = this;\n\n        if (this.parentNode) {\n            this.parentNode.removeNode(that);\n        }\n        if (isDOM(this.realDom)) {\n            this.realDom.parentNode.removeChild(this.realDom);\n            this.realDom = null;\n        }\n        this.width = 0;\n        this.height = 0;\n        this.top = 0;\n        this.left = 0;\n        this.classNames = '';\n        this.styles = {};\n        if (this.children && this.children.length > 0) {\n            this.children.forEach((node) => {\n                node.remove();\n            });\n            this.children = [];\n        }\n        this.parentNode = null;\n    }\n\n    /**\n     * Render current vnode\n     * @param {HTMLElement} node node\n     * @return {HTMLElement} node\n     */\n    render(node) {\n        if (!node) return node;\n\n        const realDomClass = attr(node, 'class'),\n            cls = realDomClass ? unique(splitWords(realDomClass)\n                .concat(splitWords(this.classNames))).join(' ') : this.classNames;\n\n        if (cls) {\n            attr(node, 'class', cls);\n        }\n\n        const w = this.width,\n            h = this.height;\n\n        // if (this.styles.width === undefined || this.styles.width === null) {\n        this.setStyle({\n            width: w ? this._getSize(w) : '100%',\n            height: h ? this._getSize(h) : '100%',\n        });\n        // }\n\n        // if (this.styles.height === undefined || this.styles.height === null) {\n        // this.setStyle({\n        //     height: h ? this._getSize(h) : '100%',\n        // });\n        // }\n\n        if (this.top !== undefined) {\n            this.setStyle({ top: this._getSize(this.top) });\n        }\n\n        if (this.left !== undefined) {\n            this.setStyle({ left: this._getSize(this.left) });\n        }\n\n        if (this.margin !== undefined) {\n            this.setStyle({ margin: this._getSize(this.margin) });\n        }\n\n        if (!isEmptyObject(this.styles)) {\n            css(node, this.styles);\n        }\n\n        if (this[CT.COMPONENT_ID_KEY]) {\n            attr(node, CT.COMPONENT_ID_KEY, this[CT.COMPONENT_ID_KEY]);\n        }\n\n        if (this.role) {\n            attr(node, 'data-popo-role', this.role);\n        }\n\n        if (this.id) {\n            node.id = this.id;\n        }\n\n        if (this.html) {\n            node.innerHTML = this.html;\n        }\n\n        return node;\n    }\n\n    /**\n     * Set node innerHTML\n     * @param {String} html html\n     * @return {VNode} current vnode instance\n     */\n    setHtml(html) {\n        if (html && isString(html)) {\n            this.html = html;\n        }\n\n        return this;\n    }\n\n    /**\n     * Update vnode\n     */\n    update() {\n        const realDom = this.realDom;\n\n        if (realDom) {\n            this.render(realDom);\n            this.children.forEach((vnode) => { vnode.update(); });\n        }\n    }\n\n    /**\n     * Create Html element\n     * @return {HTMLElement} node\n     */\n    createElement() {\n        const node = this.realDom || document.createElement(this.nodeName);\n\n        /*eslint-disable */\n        node._popo_id = this._popo_id;\n        /*eslint-enable */\n\n        this.render(node);\n        this.children.forEach((c) => {\n            node.appendChild(c.createElement());\n        });\n\n        this.realDom = node;\n        node.vnode = this;\n\n        return node;\n    }\n\n    /**\n     * Get last child\n     * @return {Vnode} vnode\n     */\n    getLastChild() {\n        const c = this.children,\n            len = c.length;\n\n        return len > 0 ? c[len - 1] : c[0];\n    }\n\n    /**\n     * Get new Id\n     * @return {Number} id\n     */\n    getNewId() {\n        const lastChild = this.getLastChild();\n\n        return lastChild ? lastChild.getId() + 1 : 1;\n    }\n}\n","import CT from '../../constant/constant';\n\nexport default {\n\n    // Layout container\n    // It can be either DOM or ID and classname\n    container: '',\n\n    // Define grid rows number. Sets the number of rows in the layout. default value is 12.\n    rows: CT.ROWS,\n\n    // Sets the number of columns in the layout. default value is 24.\n    cols: CT.COLS,\n\n    // Define grid cols number. The default will be stretched over the width of the entire container.\n    // px\n    width: 0,\n\n    // The default will be full of the entire container height.\n    // px\n    height: 0,\n\n    // Gutter\n    gutter: 10,\n\n    // The default is the panel that is spread across the container.\n    // []\n    // {row:4, col:6, height:0, width:0}\n    layout: null,\n\n    // Layout start type\n    layoutStartType: 'row',\n\n    // font scale, only setting for panel size.\n    fontScale: 1,\n\n    // html root font-size\n    rem: 1,\n\n    // Full screen display of panel\n    fullId: 0,\n\n    // Full screen panel zIndex\n    fullZIndex: 0,\n\n    // scroll, when zoom is enable, scroll will be disabled.\n    scroll: {\n        x: false,\n        y: false,\n    },\n\n    // drag enable or disable.\n    drag: false,\n\n    // Panel setting\n    panel: {\n        enable: false,\n        default: {\n            headHeight: 0,\n            footHeight: 0,\n            leftWidth: 0,\n            rightWidth: 0,\n            gutter: 0,\n            zIndex: CT.PANEL_DEFAULT_ZINDEX,\n        },\n        custom: [],\n    },\n\n    overflowVisible: false,\n\n    // Setting Panel overflow\n    panelOverflow: {\n        visible: '',\n        overflowX: '',\n        overflowY: '',\n    },\n\n    /**\n     * dev options\n     * @type {Object}\n     * @define\n     */\n    dev: {\n        /**\n         * @param {Boolean} enable enbale or disable dev. @default false\n         */\n        enable: false,\n        // Panel info setting\n        panel: {\n            show: true,\n            id: true,\n            size: false,\n            position: false,\n            background: '',\n            fontSize: 14,\n            fontColor: '#333',\n        },\n        // layout guideline setting\n        guideline: {\n            show: false,\n            identifier: true,\n            lineSize: 1,\n            color: 'rgba(0,0,0,.25)',\n            zIndex: 0,\n            fontSize: 14,\n            fontColor: '#333',\n        },\n        // panel guidlines setting\n        panelGuideline: {\n            show: false,\n            ids: 'all',\n            lineSize: 0.5,\n            size: 15,\n            zIndex: 0,\n            color: '#888',\n        },\n        // Screen splitline setting\n        splitline: {\n            show: false,\n            lineSize: 1,\n            width: 100,\n            height: 100,\n            color: '#000',\n            zIndex: 0,\n            identifier: true,\n            fontColor: '#333333',\n            fontSize: 12,\n        },\n        // only show one or some pannels.\n        showIds: 0,\n    },\n\n    // Zoom setting\n    zoom: {\n        enable: false,\n        control: true,\n        auto: true, \n        scale: 0,\n        ratio: 0.1,\n        min: 0.1,\n        max: 1,\n        position: 'rightTop', // leftTop, leftBottom, rightBottom, rightTop\n        wheelZoom: true,\n    },\n\n    /**\n     * Focus option\n     * @type {Object}\n     * @define fouces\n     * @param {Number|String} id focus id @default 0\n     * @param {Number} offsetX offsetX @default 0\n     * @param {Number} offsetY offsetY @default 0\n     */\n    focus: {\n        id: 0,\n        offsetX: 0,\n        offsetY: 0,\n    },\n\n    // set auto line-height. lineheight will to be eqaul element height\n    // [{ids: 1, type: 'center, head'}, {ids:[2,3], type:'head'}]\n    lineHeight: null,\n\n    /**\n     * Hide ids\n     * @type {Array|Number|String}\n     * @default\n     */\n    hideIds: null,\n\n    /**\n     * hide type. include panel, wrap, center, head, foot, left, right\n     * @type {String}\n     * @default\n     */\n    hideType: 'panel',\n\n    /**\n     * trace window resize\n     * @type {Boolean}\n     * @default\n     */\n    trackResize: true,\n\n    /**\n     * update interval time.ms\n     * @type {Number}\n     * @default\n     */\n    updateInterval: 200,\n\n    /**\n     * render delay time. ms\n     * @type {Number}\n     * @default\n     */\n    renderDelay: 0,\n\n    /**\n     * theme setting.\n     * @type {Object}\n     * @default\n     */\n    style: null,\n\n    /**\n     * Extend Panels setting\n     * @type {Array}\n     * @default\n     */\n    extends: [],\n\n    /**\n     * onload function\n     * @type {Function}\n     * @default\n     */\n    onload: null,\n\n    /**\n     * update function\n     * @type {Function}\n     * @default\n     */\n    update: null,\n\n    /**\n     * Alias\n     * @type {Object}\n     * @default\n     */\n    alias: null,\n\n    env: 'js', // js, vue\n};\n","import CT from '../../constant/constant';\n\nconst prefix = `${CT.NAME}-`;\n\n/**\n * Theme option\n * @typedef {Object} theme\n * @prop {Object} container container theme\n * @prop {Object} default panel default theme\n * @prop {Object|Array} custom custom panel theme\n */\nexport default {\n    container: prefix + CT.WRAP,\n    inner: prefix + CT.CONTAINER,\n    zoomContainer: prefix + CT.ZOOMCONTAINER,\n    zoomPane: prefix + CT.ZOOMPANE,\n    pane: prefix + CT.PANE,\n    default: {\n        panel: prefix + CT.PANEL,\n        panelContainer: prefix + CT.PANEL_CONTAINER,\n        head: prefix + CT.GRID_HEAD,\n        foot: prefix + CT.GRID_FOOT,\n        center: prefix + CT.GRID_CENTER,\n        right: prefix + CT.GRID_RIGHT,\n        left: prefix + CT.GRID_LEFT,\n        lcr: prefix + CT.GRID_L_C_R,\n    },\n    custom: null,\n};","import {\n    isString, isObject, isEmptyObject, removeObjectFromArray,\n    stamp, reverseCamelcase, getPercentage, isArray,\n} from '../../utils/util';\nimport CT from '../../constant/constant';\n\nconst keys = ['baseFrequency', 'stdDeviation', 'viewBox', 'numOctaves',\n    'tableValues', 'markerWidth', 'markerHeight', 'refX', 'refY',\n    'patternUnits', 'patternTransform'].join(' ');\n\n/**\n * SVG\n * @class\n * @ignore\n */\nexport default class SVG {\n\n    /**\n     * @constructor\n     * @param {String} nodeName node tagNae\n     * @param {SVG} parent parent node\n     */\n    constructor(nodeName, parent) {\n        this.nodeName = nodeName || 'svg';\n        this.attrs = {};\n        this.children = [];\n        this.parentNode = null;\n        this.realNode = null;\n        this._stamp();\n        this.id = this._popo_id;\n        this.styles = {};\n        this.style = '';\n        this.html = '';\n        if (parent) {\n            this.insertTo(parent);\n        }\n    }\n\n    /**\n     * Stamp svg node\n     * @ignore\n     */\n    _stamp() {\n        let preffix = '';\n\n        switch (this.nodeName) {\n            case 'filter':\n                preffix = CT.FILTER;\n                break;\n            case 'linearGradient':\n                preffix = CT.LINER_GRADIENT;\n                break;\n            case 'radialGradient':\n                preffix = CT.RADIAL_GRADIENT;\n                break;\n            case 'marker':\n                preffix = CT.MARKER;\n                break;\n            default:\n                break;\n        }\n        stamp(this, preffix);\n    }\n\n    /**\n     * Set node id\n     * @ignore\n     * @return {SVG} current svg instance\n     */\n    _setId() {\n        this.attr({\n            id: this.getId(),\n        });\n\n        return this;\n    }\n\n    /**\n     * Get node id\n     * @return {String} id\n     */\n    getId() {\n        return this.attr('id') || `${CT.DRAW_ID_KEY}-${this._popo_id}`;\n    }\n\n    /**\n     * Set style\n     * @param {Object} styles styles\n     * @return {SVG} current svg instance\n     */\n    setStyle(styles) {\n        for (const key in styles) {\n            this.styles[key] = styles[key];\n        }\n\n        return this;\n    }\n\n    /**\n     * Add attibutes\n     * @param {Object|String} name name\n     * @param {Any} value value\n     * @return {SVG} current svg instance\n     */\n    attr(name, value) {\n        if (!name) return this;\n        if (isString(name)) {\n            if (value !== undefined && value !== null) {\n                if (keys.indexOf(name) < 0) {\n                    name = reverseCamelcase(name);\n                }\n                this.attrs[name] = value;\n\n                return this;\n            }\n\n            return this.attrs[name];\n        }\n\n        if (isObject(name)) {\n            for (const key in name) {\n                if (isObject(name[key]) && name[key] instanceof SVG) {\n                    let _key = key;\n\n                    if (keys.indexOf(key) < 0) {\n                        _key = reverseCamelcase(key);\n                    }\n                    this.attrs[_key] = `url(#${name[key].getId()})`;\n                } else if (keys.indexOf(key) < 0) {\n                    const _key = reverseCamelcase(key);\n\n                    if (_key === 'id') {\n                        this.attrs[_key] = `${CT.DRAW_ID_KEY}-${name[key]}`;\n                    } else {\n                        this.attrs[_key] = name[key];\n                    }\n                } else {\n                    this.attrs[key] = name[key];\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set SVG Filter\n     * @ignore\n     * @param {Object} filters filters\n     * @param {Object} node node\n     * @return {SVG} current svg instance\n     */\n    _filter(filters, node) {\n        node = node || this;\n        for (let i = 0, len = filters.length; i < len; i++) {\n            const f = filters[i];\n\n            for (const key in f) {\n                const filter = new SVG(key, node),\n                    pureKeys = {};\n\n                if (isArray(f[key])) {\n                    this._filter(f[key], filter);\n                } else {\n                    for (const _key in f[key]) {\n                        if (isObject(f[key][_key])) {\n                            new SVG(_key, filter).attr(f[key][_key]);\n                        } else {\n                            pureKeys[_key] = f[key][_key];\n                        }\n                    }\n                    filter.attr(pureKeys);\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set gradient\n     * @ignore\n     * @param {Array} stops  [offset, stopColor, stopOpacity]\n     * @return {SVG} current svg instance\n     */\n    _stops(stops) {\n        for (let i = 0; i < stops.length; i++) {\n            new SVG('stop', this).attr({\n                offset: `${getPercentage(stops[i][0])}%`,\n                stopColor: stops[i][1] || '#333',\n                stopOpacity: stops[i][2] || 1,\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Insert to parent\n     * @param {Object} parent parentNode\n     * @return {SVG} current svg instance\n     */\n    insertTo(parent) {\n        if (parent && parent.children) {\n            parent.children.push(this);\n            this.parentNode = parent;\n        }\n\n        return this;\n    }\n\n    /**\n     * Create svg\n     * @param {String} nodeName svg tag name\n     * @param {Object} attrs attributies\n     * @return {SVG} current svg instance\n     */\n    create(nodeName, attrs) {\n        return new SVG(nodeName, this).attr(attrs);\n    }\n\n    /**\n     * Add child\n     * @param {Object} son svg instance\n     * @return {SVG} current svg instance\n     */\n    add(son) {\n        if (son) {\n            this.children.push(son);\n            son.parentNode = this;\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove svg node\n     * @param {Object} node svg node instance\n     * @return {SVG} current svg instance\n     */\n    remove(node) {\n        if (node && node._popo_id && this.children.length > 0) {\n            return removeObjectFromArray(this.children, '_popo_id', node._popo_id);\n        }\n\n        return this;\n    }\n\n    /**\n     * Render node\n     * @ignore\n     * @param {SVG} node svg node\n     */\n    render(node) {\n        if (!isEmptyObject(this.styles)) {\n            let style = '';\n\n            for (const key in this.styles) {\n                if (isObject(this.styles[key]) && this.styles[key] instanceof SVG) {\n                    style += `${key}:url(#${this.styles[key].getId()});`;\n                } else {\n                    style += `${key}:${this.styles[key]};`;\n                }\n            }\n            if (style) {\n                this.attr({ style });\n            }\n        }\n\n        const attrs = this.attrs;\n\n        for (const key in attrs) {\n            if (key.indexOf('xlink') >= 0) {\n                node.setAttributeNS('http://www.w3.org/1999/xlink', key, attrs[key]);\n            } else {\n                node.setAttribute(key, attrs[key]);\n            }\n        }\n\n        if (this.nodeName === 'style' || this.nodeName === 'text') {\n            node.innerHTML = this.html;\n        }\n    }\n\n    /**\n     * Set svg inner html\n     * @param {String} html html content\n     * @return {SVG} current svg instance\n     */\n    setHtml(html) {\n        if (html) {\n            this.html = html;\n        }\n\n        return this;\n    }\n\n    /**\n     * Create svg element\n     * @param {Boolean} hidden hidden\n     * @return {HTMLObject} html object\n     */\n    createElement(hidden) {\n        if (hidden) {\n            this.attr({ width: '0%', height: '0%' });\n        }\n\n        const node = document.createElementNS('http://www.w3.org/2000/svg', this.nodeName);\n\n        this.render(node);\n\n        if (this.children && this.children.length > 0) {\n            this.children.forEach((c) => {\n                if (c.nodeName === 'defs' && c.children.length === 0) {\n                    return;\n                }\n                if (c.nodeName === 'style' && c.html === '') {\n                    return;\n                }\n                node.appendChild(c.createElement());\n            });\n        }\n\n        this.realNode = node;\n\n        if (hidden) {\n            node.style.width = '0px';\n            node.style.height = '0px';\n            node.style.zIndex = -9999;\n            node.style.position = 'fixed';\n            node.style.top = '-100%';\n            node.style.left = '-100%';\n        }\n\n        return node;\n    }\n}\n","import { isArray, getPercentage } from '../../utils/util';\nimport CT from '../../constant/constant';\nimport VSVG from './vsvg_base';\n\n/**\n * SVG\n * @class\n * @ignore\n */\nexport default class SVG extends VSVG {\n\n    /**\n     * @constructor\n     * @param {String} nodeName node tagName\n     * @param {SVG} parent parent svg\n     * @param {Object} options options\n     */\n    constructor(nodeName, parent, options) {\n        super(nodeName, parent, options);\n        this.attr({\n            width: '100%',\n            height: '100%',\n        });\n        this.globalStyle = new VSVG('style', this);\n        this.defs = new VSVG('defs', this);\n        this._setId();\n    }\n\n    /**\n     * Get custom defines\n     * @param {string|Number} id defined id\n     * @return {String} format defined object\n     */\n    def(id) {\n        return this.defs._getDefById(id) || '';\n    }\n\n    /**\n     * Get Custom defined item\n     * @ignore\n     * @param {String} id id\n     * @return {String} defined object\n     */\n    _getDefById(id) {\n        for (let i = 0, len = this.children.length; i < len; i++) {\n            const childId = this.children[i].getId();\n\n            if (childId) {\n                if (childId === id || childId === (`${CT.DRAW_ID_KEY}-${id}`)) {\n                    return `url(#${childId})`;\n                }\n            }\n        }\n\n        return '';\n    }\n\n    /**\n     * Add global style\n     * @param {String} style style content\n     * @return {SVG} current svg instance\n     */\n    addGlobalStyle(style) {\n        this.globalStyle.html += style;\n\n        return this;\n    }\n\n    /**\n     * Add radial gradient\n     * @param {Number} cx circle x center position\n     * @param {Number} cy circle y center position\n     * @param {Number} r radius\n     * @param {Array} stops  stops\n     * @return {SVG} new gradient svg\n     */\n    addRG(cx, cy, r, stops) {\n        stops = stops || [\n            [0, '#333', 1],\n            [1, '#555', 1],\n        ];\n\n        return new VSVG('radialGradient', this.defs)._setId().attr({ cx, cy, r })._stops(stops);\n    }\n\n    /**\n     * Add linear gradient\n     * @param {*} x1 start x position\n     * @param {*} y1 start y position\n     * @param {*} x2 end x position\n     * @param {*} y2 end y position\n     * @param {*} stops  stops array\n     * @return {SVG} new gradient svg node\n     */\n    addLG(x1, y1, x2, y2, stops) {\n        x1 = `${getPercentage(x1)}%`;\n        y1 = `${getPercentage(y1)}%`;\n        x2 = `${getPercentage(x2, 1)}%`;\n        y2 = `${getPercentage(y2)}%`;\n        stops = stops || [\n            [0, '#333', 1],\n            [1, '#555', 1],\n        ];\n\n        return new VSVG('linearGradient', this.defs)._setId().attr({ x1, x2, y1, y2 })._stops(stops);\n    }\n\n    /**\n     * Add Group\n     * @param {Array} units units\n     */\n    g(units) {\n        const g = new VSVG('g', this)._setId();\n\n        if (isArray(units)) {\n            /*eslint-disable */\n            units.forEach((u) => {\n                new VSVG('path', g);\n            })\n            /*eslint-enable */\n        }\n    }\n\n    /**\n     * Add filters\n     * @param {Object} filters filter\n     * @return {SVG} new filter svg\n     */\n    addFilter(filters) {\n        return new VSVG('filter', this.defs)._setId()._filter(filters);\n    }\n\n    /**\n     * Add marker\n     * @param {Object} markers markers\n     * @param {String} color color\n     * @return {SVG} new marker svg\n     */\n    addMarker(markers, color) {\n        const marker = new VSVG('marker', this.defs)._setId().attr(markers);\n\n        new VSVG('circle', marker).attr({\n            cx: 5,\n            cy: 5,\n            r: 4,\n            fill: 'none',\n            stroke: color || '#ffffff',\n            strokeWidth: 1,\n        });\n\n        return marker;\n    }\n\n    /**\n     * Add pattern\n     * @param {Object} patterns patterns\n     * @return {SVG} new pattern svg\n     */\n    addPattern(patterns) {\n        const pattern = new VSVG('pattern', this.defs)._setId().attr(patterns),\n            { width, height } = pattern.attrs;\n\n        new VSVG('line', pattern).attr({\n            x1: width / 2,\n            y1: 0,\n            x2: width / 2,\n            y2: height,\n            strokeWidth: width / 2,\n            stroke: 'rgba(0,0,0,.2)',\n        });\n\n        return pattern;\n    }\n\n    /**\n     * Create SVG\n     * @param {String} nodeName node tagName\n     * @param {Object} attrs attributes\n     * @return {SVG} new svg node\n     */\n    create(nodeName, attrs) {\n        return new VSVG(nodeName, this).attr(attrs);\n    }\n\n}\n","import CT from '../../constant/constant';\n\n/**\n * Screen extends panel option and addPanel option\n * @typedef {Object} panel\n * @property {Object} size panel size\n * @property {Object} position panel position\n * @property {String} id panel dom id\n * @property {Number} zIndex panel zIndex\n * @prop {Object} layout panel layout.\n */\nexport default {\n    size: {\n        width: 0,\n        height: 0,\n        responsive: true,\n    },\n    position: {\n        left: 0,\n        top: 0,\n        responsive: true,\n    },\n    id: '',\n    className: '',\n    zIndex: CT.PANEL_DEFAULT_ZINDEX,\n    layout: null,\n    isWidget: false,\n};\n\n//    layout: {\n//     headHeight: 0,\n//     footHeight: 0,\n//     leftWidth: 0,\n//     rightWidth: 0,\n//     gutter: 0,\n// },","import { isDOM, isObject } from '../../utils/util';\nimport * as DomEvent from '../../dom/dom_event';\nimport { css, getPureStyle, addClass, removeClass } from '../../dom/dom';\nimport { getScrollPane } from '../core/popo';\nimport CT from '../../constant/constant';\n\nexport default {\n\n    /**\n     * Start drag\n     * @ignore\n     * @param {Object} e mouse event param\n     */\n    _onDragStart(e) {\n        DomEvent.stop(e);\n        const pane = this._scrollPane;\n\n        if (isDOM(pane)) {\n            const { clientX, clientY } = e,\n                { scrollLeft, scrollTop } = pane;\n\n            this._startDrag = {\n                x: clientX,\n                y: clientY,\n                width: getPureStyle(pane, 'width'),\n                height: getPureStyle(pane, 'height'),\n                left: scrollLeft,\n                top: scrollTop,\n            };\n            // css(pane, { cursor: 'move' });   \n            addClass(pane, `${CT.NAME}-grabbing`);       \n            DomEvent.on(pane, 'mousemove', this._onDragging, this);\n            DomEvent.on(pane, 'mouseup', this._onDragend, this);\n        }\n    },\n\n    /**\n     * Dragging\n     * @ignore\n     * @param {Object} e mouse event param\n     */\n    /*eslint-disable */\n    _onDragging(e) {\n        // DomEvent.stop(e);\n        const pane = this._scrollPane,\n            dr = this._startDrag;\n\n        if (isDOM(pane) && isObject(dr)) {\n            pane.scrollLeft = (dr.left || 0) - e.clientX + dr.x;\n            pane.scrollTop = (dr.top || 0) - e.clientY + dr.y;\n        }\n\n    },\n\n    /**\n     * End drag\n     * @ignore\n     * @param {Object} e mouse event param\n     */\n    _onDragend(e) {\n        // DomEvent.stop(e);\n        DomEvent.off(this._scrollPane, 'mousemove', this._onDragging, this);\n        removeClass(this._scrollPane, `${CT.NAME}-grabbing`); \n    },\n    /*eslint-enable */\n\n    /**\n     * Disable mouse drag\n     */\n    disableDrag() {\n        const pane = this._scrollPane;\n\n        if (isDOM(pane)) {\n            DomEvent.off(pane, 'mousedown', this._onDragStart, this);\n            DomEvent.off(pane, 'mousemove', this._onDragging, this);\n            DomEvent.off(pane, 'mouseup', this._onDragend, this);\n            this._startDrag = null;\n            removeClass(pane, `${CT.NAME}-grab`); \n        }\n    },\n\n    /**\n     * Enable drag on container and start drag\n     */\n    enableDrag() {\n        const o = this.options;\n\n        if (o.drag && this._pane) {\n            const dragPane = getScrollPane(o, this._pane);\n\n            if (isDOM(dragPane)) {\n                this._scrollPane = dragPane;\n                // this.disableDrag();\n                addClass(dragPane, `${CT.NAME}-grab`);  \n                DomEvent.on(dragPane, 'mousedown', this._onDragStart, this);\n            }\n        }\n    },\n\n};\n","import * as DomEvent from '../../dom/dom_event';\nimport { bind, throttle } from '../../utils/util';\nimport { zoomUpdate } from '../core/popo';\n\nexport default {\n\n    /**\n     * Add container resize event on window resize\n     * @ignore.\n     */\n    _resize() {\n        const o = this.options,\n            c = this._pane,\n            vc = this.vc,\n            ui = o.updateInterval;\n\n        if (!this._onResize && o.trackResize) {\n            const interval = o.renderDelay > 0 ? Math.max(ui, o.renderDelay) : ui;\n            // const interval = ui;\n\n            this._onResize = throttle((_fn, _context) => {\n                if (!o.trackResize) return;\n                if (o.zoom.enable) {\n                    zoomUpdate(vc, c, this.scale);\n                } else {\n                    this.update();\n                    if (typeof o.update === 'function') {\n                        o.update(this);\n                    }\n                    if (typeof _fn === 'function') {\n                        bind(_fn, _context)(this);\n                    }\n                }\n            }, interval, this);\n            DomEvent.on(window, 'resize', this._onResize, this);\n        }\n    },\n\n    /**\n     * Remove resize event listener\n     * @ignore\n     */\n    _removeResize() {\n        if (this._onResize) {\n            DomEvent.off(window, 'resize', this._onResize, this);\n            this._onResize = null;\n        }\n    },\n};\n","import * as DomEvent from '../../dom/dom_event';\nimport { getScrollPane } from '../core/popo';\nimport CT from '../../constant/constant';\n\nexport default {\n    /**\n     * wheel zoom handle\n     * @ignore\n     */\n    _performZoom(center) {\n        const ratio = this.options.zoom.ratio;\n\n        this.zoom(this.scale + (this._wheelScroll.delta > 0 ? ratio : -ratio), center);\n    },\n\n    /**\n     * Wheel scrolling\n     * @ignore\n     * @param {Object} e wheel event param\n     */\n    _onWheelScroll(e) {\n        DomEvent.stop(e);\n        const delta = DomEvent.getWheelDelta(e),\n            time = this._wheelScroll.startTime;\n\n        /*eslint-disable */\n        this._wheelScroll.delta = delta;\n        if (!time) {\n            this._wheelScroll.startTime = +new Date();\n        }\n        const left = Math.max(CT.DEBOUNCE - (+new Date() - time), 0);\n        /*eslint-enable */\n\n        clearTimeout(this._wheelScroll.timer);\n\n        this._wheelScroll.timer = setTimeout(() => {\n            this._performZoom({x: e.offsetX, y: e.offsetY});\n        }, left);\n    },\n\n    enableScrollWheel() {\n        this.disableScrollWheel();\n\n        if (!this._scrollPane) {\n            this._scrollPane = getScrollPane(this.options, this._pane);\n        }\n        this._wheelScroll = {\n            delta: 0,\n            startTime: 0,\n            timer: 0,\n        };\n        DomEvent.on(this._scrollPane, 'mousewheel', this._onWheelScroll, this);\n    },\n\n    disableScrollWheel() {\n        if (this._scrollPane) {\n            DomEvent.off(this._scrollPane, 'mousewheel', this._onWheelScroll, this);\n        }\n    },\n};\n","import {\n    isNumber, isArray, isDOM, isObject, contain, legalNumber, get, merge, formatMargin,\n    mixins, formatNum, isPercentage, translatePercentage, isEmptyObject, formatNumber, translateNumberToPercentage\n} from '../utils/util';\nimport {\n    css, getStyle, isHidden, query,\n    removeByRole, getTargetDataId, TRANSFORM, getRect, getPureStyle,\n} from '../dom/dom';\nimport { initSize, updateLayout, initLayoutSet, initLayout } from './core/layout';\nimport { addPanels, addLayoutToPanel } from './core/panel';\nimport CT from '../constant/constant';\nimport ERROR_MSG from '../constant/error';\nimport defaultOptions from './options/popo';\nimport defaultStyle from './options/style';\nimport {\n    createPane,\n    createVc,\n    stampInner,\n    isInPoPo,\n    setHide,\n    getNodeById,\n    updateHideIds,\n    _each,\n    _full,\n    _unFull,\n    _setStyle,\n    _initStyle,\n    removeStyle,\n    vcToDom,\n    updateVCC,\n    loadTemplate,\n    restoreTemplate,\n    restorePanelTemplate,\n    setLineheight,\n    setOverflows,\n    loadExtends,\n    addExtend,\n    getRealIds,\n    focusOn,\n    getRealdomsById,\n    createZoomContainer,\n    getAllIds,\n    togglePoPo,\n    getAliasById,\n    updateContainerSize,\n} from './core/popo';\n\nimport { loadDev } from './core/dev';\n\nimport dragHandle from './handle/drag';\nimport resize from './handle/resize';\nimport wheelzoom from './handle/wheelzoom';\nimport * as DomEvent from '../dom/dom_event';\n\n/**\n * PoPoInstance\n * @class\n */\nexport default class PoPoInstance {\n\n    /**\n     * @constructor\n     * @param {Object} options options\n     */\n    constructor(options) {\n        const o = this.options = merge(defaultOptions, options),\n            c = this.container = o.container ? get(o.container) : null;\n\n        this._initOptions();\n\n        this._fullId = o.fullId;\n\n        this._fullZIndex = o.fullZIndex || 0;\n\n        this._hideIds = o.hideIds || [];\n\n        this._showIds = o.dev.showIds || [];\n\n        this.style = merge(defaultStyle, o.style || {});\n\n        this._sizes = initSize(o.rows, o.cols);\n\n        this._vc = createVc();\n\n        if (options.uuid) {\n            this.uuid = options.uuid;\n        }\n\n        if (initLayoutSet(o)) {\n            initLayout(o, this._vc);\n            if (isDOM(c)) {\n                this._initContainer();\n            }\n        }\n    }\n\n    /**\n     * Initialization options\n     * @ignore\n     */\n    _initOptions() {\n        const o = this.options,\n            scale = legalNumber(o.fontScale, 0.1);\n\n        o.padding = formatMargin(o.padding, scale);\n\n        if (isObject(o.panel.custom)) {\n            o.panel.custom = [o.panel.custom];\n        }\n        if (isArray(o.panel.custom)) {\n            o.panel.custom = o.panel.custom.map((panel) => merge({\n                headHeight: 0,\n                footHeight: 0,\n                leftWidth: 0,\n                rightWidth: 0,\n                gutter: 0,\n                zIndex: CT.PANEL_DEFAULT_ZINDEX,\n            }, panel));\n        }\n\n        if (isObject(o.widgets)) {\n            o.widgets.isWidget = true;\n        }\n        if (isArray(o.widgets)) {\n            o.widgets.forEach((w) => {\n                w.isWidget = true;\n            });\n        }\n\n        const el = document.documentElement;\n\n        if (css(el, 'fontSize') === '16px' && o.rem > 1) {\n            const rem = formatNumber(o.rem);\n\n            css(el, {\n                fontSize: isNumber(rem) ? translateNumberToPercentage(rem) : o.rem,\n            });\n        }\n    }\n\n    /**\n     * Initialization container\n     * @ignore\n     */\n    _initContainer() {\n        const vc = this._vc,\n            c = this.container,\n            o = this.options,\n            sizes = this._sizes;\n\n        if (vc && c && o && sizes) {\n            // Mark container if it is in another popo instance.\n            stampInner(c);\n\n            this._oldContainerStyle = {\n                display: getStyle(c, 'display'),\n            };\n\n            // Set container position when zoom on.\n            if (getStyle(c, 'position') === 'static' && o.zoom.enable) {\n                // save origin container style state\n                this._oldContainerStyle.position = 'static';\n                css(c, { position: 'relative' });\n            }\n\n            // Hide data-popo elements in container.\n            togglePoPo(c, false);\n\n            // Add custom style to container\n            const { style } = this;\n\n            if (style) {\n                _setStyle(c, style.container, true);\n            }\n\n            // Nest PoPo resize update interval.\n            if (isInPoPo(c)) {\n                o.updateInterval += 50;\n            }\n\n            // Create Zoom Container and Pane\n            const zoomContainer = this._zoomContainer = createZoomContainer(c, o),\n                scroll = o.scroll,\n                _style = {},\n                p = this._pane = createPane(o);\n\n            // If zoom mode on, drag option auto enable.\n            if (o.zoom.enable) { o.drag = true; }\n\n            // Set zoom container and zoom pane overflow and scroll.\n            if (o.zoom.enable || o.overflowVisible) {\n                _style.overflow = 'visible';\n            } else if (scroll.x && scroll.y) {\n                _style.overflow = 'auto';\n            } else if (scroll.x && !scroll.y) {\n                _style.overflowX = 'auto';\n                _style.overflowY = 'hidden';\n            } else if (!scroll.x && scroll.y) {\n                _style.overflowY = 'auto';\n                _style.overflowX = 'hidden';\n            }\n            css(zoomContainer, _style);\n            css(zoomContainer.parentNode, {\n                overflow: o.overflowVisible ? 'visible' : 'hidden',\n            });\n\n            // Sign Nest PoPo\n            // stampInner(p);\n\n            zoomContainer.appendChild(p);\n\n            // Update layout\n            updateLayout(vc, p, sizes, o, this._vpanels = []);\n\n            // Add Panel Layout\n            if (o.panel && o.panel.enable) {\n                addPanels(vc, o);\n            }\n\n            // Add extends panel\n            loadExtends(vc, o.extends, o, true);\n\n            // Add widget pannel\n            loadExtends(vc, o.widgets, o, true);\n\n            // Set Panel Overflow style.\n            setOverflows(vc, o);\n\n            // Full the select full panel\n            if (this._fullId) {\n                _full(vc, this._getId(this._fullId), this._fullZIndex);\n            }\n\n            css(c, { display: 'none' });\n\n            // Update style\n            _initStyle(c, vc, zoomContainer, zoomContainer.parentNode, o, p, this.style);\n\n            this._render();\n        }\n    }\n\n    /**\n     * Prepare render\n     * @ignore\n     */\n    _render() {\n        const c = this._pane,\n            o = this.options;\n\n        if (c && o) {\n            let delay = o.renderDelay;\n\n            if (delay > 0 && o.updateInterval > 0) {\n                delay = Math.max(delay, o.updateInterval);\n            }\n            if (delay > 0) {\n                setTimeout(() => {\n                    this._onRender();\n                }, delay || 0);\n            } else {\n                this._onRender();\n            }\n        }\n    }\n\n    /**\n     * Rendering\n     * @ignore\n     */\n    _onRender() {\n        const vc = this._vc,\n            c = this.container,\n            pane = this._pane,\n            o = this.options;\n\n        if (c && vc && o) {\n            const ids = this._showIds;\n\n            if (ids) {\n                this._hideIds = updateHideIds(ids, this.getIds()) || this._hideIds;\n            }\n            setHide(this._hideIds, vc, o, ids && ids.length > 0);\n\n            pane.appendChild(vcToDom(vc));\n\n            if (o.dev.enable) {\n                loadDev(pane, vc, o);\n            }\n\n            loadTemplate(c, vc, o);\n\n            this._resize();\n\n            css(c, {\n                display: this._oldContainerStyle.display,\n            });\n\n            this._updateSize();\n\n            if (o.zoom.enable) {\n                const scale = legalNumber(o.zoom.auto ? Math.min(c.clientHeight / this.height, c.clientWidth / this.width) : o.zoom.scale, CT.MIN_ZOOM, CT.MAX_ZOOM);\n\n                this._initZoomEvent();\n                this.zoom(scale);\n                if (o.zoom.wheelZoom) {\n                    this.enableScrollWheel();\n                }\n            }\n\n            if (o.drag) {\n                this.enableDrag();\n            }\n\n            if (o.focus.id) {\n                const { id, offsetX, offsetY } = o.focus;\n\n                this.focus(id, offsetX, offsetY);\n            }\n\n            setLineheight(vc, o.lineHeight);\n\n            if (o.onload && typeof o.onload === 'function') {\n                o.onload(this);\n            }\n        }\n    }\n\n    /**\n     * Initialization zoom event.\n     * @ignore\n     */\n    _initZoomEvent() {\n        const o = this.options,\n            c = this.container,\n            zoom = o.zoom;\n\n        if (zoom.enable && zoom.control) {\n            const zoomin = query(c, `.${CT.ZOOMIN}`),\n                zoomout = query(c, `.${CT.ZOOMOUT}`),\n                ratio = zoom.ratio;\n\n            this._zoomInfoPane = query(c, `.${CT.ZOOMINFO}`);\n\n            if (isDOM(zoomin) && isDOM(zoomout)) {\n                DomEvent.on(zoomin, 'click', () => {\n                    this.zoom(this.scale + ratio);\n                }, this);\n\n                DomEvent.on(zoomout, 'click', () => {\n                    this.zoom(this.scale - ratio);\n                }, this);\n            }\n        }\n    }\n\n    /**\n     * Get component real id.\n     * @param {String|Number} id panel id or alias.\n     * @return {Array} component ids\n     */\n    _getId(id) {\n        return isNumber(id) ? id : getRealIds(this._vc, id, this.options.alias);\n    }\n\n    /**\n     * Get vnode by id and type.\n     * @ignore\n     * @param {String|Number} id panel id or alias\n     * @param {String} type component type:panel, panelContainer, lcr, center,left, right, head, foot @default panel\n     * @return {VNode} vnode\n     */\n    _getNode(id, type) {\n        return getNodeById(this._vc, this._getId(id), type || CT.PANEL);\n    }\n\n    /**\n     * Get Option\n     * @return {Object} option\n     */\n    getOption() {\n        return this.options;\n    }\n\n    /**\n     * Get Panel count\n     * @return {Number} panel count\n     */\n    getPanelCount() {\n        return this.getIds().length;\n    }\n\n    /**\n     * Get all panel id.\n     * @return {Array} ids array\n     */\n    getIds() {\n        return getAllIds(this._vc);\n    }\n\n    /**\n     * @Get component alias\n     * @return {Array} alias\n     */\n    getAliasName() {\n        const alias = this.options.alias;\n\n        if (alias && isArray(alias)) {\n            return alias.map((a) => a.name);\n        }\n\n        return [];\n    }\n\n    /**\n     * Get component alias\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {Array|String} component alias\n     */\n    getAlias(target) {\n        const alias = this.options.alias;\n\n        if (target === undefined) {\n            return alias;\n        }\n        const result = (isArray(target) ? target : [target]).map((t) => getAliasById(alias, getTargetDataId(t)));\n\n        return result.length === 1 ? result[0] : result;\n    }\n\n    /**\n     * Get screen container\n     * @return {HTMLElement} app container\n     */\n    getContainer() {\n        return this.container;\n    }\n\n    /**\n     * Zoom screen\n     * @param {Number} scale scale\n     * @return {PoPoInstance} current popo instance\n     */\n    zoom(scale) {\n        const c = this._pane,\n            vc = this._vc,\n            o = this.options,\n            preview = this._zoomContainer,\n            width = this.$width(),\n            height = this.$height(),\n            style = {};\n\n        if (!o.zoom.enable || !isNumber(scale) || this.scale === scale || !vc || !c || !o) return this;\n\n        this.scale = scale = legalNumber(scale, o.zoom.min, o.zoom.max);\n        if (isDOM(this._zoomInfoPane)) {\n            this._zoomInfoPane.innerHTML = formatNum(scale, 1);\n        }\n\n        style[TRANSFORM] = `scale(${scale})`;\n        css(c, style);\n\n        /*eslint-disable */\n        const rect = getRect(preview.parentNode);\n        /*eslint-enable */\n\n        let top = (rect.height - (height * scale)) / 2,\n            left = (rect.width - (width * scale)) / 2;\n\n        if (top < 0 || scale === 1) top = 0;\n        if (left < 0 || scale === 1) left = 0;\n\n        css(preview, {\n            width: `${width * scale}px`,\n            height: `${height * scale}px`,\n            paddingTop: `${top}px`,\n            paddingLeft: `${left}px`,\n        });\n\n        return this;\n    }\n\n    /**\n     * Focus On Panel\n     * @param {Number | String} id panel id or alias\n     * @param {Number} offsetX offsetX\n     * @param {Number} offsetY offsetY\n     * @return {PoPoInstance} current popo instance\n     */\n    focus(id, offsetX, offsetY) {\n        focusOn(this._vc, this._pane, this.options, id, offsetX || 0, offsetY || 0);\n\n        return this;\n    }\n\n    /**\n     * Get elements\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {Object} elements, include panel, panelContainer, lcr, center,left, right, head, foot\n     */\n    get(target) {\n        if (!target) return null;\n\n        const result = (!isArray(target) ? [target] : target).map((t) =>\n            getRealdomsById(this._vc, getTargetDataId(t), this.options));\n\n        return result.length === 1 ? result[0] : result;\n    }\n\n    /**\n     * Get all elements\n     * @return {Array} all elements.\n     */\n    getAll() {\n        return this.get(this.getIds());\n    }\n\n    /**\n     * Get component\n     * @ignore\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @param {String} type component type: panel, panelContainer, lcr, center,head, left, right, foot\n     * @return {HTMLElement} component container\n     */\n    _getXComponent(target, type) {\n        const result = this.get(target);\n\n        return isArray(result) ? result.map((r) => r && r[type]) : result && result[type];\n    }\n\n    /**\n     * get panel container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} wrap container\n     */\n    panel(target) {\n        return this._getXComponent(target, 'panel');\n    }\n\n    /**\n     * get wrap container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} wrap container\n     */\n    wrap(target) {\n        return this._getXComponent(target, 'wrap');\n    }\n\n    /**\n     * get center container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} center container\n     */\n    center(target) {\n        return this._getXComponent(target, 'center');\n    }\n\n    /**\n     * get head container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} head container\n     */\n    head(target) {\n        return this._getXComponent(target, 'head');\n    }\n\n    /**\n     * get left container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} left container\n     */\n    left(target) {\n        return this._getXComponent(target, 'left');\n    }\n\n    /**\n     * get right container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} right container\n     */\n    right(target) {\n        return this._getXComponent(target, 'right');\n    }\n\n    /**\n     * get foot container\n     * @param {String|Number|HTMLElement|Array} target panel id , map key, panel dom and their by array.\n     * @return {HTMLElement} foot container\n     */\n    foot(target) {\n        return this._getXComponent(target, 'foot');\n    }\n\n    /**\n     * Clear Panel\n     * @param {String|Number|HTMLElement|Array} target panel id or alias, or panel dom.\n     * @param {Boolean} clearTpl if true will delete template content\n     * @return {PoPoInstance} current popo instance\n     */\n    clearPanel(target, clearTpl) {\n        if (target) {\n            (!isArray(target) ? [target] : target).forEach((t) => {\n                const node = this._getNode(getTargetDataId(t));\n\n                if (node) {\n                    if (!clearTpl) {\n                        restorePanelTemplate(node, this.container, this._vc, this.options);\n                    }\n                    node.clear();\n                    node.update();\n                }\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Clear all panels.\n     * @param {Boolean} clearTpl if true will delete template content\n     * @return {PoPoInstance} current popo instance\n     */\n    clearAllPanel(clearTpl) {\n        return this.clearPanel(this._vpanels, clearTpl);\n    }\n\n    /**\n     * Set Panel Layout\n     * @param {Object} option panel layout options\n     */\n    _setPanel({ panels, headHeight = 0, footHeight = 0, leftWidth = 0, rightWidth = 0, gutter = 0 }) {\n        const o = this.options.panel;\n\n        if (!panels) return;\n        if (!isArray(panels)) { panels = [panels]; }\n        if (!o.custom) {\n            o.custom = [];\n        }\n        if (isObject(o.custom)) {\n            o.custom = [o.custom];\n        }\n        if (isArray(o.custom)) {\n            this.clearPanel(panels);\n            const nodes = panels.map((id) => this._getNode(getTargetDataId(id)));\n\n            o.custom.forEach((c, i) => {\n                if (c.panels === panels) {\n                    o.custom.splice(i, 1);\n\n                    return;\n                }\n                if (!isArray(c.panels)) {\n                    c.panels = [c.panels];\n                }\n\n                let exsit = false;\n\n                c.panels.forEach((cid, index) => {\n                    const rcid = this._getId(cid);\n\n                    panels.forEach((id) => {\n                        if (rcid === id) {\n                            c.panels.splice(index, 1);\n                            exsit = true;\n\n                            return;\n                        }\n                    });\n                    if (exsit) {\n                        return;\n                    }\n                });\n            });\n\n            o.custom = o.custom.filter((c) => c.panels.length > 0);\n\n            const panelOption = {\n                panels,\n                headHeight,\n                footHeight,\n                leftWidth,\n                rightWidth,\n                gutter,\n            };\n\n            o.custom.push(panelOption);\n\n            nodes.forEach((node) => {\n                addLayoutToPanel(node, panelOption, this.options.fontScale);\n                node.createElement();\n            });\n        }\n    }\n\n    /**\n     * Set Panels Layout\n     * @param {Object|Array<Object>} options panel layout options array\n     * @return {PoPoInstance} current popo instance\n     */\n    setPanelLayout(options) {\n        if (options) {\n            (isArray(options) ? options : [options]).forEach((option) => this._setPanel(option));\n            this.update();\n        }\n\n        return this;\n    }\n\n    /**\n     * Set panel position and zIndex\n     * @param {String|Number|HTMLElement} panel panel id or alias, or panel dom.\n     * @param {Number} left left\n     * @param {Number} top left\n     * @param {Number} zIndex zIndex\n     * @return {PoPoInstance} current popo instance\n     */\n    _updatePanel({ panels, left, top, width, height, zIndex }) {\n        (isArray(panels) ? panels : [panels]).forEach((panel) => {\n            const node = this._getNode(getTargetDataId(panel));\n\n            if (node) {\n                if (left) {\n                    const pl = node.percentLeft = isPercentage(left) ? translatePercentage(left) : null;\n\n                    if (pl !== null) left = pl;\n                    if (isNumber(left)) {\n                        if (node._oldLeft === undefined) {\n                            node._oldLeft = node.getLeft();\n                        }\n                        node.setLeft(pl !== null ? left * this.width : left);\n                    }\n                }\n                if (top) {\n                    const pt = node.percentTop = isPercentage(top) ? translatePercentage(top) : null;\n\n                    if (pt !== null) top = pt;\n                    if (isNumber(top)) {\n                        if (node._oldTop === undefined) {\n                            node._oldTop = node.getTop();\n                        }\n                        node.setTop(pt !== null ? top * this.height : top);\n                    }\n                }\n                if (isNumber(zIndex)) {\n                    if (node._oldZIndex === undefined) {\n                        node._oldZIndex = node.styles.zIndex;\n                    }\n                    node.setStyle({ zIndex });\n                }\n                if (width !== undefined && width !== null) {\n                    width = width || node.width;\n                    const pw = node.percentWidth = isPercentage(width) ? translatePercentage(width) : null;\n\n                    if (pw !== null) width = pw;\n                    if (isNumber(width)) {\n                        if (node._oldWidth === undefined) {\n                            node._oldWidth = node.getWidth();\n                        }\n                        node.setWidth(pw !== null ? width * this.width : width);\n                    }\n                }\n                if (height !== undefined && height !== null) {\n                    height = height || node.height;\n\n                    const ph = node.percentHeight = isPercentage(height) ? translatePercentage(height) : null;\n\n                    if (ph !== null) height = ph;\n                    if (isNumber(height)) {\n                        if (node._oldHeight === undefined) {\n                            node._oldHeight = node.getHeight();\n                        }\n                        node.setHeight(ph !== null ? height * this.height : height);\n                    }\n                }\n\n                if (node._oldWidth !== undefined || node._oldHeight !== undefined\n                    || node._classChange || node._styleChange) {\n                    setLineheight(this._vc, this.options.lineHeight);\n                }\n\n                node.update();\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Restore option\n     * @ignore\n     * @param {Object} option {panels, size, position, zIndex}\n     */\n    _restorePanel({ panels, size = true, position = true, zIndex = true }) {\n        (isArray(panels) ? panels : [panels]).forEach((panel) => {\n            const node = this._getNode(getTargetDataId(panel));\n\n            if (node) {\n                if (position) {\n                    if (node._oldLeft !== undefined) {\n                        node.setLeft(node._oldLeft);\n                    }\n                    if (node._oldTop !== undefined) {\n                        node.setTop(node._oldTop);\n                    }\n                }\n                if (size) {\n                    if (node._oldWidth !== undefined) {\n                        node.setWidth(node._oldWidth);\n                    }\n                    if (node._oldHeight !== undefined) {\n                        node.setHeight(node._oldHeight);\n                    }\n                }\n                if (zIndex) {\n                    if (node._oldZIndex !== undefined) {\n                        node.setStyle({\n                            zIndex: node._oldZIndex,\n                        });\n                    }\n                }\n                node.update();\n            }\n        });\n    }\n\n    /**\n     * Restore Panel State\n     * @param {Object|Array<Object>} options restore option\n     * @return {PoPoInstance} current popo instance\n     */\n    restore(options) {\n        if (options === undefined) {\n            this._restorePanel({\n                panels: this.getIds(),\n                size: true,\n                position: true,\n                zIndex: true,\n            });\n        } else {\n            (isArray(options) ? options : [options]).forEach((option) => {\n                if (option.panels) {\n                    this._restorePanel(option);\n                }\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Get panel top, only for panel container.\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\n     * @return {Number} top\n     */\n    $top(target) {\n        const node = this._getNode(getTargetDataId(target));\n\n        return node ? node.getTop() : 0;\n    }\n\n    /**\n     * Get panel left, only for panel container.\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\n     * @return {Number} left\n     */\n    $left(target) {\n\n        const node = this._getNode(getTargetDataId(target));\n\n        return node ? node.getLeft() : 0;\n    }\n\n    /**\n     * Get component element width\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\n     * @param {String} type element type: panel, panelContainer, lcr, center,head, foot, left, right\n     * @return {Number} width\n     */\n    $width(target, type) {\n        if (arguments.length === 0) {\n            return this.width;\n        }\n        let dom = target;\n\n        if (!isDOM(target)) {\n            const node = this._getNode(getTargetDataId(target), type);\n\n            dom = node && node.realDom;\n        }\n\n        return isDOM(dom) ? getPureStyle(dom, 'width') : -1;\n    }\n\n    /**\n     * Get component element height\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\n     * @param {String} type element type: panel, panelContainer, lcr, center,head, foot, left, right\n     * @return {Number} height\n     */\n    $height(target, type) {\n        if (arguments.length === 0) {\n            return this.height;\n        }\n        let dom = target;\n\n        if (!isDOM(target)) {\n            const node = this._getNode(getTargetDataId(target), type);\n\n            dom = node && node.realDom;\n        }\n\n        return isDOM(dom) ? getPureStyle(dom, 'height') : -1;\n    }\n\n    /**\n     * show screen or panel\n     * @param {String|Number|HTMLElement|Array|null} target component id, map key or panel dom,\n     * if it's null that will be the screen container.\n     * @return {PoPoInstance} current popo instance\n     */\n    show(target) {\n        const c = this.container;\n\n        if (!target && c && isHidden(c)) {\n            css(c, { display: 'block' });\n        } else {\n            (isArray(target) ? target : [target]).forEach((t) => {\n                const id = this._getId(getTargetDataId(t)),\n                    node = this.panel(id);\n\n                if (isDOM(node) && isHidden(node)) {\n                    const index = contain(this._hideIds, id);\n\n                    if (index >= 0) {\n                        this._hideIds.splice(index, 1);\n                    }\n                    css(node, { display: 'block' });\n                }\n\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * show screen or panel\n     * @param {String|Number|HTMLElement|Array|null} target component id, map key or panel dom,\n     * if it's null that will be the screen container.\n     * @return {PoPoInstance} current popo instance\n     */\n    hide(target) {\n        const c = this.container;\n\n        if (!target && c && !isHidden(c)) {\n            css(c, { display: 'none' });\n        } else {\n            const ids = [];\n\n            (isArray(target) ? target : [target]).forEach((t) => {\n                const id = this._getId(getTargetDataId(t));\n\n                ids.push(id);\n                if (contain(this._hideIds, id) < 0) {\n                    this._hideIds.push(id);\n                }\n            });\n            setHide(ids, this._vc, this.options);\n        }\n\n        return this;\n    }\n\n    /**\n     * Execute methods for each component elements.\n     * @param {Function} fn fn\n     * @param {Array<String|Number|HTMLElement>} targets panels\n     * @param {Object} context context\n     * @return {PoPoInstance} current popo instance\n     */\n    each(fn, targets, context) {\n        const _targets = targets ? (isArray(targets) ? targets : targets).map((t) => getTargetDataId(t)) : this.getIds();\n\n        _each(this._vc, this.options, fn, _targets, context);\n\n        return this;\n    }\n\n    /**\n     * remvoe screen or component\n     * @param {String|Number|null} target panel id or alias, if it's null that will be the screen container.\n     * @param {Boolean} clearTpl if true will delete template content\n     * @return {PoPoInstance} current popo instance\n     */\n    remove(target, clearTpl) {\n        if (arguments.length === 0) {\n            this._remove();\n        } else {\n            (isArray(target) ? target : [target]).forEach((t) => {\n                const node = this._getNode(getTargetDataId(t));\n\n                if (node && node.remove) {\n                    if (!clearTpl) {\n                        restorePanelTemplate(node, this.container, this._vc, this.options);\n                    }\n                    node.remove();\n                }\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Add Panel width Options\n     * @param {Object} options panel options\n     * @return {PoPoInstance} current PoPoInstance instance\n     */\n    addPanel(options) {\n        const o = this.options;\n        const panel = addExtend(this._vc, o.padding, options, o.fontScale, true);\n\n        if (this._vc.realDom && panel) {\n            this._vc.realDom.appendChild(panel.createElement());\n        }\n\n        return this.get(panel.getId());\n    }\n\n    /**\n     * Remove screen\n     * @ignore\n     */\n    _remove() {\n        const p = this._pane,\n            old = this._oldContainerStyle,\n            c = this.container,\n            vc = this._vc,\n            o = this.options;\n\n        restoreTemplate(c, vc, o);\n        this.removeStyle();\n        this.disableDrag();\n        this._removeResize();\n        this._sizes = null;\n        this._fullId = 0;\n        this._fullZIndex = 0;\n        this._showIds = null;\n        this._hideIds = null;\n        this.style = null;\n        this._vc.remove();\n\n        if (isDOM(p) && p.parentNode) {\n            p.parentNode.removeChild(p);\n        }\n\n        removeByRole(CT.ZOOMPANE, c);\n        removeByRole(CT.EXT_PANE, c);\n        this._pane = null;\n        this._vc = null;\n        this._vpanels = null;\n        this._scrollPane = null;\n        this.options = null;\n\n        if (old && old.position) {\n            css(c, { position: old.position });\n        }\n\n        this.container = null;\n\n        this._oldContainerStyle = null;\n\n        this._oldBodyScroll = null;\n\n        /*eslint-disable */\n        this._popo_id = 0;\n        /*eslint-enable */\n\n        this._zoomContainer = null;\n\n        this._zoomInfoPane = null;\n\n        this.width = 0;\n\n        this.height = 0;\n    }\n\n    /**\n     * Full panel component\n     * @param {String|Number|HTMLElement} target panel id or alias, or panel dom.\n     * @param {Number} zIndex css zIndex\n     * @return {PoPoInstance} current popo instance\n     */\n    full(target, zIndex) {\n        if (target) {\n            const id = this._getId(getTargetDataId(target));\n\n            if (isNumber(id) && id > 0) {\n                if (this._fullId > 0) {\n                    this.unFull();\n                }\n                this._fullId = id;\n                this._fullZIndex = zIndex || 0;\n                this.update();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Unfull the full target panel\n     * @return {PoPoInstance} current popo instance\n     */\n    unFull() {\n        if (this._fullId > 0 && _unFull(this._vc, this._getId(this._fullId))) {\n            this._fullId = 0;\n            this._fullZIndex = 0;\n            this.update();\n        }\n\n        return this;\n    }\n\n    /**\n     * Update popo size.\n     */\n    _updateSize() {\n        const size = updateContainerSize(this._vc, this.options);\n\n        if (size) {\n            this.width = size.width;\n            this.height = size.height;\n        }\n    }\n\n    /**\n     * Update popo or panel\n     * @param {Array|Object} options update options.\n     * @return {PoPoInstance} current popo instance\n     */\n    update(options) {\n        if (options === undefined) {\n            updateVCC(this._vc, this._pane, this._sizes, this.options, this._getId(this._fullId), this._fullZIndex || 0);\n            this._updateSize();\n        } else {\n            (isArray(options) ? options : [options]).forEach((t) => {\n                if (isObject(t)) {\n                    this._updatePanel(t);\n                }\n            });\n            this.update();\n        }\n\n        return this;\n    }\n\n    /**\n     * Set Body scroll\n     * @return {PoPoInstance} current popo instance\n     */\n    setBodyScroll() {\n        const body = document.body,\n            zc = this._zoomContainer;\n\n        if (zc && zc.parentNode) {\n            this._oldBodyScroll = {\n                body: body.style.overflow,\n                zc: zc.style.overflow,\n                zcParent: zc.parentNode.style.overflow,\n            };\n\n            css(document.body, {\n                overflowY: 'auto',\n            });\n            css(this._zoomContainer.parentNode, {\n                overflow: 'visible',\n            });\n            css(this._zoomContainer, {\n                overflow: '',\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Reset Body Scroll\n     * @return {PoPoInstance} current popo instance\n     */\n    resetBodyScroll() {\n        const old = this._oldBodyScroll;\n\n        if (old) {\n            const body = document.body,\n                zc = this._zoomContainer;\n\n            this._oldBodyScroll = {\n                body: body.style.overflow,\n                zc: zc.style.overflow,\n                zcParent: zc.parentNode.style.overflow,\n            };\n            css(document.body, {\n                overflow: old.body,\n            });\n            css(this._zoomContainer.parentNode, {\n                overflow: old.zc,\n            });\n            css(this._zoomContainer, {\n                overflow: old.zcParent,\n            });\n\n            this._oldBodyScroll = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Set or update style\n     * @ignore\n     * @param {Object} style style options\n     * @param {Boolean} isUpdate update or set style\n     * @return {PoPoInstance} current popo instance\n     */\n    _setStyle(style, isUpdate) {\n        if (isObject(style)) {\n            const { _vc, options, container, _zoomContainer } = this;\n\n            if (!isEmptyObject(this.style)) {\n                removeStyle(container, _vc, options, this.style, this);\n            }\n            this.style = isUpdate ? merge(this.style, style) : style;\n            _initStyle(container, _vc, _zoomContainer,\n                _zoomContainer.parentNode, options, this._pane, this.style, true);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set style\n     * @ignore\n     * @param {Object} style style options\n     * @return {PoPoInstance} current popo instance\n     */\n    setStyle(style) {\n        return this._setStyle(style, false);\n    }\n\n    /**\n     * Update style\n     * @param {Object} style style option\n     * @return {PoPoInstance} current popo instance\n     */\n    updateStyle(style) {\n        return this._setStyle(style, true);\n    }\n\n    /**\n     * 移除主题\n     * @return {PoPoInstance} current popo instance\n     */\n    removeStyle() {\n        const { style, _vc, options, container } = this;\n\n        if (style) {\n            removeStyle(container, _vc, options, style, this);\n            this.style = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Add screen to container\n     * @param {String|HTMLElement} container container id or container dom.\n     * @param {Number} delay render delay @default 0\n     * @return {PoPoInstance} current popo instance\n     */\n    addTo(container, delay) {\n        if (this.container) {\n            throw new Error(ERROR_MSG.POPO_EXSIT);\n        } else {\n            const c = get(container);\n\n            if (c && isDOM(c)) {\n                this.container = c;\n                if (delay > 0) {\n                    setTimeout(() => { this._initContainer(); }, delay);\n                } else {\n                    this._initContainer();\n                }\n            }\n        }\n\n        return this;\n    }\n\n}\n\nmixins(PoPoInstance.prototype, [dragHandle, resize, wheelzoom]);\n","import { version } from '../package.json';\nimport * as DomUtil from './dom/dom';\nimport * as DomEvent from './dom/dom_event';\nimport * as Util from './utils/util';\nimport { validateAllLy as validateLayoutExp } from './popo/core/layout';\nimport Browser from './utils/browser';\nimport PoPoInstance from './popo/index';\nimport ERR from './constant/error';\n\nconst P = {\n\n    version,\n\n    instances: [],\n\n    init(options) {\n        const oc = options.container;\n        let popo = null;\n\n        if (oc) {\n            const c = Util.get(oc);\n\n            if (Util.isDOM(c)) {\n                const instance = Util.getObjectFromArray(P.instances, 'container', c);\n\n                if (instance) {\n                    throw new Error(ERR.POPO_EXSIT);\n                }\n            } else {\n                throw new Error(ERR.CONTAINER_ERR);\n            }\n        }\n\n        popo = new PoPoInstance(options);\n\n        P.instances.push(popo);\n\n        return popo;\n    },\n\n    extend: (obj) => {\n        if (Util.isObject(obj)) {\n            const keys = Object.keys(P);\n\n            for (const key in obj) {\n                if (Util.contain(keys, key) < 0) {\n                    if (Util.isFunction(obj[key])) {\n                        P[key] = (...args) => {\n                            const result = obj[key].apply(null, args);\n\n                            return result !== undefined ? result : P;\n                        }\n                    } else {\n                        P[key] = obj[key];\n                    }\n                }\n            }\n        }\n    },\n\n    getInstanceByDom: (container) => {\n        const c = Util.get(container);\n\n        return Util.isDOM(c) ? Util.getObjectFromArray(P.instances, 'container', c) : null;\n    },\n\n    dispose: (target) => {\n        if (!target) return;\n        if (target instanceof PoPoInstance) {\n            const index = Util.contain(P.instances, target);\n\n            if (index >= 0) {\n                P.instances.splice(index, 1);\n                target.remove();\n            }\n        }\n        if (target && (Util.isString(target) || Util.isDOM(target))) {\n            const c = Util.get(target);\n\n            if (Util.isDOM(c)) {\n                const instance = Util.removeObjectFromArray(P.instances, 'container', c);\n\n                if (instance) {\n                    instance[0].remove();\n                }\n            }\n        }\n    },\n\n    DomUtil,\n\n    DomEvent,\n\n    Browser,\n\n    Util,\n};\n\nconst { bind, merge, extend } = Util,\n    { addClass, hasClass, removeClass, css, attr, isHidden, create, html } = DomUtil;\n\nP.extend({ addClass, hasClass, removeClass, css, attr, isHidden, create, html, bind, merge, extend, validateLayoutExp });\n\nif (typeof window !== 'undefined') {\n    const oldP = window.P;\n\n    P.noConflict = function noConflict() {\n        window.P = oldP;\n\n        return this;\n    };\n\n    window.P = P;\n}\n\nexport default P;\n"],"names":["stamp","obj","_popo_id","lastId","bind","fn","slice","Array","prototype","args","call","arguments","apply","length","concat","extend","dest","j","len","src","i","legalNumber","v","min","max","isNumber","trim","str","isString","replace","splitWords","split","type","o","t","Object","toString","isArray","isFunction","isObject","isEmptyObject","e","validateNumber","num","isNaN","Number","mixin","sources","key","mixins","sourcesArr","forEach","source","getObjectFromArray","arr","value","index","removeObjectFromArray","undefined","splice","get","dom","document","getElementById","_isDOM1","HTMLElement","_isDOM2","nodeType","nodeName","cloneJsonObject","JSON","parse","stringify","merge","target","copyObj","copyFuns","newObj","getPercentage","number","init","capitalize","charAt","toUpperCase","reverseCamelcase","n","l","toLowerCase","camelize","indexOf","match","unique","array","r","push","firstUpperCase","L","isPercentage","translatePercentage","substring","translateNumberToPercentage","contain","item","throttle","time","context","later","wrapperFn","lock","formatNum","digits","pow","Math","round","formatNumber","getCssSize","size","scale","getPureValue","multiplyBy","m","val","formatMargin","margin","p","map","_getScaleMargin","formatMargin2","String","distinct","loop","NullFn","guid","c","random","stampUUID","uuid","insertToArr","testProp","props","style","documentElement","getClass","el","isDOM","className","baseVal","hasClass","name","classList","contains","RegExp","test","setClass","addClass","classes","add","removeClass","names","remove","cls","setStyle","styles","addOn","_key","css","getStyle","create","tag","classnames","container","createElement","appendChild","html","innerHTML","isHidden","addHStyle","head","querySelector","oldStyle","node","insertBefore","removeByClass","classname","querySelectorAll","parentNode","removeChild","removeByRole","attr","CT","ROLE","query","filter","eachChild","parent","childNodes","getAttribute","setAttribute","currentStyle","window","getComputedStyle","getPureStyle","getRect","getBoundingClientRect","getTargetDataId","id","COMPONENT_ID_KEY","getId","createPublicStyle","POPO","TARGET","PANE","GRID_L_C_R","GRID_LEFT","GRID_CENTER","GRID_RIGHT","GRID_FOOT","GRID_HEAD","INFO","EXT_PANE","NAME","addOne","handler","event","eventsKey","this","addEventListener","attachEvent","removeOne","removeEventListener","detachEvent","stopPropagation","originalEvent","_stopped","cancelBubble","preventDefault","returnValue","stop","on","types","off","getWheelDelta","Browser","edge","wheelDeltaY","deltaY","deltaMode","wheelPxFactor","deltaX","deltaZ","wheelDelta","detail","abs","sumArrFirst","sum","a","sumItem","sumArr","validateAllLy","ly","rows","cols","startType","validateCore","count","great","firstCount","initSize","unitRow","unitCol","sizes","SINGLE_ROW","toFixed","COL","validateLayoutNumber","end","getLayoutWrapCount","layouts","start","validateLayout","Error","ERROR_MSG","LY_INVALID","getRowClassName","row","getColClassName","col","hasRow","ROW","generateEvLy","rowNumber","colNumber","floor","result","colsLength","newVNode","classNames","setId","Vnode","addClassName","insertTo","setRole","PANEL","removeUnused","vc","panels","selectPanel","vnode","children","role","newLy","layout","childrens","vparentNode","updateVnodeSize","options","setSize","keys","setWidth","setHeight","updateFixedSize","fixedHeight","fixedWidth","height","width","gutter","updateRealsize","freeLy","join","padding","paddingLeft","left","right","paddingTop","top","bottom","ch","clientHeight","cw","clientWidth","rect","th","tw","_origionWidth","_origionHeight","child","fixedTotalHeight","layoutStartType","fixedTotalWidth","updateAbs","setAbs","nodes","step","_step","panel","setTop","setLeft","clearClassName","PANEL_DEFAULT_ZINDEX","initLayoutSet","MIN_LY_COUNT","_ly","toLocaleLowerCase","fh","fw","LY_FIXED_LESS","initLayout","lys","updateLayout","genPanelLy","headHeight","footHeight","rightWidth","leftWidth","addPanel","fontScale","containerHeight","centerWidth","containerNode","marginBottom","marginTop","addLayoutToPanel","queryByRole","PANEL_CONTAINER","position","addPanels","enable","df","default","custom","customIds","fullId","fullZIndex","customVnodes","_vn","getChild","zIndex","update","n2px","fz","px2n","_addGGL","realDom","show","PANEL_GUIDELINES","ggl","GUIDELINES","color","lineSize","lines","SVG","svg","ceil","points","points2","y","x","d","stroke","strokeWidth","addPanelGuidelines","dev","panelGuideline","gg","ids","getAllIds","getRealIds","alias","createPanelInfo","fontSize","info","setHtml","createDebugInfo","background","fontColor","isWidget","span","createSVGText","text","fill","addGuidelines","guideline","gl","identifier","unitRowHeight","unitColWidth","addSplitLine","splitline","SPLITLINES","sl","infoY","infoX","loadDev","createPane","pd","createVc","CONTAINER","vcToDom","stampInner","ZOOMPANE","ZOOMCONTAINER","_popo_inner","addExtend","createPanel","defaultPanel","panelOption","getNewId","isExtend","extendInfo","responsive","_style","defaultStyle","son","addNode","loadExtends","exts","ext","updateExtends","panelWidth","panelHeight","_oldHeight","_oldWidth","_oldTop","_oldLeft","getIdByAlias","_alias","getAliasById","_id","getNode","getNodesByPanel","getRealNodesByPanel","foot","center","lcr","panelContainer","getRealdomsById","realId","getNodeById","setHide","vcontainer","showIds","hideType","createZoomContainer","z","zoom","zoomContainer","zoomPane","control","zoomControl","ZOOMIN","ZOOMINFO","ZOOMOUT","isInPoPo","veach","updateHideIds","all","done","_each","elements","_full","oldSize","_unFull","_removeStyle","option","_class","_css","removeClassName","removeStyle","com","_setStyle","isUpdate","overwrite","setClassName","_initStyle","zoomParent","styleOption","inner","pane","getNewSize","old","percent","vsize","vvsize","totalSize","setNodeLayout","vvnode","fullzIndex","percentWidth","percentHeight","percentLeft","percentTop","updateOldVc","vn","vvn","getRole","_setOverflow","overflow","setOverflows","panelOverflow","updateContainerSize","updateVCC","vcc","lineHeight","_setNodeLineHeight","pt","pb","bt","bb","setLineheight","op","_t","insertTplDomToVc","loadTemplate","env","hasAttribute","title","els","__t","hasChildNodes","restorePanelTemplate","firstChild","restoreTemplate","TPL","removeAttribute","getScrollPane","scrollLeft","scrollTop","focusOn","offsetX","offsetY","zoomUpdate","togglePoPo","display","swapArrItems","index1","index2","moveToFirst","unshift","moveToLast","NM","TRANSFORM","TRANSITION","TRANSITION_END","ua","navigator","userAgent","doc","innerWidth","body","innerHeight","ie","webkit","mobile","orientation","EVENT","win","chrome","devicePixelRatio","gecko","VNode","cns","_query","that","removeNode","realDomClass","w","h","_getSize","render","lastChild","getLastChild","ROWS","COLS","prefix","WRAP","attrs","realNode","_stamp","preffix","FILTER","LINER_GRADIENT","RADIAL_GRADIENT","MARKER","DRAW_ID_KEY","filters","f","pureKeys","_filter","stops","setAttributeNS","hidden","createElementNS","globalStyle","VSVG","defs","_setId","_getDefById","childId","cx","cy","_stops","x1","y1","x2","y2","units","g","u","markers","marker","patterns","pattern","_scrollPane","clientX","clientY","_startDrag","_onDragging","_onDragend","dr","_onDragStart","drag","_pane","dragPane","ui","updateInterval","_onResize","trackResize","interval","renderDelay","_fn","_context","_this","ratio","_wheelScroll","delta","DomEvent","startTime","Date","DEBOUNCE","timer","setTimeout","_performZoom","disableScrollWheel","_onWheelScroll","PoPoInstance","defaultOptions","_initOptions","_fullId","_fullZIndex","_hideIds","hideIds","_showIds","_sizes","_vc","_initContainer","widgets","rem","_oldContainerStyle","_zoomContainer","scroll","overflowVisible","overflowX","overflowY","_vpanels","extends","_getId","_render","delay","_onRender","getIds","_resize","_updateSize","auto","MIN_ZOOM","MAX_ZOOM","_initZoomEvent","wheelZoom","enableScrollWheel","enableDrag","focus","onload","zoomin","zoomout","_zoomInfoPane","_this2","preview","$width","$height","_this3","_getXComponent","clearTpl","_this4","_getNode","clear","clearPanel","_this5","exsit","cid","rcid","_this6","_setPanel","_this7","pl","getLeft","getTop","_oldZIndex","pw","getWidth","ph","getHeight","_classChange","_styleChange","_this8","_restorePanel","_this10","_this11","targets","_targets","_remove","_this12","disableDrag","_removeResize","_oldBodyScroll","unFull","_updatePanel","zc","zcParent","POPO_EXSIT","dragHandle","resize","wheelzoom","P","oc","popo","Util","ERR","CONTAINER_ERR","instances","instance","DomUtil","validateLayoutExp","oldP","noConflict"],"mappings":"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"}